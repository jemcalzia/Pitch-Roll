

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Feb 18 10:42:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245                           
   246                           	psect	strings
   247  1000                     __pstrings:	
   248  1000                     stringtab:	
   249  1000                     __stringtab:	
   250                           
   251                           ;	String table - string pointers are 1 byte each
   252  1000  1BFF               	btfsc	btemp+1,7
   253  1001  280A               	ljmp	stringcode
   254  1002  1383               	bcf	3,7
   255  1003  187F               	btfsc	btemp+1,0
   256  1004  1783               	bsf	3,7
   257  1005  0800               	movf	0,w
   258  1006  0A84               	incf	4,f
   259  1007  1903               	skipnz
   260  1008  0AFF               	incf	btemp+1,f
   261  1009  0008               	return
   262  100A                     stringcode:	
   263  100A                     stringdir:	
   264  100A  3010               	movlw	high stringdir
   265  100B  008A               	movwf	10
   266  100C  0804               	movf	4,w
   267  100D  0A84               	incf	4,f
   268  100E  0782               	addwf	2,f
   269  100F                     __stringbase:	
   270  100F  3400               	retlw	0
   271  1010                     __end_of__stringtab:	
   272  1010                     __powers_:	
   273  1010  3400               	retlw	0
   274  1011  3400               	retlw	0
   275  1012  3480               	retlw	128
   276  1013  343F               	retlw	63
   277  1014  3400               	retlw	0
   278  1015  3400               	retlw	0
   279  1016  3420               	retlw	32
   280  1017  3441               	retlw	65
   281  1018  3400               	retlw	0
   282  1019  3400               	retlw	0
   283  101A  34C8               	retlw	200
   284  101B  3442               	retlw	66
   285  101C  3400               	retlw	0
   286  101D  3400               	retlw	0
   287  101E  347A               	retlw	122
   288  101F  3444               	retlw	68
   289  1020  3400               	retlw	0
   290  1021  3440               	retlw	64
   291  1022  341C               	retlw	28
   292  1023  3446               	retlw	70
   293  1024  3400               	retlw	0
   294  1025  3450               	retlw	80
   295  1026  34C3               	retlw	195
   296  1027  3447               	retlw	71
   297  1028  3400               	retlw	0
   298  1029  3424               	retlw	36
   299  102A  3474               	retlw	116
   300  102B  3449               	retlw	73
   301  102C  3480               	retlw	128
   302  102D  3496               	retlw	150
   303  102E  3418               	retlw	24
   304  102F  344B               	retlw	75
   305  1030  3420               	retlw	32
   306  1031  34BC               	retlw	188
   307  1032  34BE               	retlw	190
   308  1033  344C               	retlw	76
   309  1034  3428               	retlw	40
   310  1035  346B               	retlw	107
   311  1036  346E               	retlw	110
   312  1037  344E               	retlw	78
   313  1038  34F9               	retlw	249
   314  1039  3402               	retlw	2
   315  103A  3415               	retlw	21
   316  103B  3450               	retlw	80
   317  103C  34EC               	retlw	236
   318  103D  3478               	retlw	120
   319  103E  34AD               	retlw	173
   320  103F  3460               	retlw	96
   321  1040  34CA               	retlw	202
   322  1041  34F2               	retlw	242
   323  1042  3449               	retlw	73
   324  1043  3471               	retlw	113
   325  1044                     __end_of__powers_:	
   326  1044                     __npowers_:	
   327  1044  3400               	retlw	0
   328  1045  3400               	retlw	0
   329  1046  3480               	retlw	128
   330  1047  343F               	retlw	63
   331  1048  34CD               	retlw	205
   332  1049  34CC               	retlw	204
   333  104A  34CC               	retlw	204
   334  104B  343D               	retlw	61
   335  104C  340A               	retlw	10
   336  104D  34D7               	retlw	215
   337  104E  3423               	retlw	35
   338  104F  343C               	retlw	60
   339  1050  346F               	retlw	111
   340  1051  3412               	retlw	18
   341  1052  3483               	retlw	131
   342  1053  343A               	retlw	58
   343  1054  3417               	retlw	23
   344  1055  34B7               	retlw	183
   345  1056  34D1               	retlw	209
   346  1057  3438               	retlw	56
   347  1058  34AC               	retlw	172
   348  1059  34C5               	retlw	197
   349  105A  3427               	retlw	39
   350  105B  3437               	retlw	55
   351  105C  34BD               	retlw	189
   352  105D  3437               	retlw	55
   353  105E  3486               	retlw	134
   354  105F  3435               	retlw	53
   355  1060  3495               	retlw	149
   356  1061  34BF               	retlw	191
   357  1062  34D6               	retlw	214
   358  1063  3433               	retlw	51
   359  1064  3477               	retlw	119
   360  1065  34CC               	retlw	204
   361  1066  342B               	retlw	43
   362  1067  3432               	retlw	50
   363  1068  345F               	retlw	95
   364  1069  3470               	retlw	112
   365  106A  3489               	retlw	137
   366  106B  3430               	retlw	48
   367  106C  34FF               	retlw	255
   368  106D  34E6               	retlw	230
   369  106E  34DB               	retlw	219
   370  106F  342E               	retlw	46
   371  1070  3408               	retlw	8
   372  1071  34E5               	retlw	229
   373  1072  343C               	retlw	60
   374  1073  341E               	retlw	30
   375  1074  3460               	retlw	96
   376  1075  3442               	retlw	66
   377  1076  34A2               	retlw	162
   378  1077  340D               	retlw	13
   379  1078                     __end_of__npowers_:	
   380  1078                     _dpowers:	
   381  1078  3401               	retlw	1
   382  1079  3400               	retlw	0
   383  107A  3400               	retlw	0
   384  107B  3400               	retlw	0
   385  107C  340A               	retlw	10
   386  107D  3400               	retlw	0
   387  107E  3400               	retlw	0
   388  107F  3400               	retlw	0
   389  1080  3464               	retlw	100
   390  1081  3400               	retlw	0
   391  1082  3400               	retlw	0
   392  1083  3400               	retlw	0
   393  1084  34E8               	retlw	232
   394  1085  3403               	retlw	3
   395  1086  3400               	retlw	0
   396  1087  3400               	retlw	0
   397  1088  3410               	retlw	16
   398  1089  3427               	retlw	39
   399  108A  3400               	retlw	0
   400  108B  3400               	retlw	0
   401  108C  34A0               	retlw	160
   402  108D  3486               	retlw	134
   403  108E  3401               	retlw	1
   404  108F  3400               	retlw	0
   405  1090  3440               	retlw	64
   406  1091  3442               	retlw	66
   407  1092  340F               	retlw	15
   408  1093  3400               	retlw	0
   409  1094  3480               	retlw	128
   410  1095  3496               	retlw	150
   411  1096  3498               	retlw	152
   412  1097  3400               	retlw	0
   413  1098  3400               	retlw	0
   414  1099  34E1               	retlw	225
   415  109A  34F5               	retlw	245
   416  109B  3405               	retlw	5
   417  109C  3400               	retlw	0
   418  109D  34CA               	retlw	202
   419  109E  349A               	retlw	154
   420  109F  343B               	retlw	59
   421  10A0                     __end_of_dpowers:	
   422  0005                     _PORTA	set	5
   423  0006                     _PORTB	set	6
   424  0013                     _SSPBUF	set	19
   425  0014                     _SSPCON	set	20
   426  0028                     _RA0	set	40
   427  0029                     _RA1	set	41
   428  0063                     _SSPIF	set	99
   429  005E                     _PEIE	set	94
   430  005F                     _GIE	set	95
   431  0086                     _TRISB	set	134
   432  0085                     _TRISA	set	133
   433  008F                     _OSCCONbits	set	143
   434  0091                     _SSPCON2bits	set	145
   435  0094                     _SSPSTAT	set	148
   436  0093                     _SSPADD	set	147
   437  0091                     _SSPCON2	set	145
   438  0463                     _SSPIE	set	1123
   439  048B                     _RCEN	set	1163
   440  043C                     _TRISC4	set	1084
   441  043B                     _TRISC3	set	1083
   442  0189                     _ANSELH	set	393
   443  0188                     _ANSEL	set	392
   444  10A0                     STR_4:	
   445  10A0  3441               	retlw	65	;'A'
   446  10A1  3444               	retlw	68	;'D'
   447  10A2  3443               	retlw	67	;'C'
   448  10A3  3420               	retlw	32	;' '
   449  10A4  3420               	retlw	32	;' '
   450  10A5  3420               	retlw	32	;' '
   451  10A6  344E               	retlw	78	;'N'
   452  10A7  3455               	retlw	85	;'U'
   453  10A8  344D               	retlw	77	;'M'
   454  10A9  3420               	retlw	32	;' '
   455  10AA  3420               	retlw	32	;' '
   456  10AB  3449               	retlw	73	;'I'
   457  10AC  344D               	retlw	77	;'M'
   458  10AD  3455               	retlw	85	;'U'
   459  10AE  3400               	retlw	0
   460  10AF                     STR_3:	
   461  10AF  3425               	retlw	37	;'%'
   462  10B0  342E               	retlw	46	;'.'
   463  10B1  3432               	retlw	50	;'2'
   464  10B2  3466               	retlw	102	;'f'
   465  10B3  3420               	retlw	32	;' '
   466  10B4  3420               	retlw	32	;' '
   467  10B5  3400               	retlw	0
   468  10B6                     STR_1:	
   469  10B6  3425               	retlw	37	;'%'
   470  10B7  342E               	retlw	46	;'.'
   471  10B8  3431               	retlw	49	;'1'
   472  10B9  3466               	retlw	102	;'f'
   473  10BA  3400               	retlw	0
   474  10BB                     STR_2:	
   475  10BB  3425               	retlw	37	;'%'
   476  10BC  3475               	retlw	117	;'u'
   477  10BD  3400               	retlw	0
   478                           
   479                           ; #config settings
   480  0000                     
   481                           	psect	cinit
   482  07F5                     start_initialization:	
   483  07F5                     __initialization:	
   484                           
   485                           ; Clear objects allocated to BANK1
   486  07F5  1383               	bcf	3,7	;select IRP bank0
   487  07F6  30C6               	movlw	low __pbssBANK1
   488  07F7  0084               	movwf	4
   489  07F8  30EB               	movlw	low (__pbssBANK1+37)
   490  07F9  160A  158A  2249   	fcall	clear_ram0
   491  07FC                     end_of_initialization:	
   492                           ;End of C runtime variable initialization code
   493                           
   494  07FC                     __end_of__initialization:	
   495  07FC  0183               	clrf	3
   496  07FD  120A  158A  2867   	ljmp	_main	;jump to C main() function
   497                           
   498                           	psect	bssBANK1
   499  00C6                     __pbssBANK1:	
   500  00C6                     _adc_value:	
   501  00C6                     	ds	4
   502  00CA                     _MPU:	
   503  00CA                     	ds	4
   504  00CE                     _adc_read:	
   505  00CE                     	ds	2
   506  00D0                     _mpu:	
   507  00D0                     	ds	2
   508  00D2                     _mpu2:	
   509  00D2                     	ds	2
   510  00D4                     _mpu1:	
   511  00D4                     	ds	2
   512  00D6                     _counter_read:	
   513  00D6                     	ds	2
   514  00D8                     _sensor:	
   515  00D8                     	ds	10
   516  00E2                     _voltage:	
   517  00E2                     	ds	5
   518  00E7                     _counter:	
   519  00E7                     	ds	4
   520                           
   521                           	psect	clrtext
   522  1A49                     clear_ram0:	
   523                           ;	Called with FSR containing the base address, and
   524                           ;	W with the last address+1
   525                           
   526  1A49  0064               	clrwdt	;clear the watchdog before getting into this loop
   527  1A4A                     clrloop0:	
   528  1A4A  0180               	clrf	0	;clear RAM location pointed to by FSR
   529  1A4B  0A84               	incf	4,f	;increment pointer
   530  1A4C  0604               	xorwf	4,w	;XOR with final address
   531  1A4D  1903               	btfsc	3,2	;have we reached the end yet?
   532  1A4E  3400               	retlw	0	;all done for this memory range, return
   533  1A4F  0604               	xorwf	4,w	;XOR again to restore value
   534  1A50  2A4A               	goto	clrloop0	;do the next byte
   535                           
   536                           	psect	cstackBANK1
   537  00A0                     __pcstackBANK1:	
   538  00A0                     ?_sprintf:	
   539  00A0                     sprintf@f:	
   540                           ; 2 bytes @ 0x0
   541                           
   542                           
   543                           ; 1 bytes @ 0x0
   544  00A0                     	ds	5
   545  00A5                     ??_sprintf:	
   546                           
   547                           ; 1 bytes @ 0x5
   548  00A5                     	ds	5
   549  00AA                     _sprintf$908:	
   550                           
   551                           ; 4 bytes @ 0xA
   552  00AA                     	ds	4
   553  00AE                     sprintf@ap:	
   554                           
   555                           ; 1 bytes @ 0xE
   556  00AE                     	ds	1
   557  00AF                     sprintf@flag:	
   558                           
   559                           ; 2 bytes @ 0xF
   560  00AF                     	ds	2
   561  00B1                     sprintf@val:	
   562                           
   563                           ; 4 bytes @ 0x11
   564  00B1                     	ds	4
   565  00B5                     sprintf@eexp:	
   566                           
   567                           ; 2 bytes @ 0x15
   568  00B5                     	ds	2
   569  00B7                     sprintf@tmpval:	
   570                           
   571                           ; 4 bytes @ 0x17
   572  00B7                     	ds	4
   573  00BB                     sprintf@sp:	
   574                           
   575                           ; 1 bytes @ 0x1B
   576  00BB                     	ds	1
   577  00BC                     sprintf@prec:	
   578                           
   579                           ; 2 bytes @ 0x1C
   580  00BC                     	ds	2
   581  00BE                     sprintf@fval:	
   582                           
   583                           ; 4 bytes @ 0x1E
   584  00BE                     	ds	4
   585  00C2                     sprintf@c:	
   586                           
   587                           ; 1 bytes @ 0x22
   588  00C2                     	ds	1
   589  00C3                     ??_main:	
   590                           
   591                           ; 1 bytes @ 0x23
   592  00C3                     	ds	3
   593                           
   594                           	psect	cstackCOMMON
   595  0070                     __pcstackCOMMON:	
   596  0070                     ?_isdigit:	
   597  0070                     ?___fleq:	
   598                           ; 1 bit 
   599                           
   600  0070                     ?___flge:	
   601                           ; 1 bit 
   602                           
   603  0070                     ??_isdigit:	
   604                           ; 1 bit 
   605                           
   606  0070                     ?_I2C_Master_Wait:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ??_I2C_Master_Wait:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_I2C_Master_Start:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ??_I2C_Master_Start:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_I2C_Master_Stop:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ??_I2C_Master_Stop:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_I2C_Master_Write:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_LCD8_write:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ??_LCD8_write:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_LCD8_cmd:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ??_LCD8_cmd:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_LCD8_clear:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_LCD8_begin:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_oscilator_begin:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ??_oscilator_begin:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_mpu_begin:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_mpu_start:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_mpu_data_read:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_setup:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_main:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?__Umul8_16:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_I2C_Master_Read:	
   670                           ; 2 bytes @ 0x0
   671                           
   672  0070                     ?___wmul:	
   673                           ; 2 bytes @ 0x0
   674                           
   675  0070                     ?___awmod:	
   676                           ; 2 bytes @ 0x0
   677                           
   678  0070                     ?___lwmod:	
   679                           ; 2 bytes @ 0x0
   680                           
   681  0070                     ?__tdiv_to_l_:	
   682                           ; 2 bytes @ 0x0
   683                           
   684  0070                     ?__div_to_l_:	
   685                           ; 4 bytes @ 0x0
   686                           
   687  0070                     ?___lldiv:	
   688                           ; 4 bytes @ 0x0
   689                           
   690  0070                     ?___flneg:	
   691                           ; 4 bytes @ 0x0
   692                           
   693  0070                     ?___xxtofl:	
   694                           ; 4 bytes @ 0x0
   695                           
   696  0070                     _isdigit$692:	
   697                           ; 4 bytes @ 0x0
   698                           
   699  0070                     __Umul8_16@multiplicand:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     I2C_Master_Write@d:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     I2C_Master_Read@a:	
   706                           ; 2 bytes @ 0x0
   707                           
   708  0070                     ___wmul@multiplier:	
   709                           ; 2 bytes @ 0x0
   710                           
   711  0070                     ___awmod@divisor:	
   712                           ; 2 bytes @ 0x0
   713                           
   714  0070                     ___lwmod@divisor:	
   715                           ; 2 bytes @ 0x0
   716                           
   717  0070                     ___lldiv@divisor:	
   718                           ; 2 bytes @ 0x0
   719                           
   720  0070                     __div_to_l_@f1:	
   721                           ; 4 bytes @ 0x0
   722                           
   723  0070                     ___fleq@ff1:	
   724                           ; 4 bytes @ 0x0
   725                           
   726  0070                     ___flge@ff1:	
   727                           ; 4 bytes @ 0x0
   728                           
   729  0070                     ___flneg@f1:	
   730                           ; 4 bytes @ 0x0
   731                           
   732  0070                     __tdiv_to_l_@f1:	
   733                           ; 4 bytes @ 0x0
   734                           
   735  0070                     ___xxtofl@val:	
   736                           ; 4 bytes @ 0x0
   737                           
   738                           
   739                           ; 4 bytes @ 0x0
   740  0070                     	ds	1
   741  0071                     LCD8_write@data:	
   742  0071                     oscilator_begin@freq:	
   743                           ; 1 bytes @ 0x1
   744                           
   745  0071                     isdigit@c:	
   746                           ; 1 bytes @ 0x1
   747                           
   748                           
   749                           ; 1 bytes @ 0x1
   750  0071                     	ds	1
   751  0072                     ??__Umul8_16:	
   752  0072                     ??_I2C_Master_Write:	
   753                           ; 1 bytes @ 0x2
   754                           
   755  0072                     ??_I2C_Master_Read:	
   756                           ; 1 bytes @ 0x2
   757                           
   758  0072                     ?_LCD8_strWrite:	
   759                           ; 1 bytes @ 0x2
   760                           
   761  0072                     ??_mpu_begin:	
   762                           ; 1 bytes @ 0x2
   763                           
   764  0072                     ??_mpu_start:	
   765                           ; 1 bytes @ 0x2
   766                           
   767  0072                     LCD8_cmd@data:	
   768                           ; 1 bytes @ 0x2
   769                           
   770  0072                     LCD8_strWrite@data:	
   771                           ; 1 bytes @ 0x2
   772                           
   773  0072                     ___wmul@multiplicand:	
   774                           ; 2 bytes @ 0x2
   775                           
   776  0072                     ___awmod@dividend:	
   777                           ; 2 bytes @ 0x2
   778                           
   779  0072                     ___lwmod@dividend:	
   780                           ; 2 bytes @ 0x2
   781                           
   782                           
   783                           ; 2 bytes @ 0x2
   784  0072                     	ds	1
   785  0073                     ?_LCD8_set_cursor:	
   786  0073                     ??_LCD8_clear:	
   787                           ; 1 bytes @ 0x3
   788                           
   789  0073                     ??_LCD8_begin:	
   790                           ; 1 bytes @ 0x3
   791                           
   792  0073                     LCD8_set_cursor@column:	
   793                           ; 1 bytes @ 0x3
   794                           
   795                           
   796                           ; 1 bytes @ 0x3
   797  0073                     	ds	1
   798  0074                     ??_LCD8_set_cursor:	
   799  0074                     ??_LCD8_strWrite:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0074                     ??___wmul:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0074                     ??___awmod:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0074                     ??___flneg:	
   809                           ; 1 bytes @ 0x4
   810                           
   811  0074                     ??___lwmod:	
   812                           ; 1 bytes @ 0x4
   813                           
   814  0074                     ??___xxtofl:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0074                     mpu_start@mpu_register:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0074                     I2C_Master_Read@temp:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0074                     ___wmul@product:	
   824                           ; 2 bytes @ 0x4
   825                           
   826  0074                     __Umul8_16@product:	
   827                           ; 2 bytes @ 0x4
   828                           
   829  0074                     ___lldiv@dividend:	
   830                           ; 2 bytes @ 0x4
   831                           
   832  0074                     __div_to_l_@f2:	
   833                           ; 4 bytes @ 0x4
   834                           
   835  0074                     ___fleq@ff2:	
   836                           ; 4 bytes @ 0x4
   837                           
   838  0074                     ___flge@ff2:	
   839                           ; 4 bytes @ 0x4
   840                           
   841  0074                     __tdiv_to_l_@f2:	
   842                           ; 4 bytes @ 0x4
   843                           
   844                           
   845                           ; 4 bytes @ 0x4
   846  0074                     	ds	1
   847  0075                     LCD8_set_cursor@cursor:	
   848  0075                     LCD8_strWrite@i:	
   849                           ; 1 bytes @ 0x5
   850                           
   851  0075                     ___awmod@counter:	
   852                           ; 1 bytes @ 0x5
   853                           
   854  0075                     ___lwmod@counter:	
   855                           ; 1 bytes @ 0x5
   856                           
   857                           
   858                           ; 1 bytes @ 0x5
   859  0075                     	ds	1
   860  0076                     ??_mpu_data_read:	
   861  0076                     ?_read_data:	
   862                           ; 1 bytes @ 0x6
   863                           
   864  0076                     ?___lwdiv:	
   865                           ; 1 bytes @ 0x6
   866                           
   867  0076                     LCD8_set_cursor@row:	
   868                           ; 2 bytes @ 0x6
   869                           
   870  0076                     read_data@adc_slave:	
   871                           ; 1 bytes @ 0x6
   872                           
   873  0076                     ___awmod@sign:	
   874                           ; 1 bytes @ 0x6
   875                           
   876  0076                     ___lwdiv@divisor:	
   877                           ; 1 bytes @ 0x6
   878                           
   879  0076                     __Umul8_16@word_mpld:	
   880                           ; 2 bytes @ 0x6
   881                           
   882                           
   883                           ; 2 bytes @ 0x6
   884  0076                     	ds	1
   885  0077                     ??_read_data:	
   886  0077                     ?___awdiv:	
   887                           ; 1 bytes @ 0x7
   888                           
   889  0077                     ___awdiv@divisor:	
   890                           ; 2 bytes @ 0x7
   891                           
   892                           
   893                           ; 2 bytes @ 0x7
   894  0077                     	ds	1
   895  0078                     ??__tdiv_to_l_:	
   896  0078                     ??__div_to_l_:	
   897                           ; 1 bytes @ 0x8
   898                           
   899  0078                     ??___lldiv:	
   900                           ; 1 bytes @ 0x8
   901                           
   902  0078                     ??___fleq:	
   903                           ; 1 bytes @ 0x8
   904                           
   905  0078                     ??___flge:	
   906                           ; 1 bytes @ 0x8
   907                           
   908  0078                     ___xxtofl@sign:	
   909                           ; 1 bytes @ 0x8
   910                           
   911  0078                     __Umul8_16@multiplier:	
   912                           ; 1 bytes @ 0x8
   913                           
   914  0078                     ___lwdiv@dividend:	
   915                           ; 1 bytes @ 0x8
   916                           
   917                           
   918                           ; 2 bytes @ 0x8
   919  0078                     	ds	1
   920  0079                     read_data@counter_slave:	
   921  0079                     ___xxtofl@exp:	
   922                           ; 1 bytes @ 0x9
   923                           
   924  0079                     ___awdiv@dividend:	
   925                           ; 1 bytes @ 0x9
   926                           
   927  0079                     ___lldiv@quotient:	
   928                           ; 2 bytes @ 0x9
   929                           
   930                           
   931                           ; 4 bytes @ 0x9
   932  0079                     	ds	1
   933  007A                     ??___lwdiv:	
   934  007A                     ___xxtofl@arg:	
   935                           ; 1 bytes @ 0xA
   936                           
   937                           
   938                           ; 4 bytes @ 0xA
   939  007A                     	ds	1
   940  007B                     ??___awdiv:	
   941  007B                     ___lwdiv@quotient:	
   942                           ; 1 bytes @ 0xB
   943                           
   944                           
   945                           ; 2 bytes @ 0xB
   946  007B                     	ds	2
   947  007D                     ___lldiv@counter:	
   948  007D                     ___lwdiv@counter:	
   949                           ; 1 bytes @ 0xD
   950                           
   951                           
   952                           ; 1 bytes @ 0xD
   953  007D                     	ds	1
   954  007E                     ??_setup:	
   955  007E                     ??___flsub:	
   956                           ; 1 bytes @ 0xE
   957                           
   958                           
   959                           	psect	cstackBANK0
   960  0020                     __pcstackBANK0:	
   961                           ; 1 bytes @ 0xE
   962                           
   963  0020                     ?_I2C_Master_Init:	
   964  0020                     ?___llmod:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0020                     ?___fldiv:	
   968                           ; 4 bytes @ 0x0
   969                           
   970  0020                     ___awdiv@counter:	
   971                           ; 4 bytes @ 0x0
   972                           
   973  0020                     I2C_Master_Init@c:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0020                     __div_to_l_@quot:	
   977                           ; 4 bytes @ 0x0
   978                           
   979  0020                     __tdiv_to_l_@quot:	
   980                           ; 4 bytes @ 0x0
   981                           
   982  0020                     ___llmod@divisor:	
   983                           ; 4 bytes @ 0x0
   984                           
   985  0020                     ___fldiv@a:	
   986                           ; 4 bytes @ 0x0
   987                           
   988                           
   989                           ; 4 bytes @ 0x0
   990  0020                     	ds	1
   991  0021                     ___awdiv@sign:	
   992                           
   993                           ; 1 bytes @ 0x1
   994  0021                     	ds	1
   995  0022                     ___awdiv@quotient:	
   996                           
   997                           ; 2 bytes @ 0x2
   998  0022                     	ds	2
   999  0024                     ??_I2C_Master_Init:	
  1000  0024                     ?___flmul:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  0024                     __div_to_l_@cntr:	
  1004                           ; 4 bytes @ 0x4
  1005                           
  1006  0024                     __tdiv_to_l_@cntr:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  0024                     ___llmod@dividend:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012  0024                     ___fldiv@b:	
  1013                           ; 4 bytes @ 0x4
  1014                           
  1015  0024                     ___flmul@b:	
  1016                           ; 4 bytes @ 0x4
  1017                           
  1018                           
  1019                           ; 4 bytes @ 0x4
  1020  0024                     	ds	1
  1021  0025                     __div_to_l_@exp1:	
  1022  0025                     __tdiv_to_l_@exp1:	
  1023                           ; 1 bytes @ 0x5
  1024                           
  1025                           
  1026                           ; 1 bytes @ 0x5
  1027  0025                     	ds	3
  1028  0028                     ??___llmod:	
  1029  0028                     ??___fldiv:	
  1030                           ; 1 bytes @ 0x8
  1031                           
  1032  0028                     ___flmul@a:	
  1033                           ; 1 bytes @ 0x8
  1034                           
  1035                           
  1036                           ; 4 bytes @ 0x8
  1037  0028                     	ds	1
  1038  0029                     ___llmod@counter:	
  1039                           
  1040                           ; 1 bytes @ 0x9
  1041  0029                     	ds	3
  1042  002C                     ??___flmul:	
  1043                           
  1044                           ; 1 bytes @ 0xC
  1045  002C                     	ds	1
  1046  002D                     ___fldiv@rem:	
  1047                           
  1048                           ; 4 bytes @ 0xD
  1049  002D                     	ds	4
  1050  0031                     ___fldiv@sign:	
  1051  0031                     ___flmul@sign:	
  1052                           ; 1 bytes @ 0x11
  1053                           
  1054                           
  1055                           ; 1 bytes @ 0x11
  1056  0031                     	ds	1
  1057  0032                     ___fldiv@new_exp:	
  1058  0032                     ___flmul@grs:	
  1059                           ; 2 bytes @ 0x12
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x12
  1063  0032                     	ds	2
  1064  0034                     ___fldiv@grs:	
  1065                           
  1066                           ; 4 bytes @ 0x14
  1067  0034                     	ds	2
  1068  0036                     ___flmul@aexp:	
  1069                           
  1070                           ; 1 bytes @ 0x16
  1071  0036                     	ds	1
  1072  0037                     ___flmul@bexp:	
  1073                           
  1074                           ; 1 bytes @ 0x17
  1075  0037                     	ds	1
  1076  0038                     ___fldiv@bexp:	
  1077  0038                     ___flmul@prod:	
  1078                           ; 1 bytes @ 0x18
  1079                           
  1080                           
  1081                           ; 4 bytes @ 0x18
  1082  0038                     	ds	1
  1083  0039                     ___fldiv@aexp:	
  1084                           
  1085                           ; 1 bytes @ 0x19
  1086  0039                     	ds	3
  1087  003C                     ___flmul@temp:	
  1088                           
  1089                           ; 2 bytes @ 0x1C
  1090  003C                     	ds	2
  1091  003E                     ?_fround:	
  1092  003E                     ?_scale:	
  1093                           ; 4 bytes @ 0x1E
  1094                           
  1095                           
  1096                           ; 4 bytes @ 0x1E
  1097  003E                     	ds	4
  1098  0042                     ??_fround:	
  1099  0042                     ??_scale:	
  1100                           ; 1 bytes @ 0x22
  1101                           
  1102                           
  1103                           ; 1 bytes @ 0x22
  1104  0042                     	ds	7
  1105  0049                     _fround$906:	
  1106                           
  1107                           ; 4 bytes @ 0x29
  1108  0049                     	ds	3
  1109  004C                     _scale$907:	
  1110                           
  1111                           ; 4 bytes @ 0x2C
  1112  004C                     	ds	1
  1113  004D                     _fround$905:	
  1114                           
  1115                           ; 4 bytes @ 0x2D
  1116  004D                     	ds	3
  1117  0050                     scale@scl:	
  1118                           
  1119                           ; 1 bytes @ 0x30
  1120  0050                     	ds	1
  1121  0051                     ?___fltol:	
  1122  0051                     fround@prec:	
  1123                           ; 4 bytes @ 0x31
  1124                           
  1125  0051                     ___fltol@f1:	
  1126                           ; 1 bytes @ 0x31
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x31
  1130  0051                     	ds	1
  1131  0052                     ?___fladd:	
  1132  0052                     ___fladd@b:	
  1133                           ; 4 bytes @ 0x32
  1134                           
  1135                           
  1136                           ; 4 bytes @ 0x32
  1137  0052                     	ds	3
  1138  0055                     ??___fltol:	
  1139                           
  1140                           ; 1 bytes @ 0x35
  1141  0055                     	ds	1
  1142  0056                     ___fladd@a:	
  1143                           
  1144                           ; 4 bytes @ 0x36
  1145  0056                     	ds	4
  1146  005A                     ??___fladd:	
  1147  005A                     ___fltol@sign1:	
  1148                           ; 1 bytes @ 0x3A
  1149                           
  1150                           
  1151                           ; 1 bytes @ 0x3A
  1152  005A                     	ds	1
  1153  005B                     ___fltol@exp1:	
  1154                           
  1155                           ; 1 bytes @ 0x3B
  1156  005B                     	ds	7
  1157  0062                     ___fladd@signs:	
  1158                           
  1159                           ; 1 bytes @ 0x42
  1160  0062                     	ds	1
  1161  0063                     ___fladd@aexp:	
  1162                           
  1163                           ; 1 bytes @ 0x43
  1164  0063                     	ds	1
  1165  0064                     ___fladd@bexp:	
  1166                           
  1167                           ; 1 bytes @ 0x44
  1168  0064                     	ds	1
  1169  0065                     ___fladd@grs:	
  1170                           
  1171                           ; 1 bytes @ 0x45
  1172  0065                     	ds	1
  1173  0066                     ?___flsub:	
  1174  0066                     ___flsub@a:	
  1175                           ; 4 bytes @ 0x46
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0x46
  1179  0066                     	ds	4
  1180  006A                     ___flsub@b:	
  1181                           
  1182                           ; 4 bytes @ 0x4A
  1183  006A                     	ds	4
  1184                           
  1185                           	psect	maintext
  1186  0867                     __pmaintext:	
  1187 ;;
  1188 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1189 ;;
  1190 ;; *************** function _main *****************
  1191 ;; Defined at:
  1192 ;;		line 154 in file "Master_main.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : B00/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0
  1208 ;;      Temps:          0       0       3       0       0
  1209 ;;      Totals:         0       0       3       0       0
  1210 ;;Total ram usage:        3 bytes
  1211 ;; Hardware stack levels required when called:    5
  1212 ;; This function calls:
  1213 ;;		_LCD8_clear
  1214 ;;		_LCD8_set_cursor
  1215 ;;		_LCD8_strWrite
  1216 ;;		___fldiv
  1217 ;;		___flmul
  1218 ;;		___xxtofl
  1219 ;;		_read_data
  1220 ;;		_setup
  1221 ;;		_sprintf
  1222 ;; This function is called by:
  1223 ;;		Startup code after reset
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           
  1228                           ;psect for function _main
  1229  0867                     _main:	
  1230                           
  1231                           ;Master_main.c: 156:     setup();
  1232                           
  1233                           ;incstack = 0
  1234                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1235  0867  160A  158A  237E  120A  158A  	fcall	_setup
  1236  086C                     l143:	
  1237                           ;Master_main.c: 159:     while(1){
  1238                           
  1239                           
  1240                           ;Master_main.c: 161:         LCD8_clear();
  1241  086C  160A  158A  225A  120A  158A  	fcall	_LCD8_clear
  1242                           
  1243                           ;Master_main.c: 167:     read_data(3,5);
  1244  0871  3005               	movlw	5
  1245  0872  1683               	bsf	3,5	;RP0=1, select bank1
  1246  0873  1303               	bcf	3,6	;RP1=0, select bank1
  1247  0874  00C3               	movwf	??_main^(0+128)
  1248  0875  0843               	movf	??_main^(0+128),w
  1249  0876  00F6               	movwf	read_data@adc_slave
  1250  0877  3003               	movlw	3
  1251  0878  160A  158A  2513  120A  158A  	fcall	_read_data
  1252                           
  1253                           ;Master_main.c: 168:     mpu = (mpu1<<8)|mpu2;
  1254  087D  1683               	bsf	3,5	;RP0=1, select bank1
  1255  087E  1303               	bcf	3,6	;RP1=0, select bank1
  1256  087F  0855               	movf	(_mpu1+1)^(0+128),w
  1257  0880  00C4               	movwf	(??_main^(0+128)+1)
  1258  0881  0854               	movf	_mpu1^(0+128),w
  1259  0882  00C3               	movwf	??_main^(0+128)
  1260  0883  0843               	movf	??_main^(0+128),w
  1261  0884  00C4               	movwf	(??_main^(0+128)+1)
  1262  0885  01C3               	clrf	??_main^(0+128)
  1263  0886  0852               	movf	_mpu2^(0+128),w
  1264  0887  0443               	iorwf	??_main^(0+128),w
  1265  0888  00D0               	movwf	_mpu^(0+128)
  1266  0889  0853               	movf	(_mpu2+1)^(0+128),w
  1267  088A  0444               	iorwf	(??_main+1)^(0+128),w
  1268  088B  00D1               	movwf	(_mpu+1)^(0+128)
  1269                           
  1270                           ;Master_main.c: 169:     adc_value = adc_read*0.019607;
  1271  088C  303C               	movlw	60
  1272  088D  1283               	bcf	3,5	;RP0=0, select bank0
  1273  088E  1303               	bcf	3,6	;RP1=0, select bank0
  1274  088F  00A7               	movwf	___flmul@b+3
  1275  0890  30A0               	movlw	160
  1276  0891  00A6               	movwf	___flmul@b+2
  1277  0892  309E               	movlw	158
  1278  0893  00A5               	movwf	___flmul@b+1
  1279  0894  30DC               	movlw	220
  1280  0895  00A4               	movwf	___flmul@b
  1281  0896  1683               	bsf	3,5	;RP0=1, select bank1
  1282  0897  1303               	bcf	3,6	;RP1=0, select bank1
  1283  0898  084E               	movf	_adc_read^(0+128),w
  1284  0899  00F0               	movwf	___xxtofl@val
  1285  089A  084F               	movf	(_adc_read+1)^(0+128),w
  1286  089B  00F1               	movwf	___xxtofl@val+1
  1287  089C  3000               	movlw	0
  1288  089D  1BF1               	btfsc	___xxtofl@val+1,7
  1289  089E  30FF               	movlw	255
  1290  089F  00F2               	movwf	___xxtofl@val+2
  1291  08A0  00F3               	movwf	___xxtofl@val+3
  1292  08A1  3001               	movlw	1
  1293  08A2  160A  158A  275D  120A  158A  	fcall	___xxtofl
  1294  08A7  0873               	movf	?___xxtofl+3,w
  1295  08A8  1283               	bcf	3,5	;RP0=0, select bank0
  1296  08A9  1303               	bcf	3,6	;RP1=0, select bank0
  1297  08AA  00AB               	movwf	___flmul@a+3
  1298  08AB  0872               	movf	?___xxtofl+2,w
  1299  08AC  00AA               	movwf	___flmul@a+2
  1300  08AD  0871               	movf	?___xxtofl+1,w
  1301  08AE  00A9               	movwf	___flmul@a+1
  1302  08AF  0870               	movf	?___xxtofl,w
  1303  08B0  00A8               	movwf	___flmul@a
  1304  08B1  120A  158A  21A2  120A  158A  	fcall	___flmul
  1305  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  1306  08B7  1303               	bcf	3,6	;RP1=0, select bank0
  1307  08B8  0827               	movf	?___flmul+3,w
  1308  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  1309  08BA  1303               	bcf	3,6	;RP1=0, select bank1
  1310  08BB  00C9               	movwf	(_adc_value+3)^(0+128)
  1311  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  1312  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  1313  08BE  0826               	movf	?___flmul+2,w
  1314  08BF  1683               	bsf	3,5	;RP0=1, select bank1
  1315  08C0  1303               	bcf	3,6	;RP1=0, select bank1
  1316  08C1  00C8               	movwf	(_adc_value+2)^(0+128)
  1317  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  1318  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  1319  08C4  0825               	movf	?___flmul+1,w
  1320  08C5  1683               	bsf	3,5	;RP0=1, select bank1
  1321  08C6  1303               	bcf	3,6	;RP1=0, select bank1
  1322  08C7  00C7               	movwf	(_adc_value+1)^(0+128)
  1323  08C8  1283               	bcf	3,5	;RP0=0, select bank0
  1324  08C9  1303               	bcf	3,6	;RP1=0, select bank0
  1325  08CA  0824               	movf	?___flmul,w
  1326  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  1327  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  1328  08CD  00C6               	movwf	_adc_value^(0+128)
  1329                           
  1330                           ;Master_main.c: 170:     MPU = (mpu/131.0);
  1331  08CE  3043               	movlw	67
  1332  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  1333  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  1334  08D1  00A3               	movwf	___fldiv@a+3
  1335  08D2  3003               	movlw	3
  1336  08D3  00A2               	movwf	___fldiv@a+2
  1337  08D4  3000               	movlw	0
  1338  08D5  00A1               	movwf	___fldiv@a+1
  1339  08D6  3000               	movlw	0
  1340  08D7  00A0               	movwf	___fldiv@a
  1341  08D8  1683               	bsf	3,5	;RP0=1, select bank1
  1342  08D9  1303               	bcf	3,6	;RP1=0, select bank1
  1343  08DA  0850               	movf	_mpu^(0+128),w
  1344  08DB  00F0               	movwf	___xxtofl@val
  1345  08DC  0851               	movf	(_mpu+1)^(0+128),w
  1346  08DD  00F1               	movwf	___xxtofl@val+1
  1347  08DE  3000               	movlw	0
  1348  08DF  1BF1               	btfsc	___xxtofl@val+1,7
  1349  08E0  30FF               	movlw	255
  1350  08E1  00F2               	movwf	___xxtofl@val+2
  1351  08E2  00F3               	movwf	___xxtofl@val+3
  1352  08E3  3001               	movlw	1
  1353  08E4  160A  158A  275D  120A  158A  	fcall	___xxtofl
  1354  08E9  0873               	movf	?___xxtofl+3,w
  1355  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  1356  08EB  1303               	bcf	3,6	;RP1=0, select bank0
  1357  08EC  00A7               	movwf	___fldiv@b+3
  1358  08ED  0872               	movf	?___xxtofl+2,w
  1359  08EE  00A6               	movwf	___fldiv@b+2
  1360  08EF  0871               	movf	?___xxtofl+1,w
  1361  08F0  00A5               	movwf	___fldiv@b+1
  1362  08F1  0870               	movf	?___xxtofl,w
  1363  08F2  00A4               	movwf	___fldiv@b
  1364  08F3  160A  118A  222D  120A  158A  	fcall	___fldiv
  1365  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  1366  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  1367  08FA  0823               	movf	?___fldiv+3,w
  1368  08FB  1683               	bsf	3,5	;RP0=1, select bank1
  1369  08FC  1303               	bcf	3,6	;RP1=0, select bank1
  1370  08FD  00CD               	movwf	(_MPU+3)^(0+128)
  1371  08FE  1283               	bcf	3,5	;RP0=0, select bank0
  1372  08FF  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0900  0822               	movf	?___fldiv+2,w
  1374  0901  1683               	bsf	3,5	;RP0=1, select bank1
  1375  0902  1303               	bcf	3,6	;RP1=0, select bank1
  1376  0903  00CC               	movwf	(_MPU+2)^(0+128)
  1377  0904  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0905  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0906  0821               	movf	?___fldiv+1,w
  1380  0907  1683               	bsf	3,5	;RP0=1, select bank1
  1381  0908  1303               	bcf	3,6	;RP1=0, select bank1
  1382  0909  00CB               	movwf	(_MPU+1)^(0+128)
  1383  090A  1283               	bcf	3,5	;RP0=0, select bank0
  1384  090B  1303               	bcf	3,6	;RP1=0, select bank0
  1385  090C  0820               	movf	?___fldiv,w
  1386  090D  1683               	bsf	3,5	;RP0=1, select bank1
  1387  090E  1303               	bcf	3,6	;RP1=0, select bank1
  1388  090F  00CA               	movwf	_MPU^(0+128)
  1389                           
  1390                           ;Master_main.c: 175:     sprintf(voltage, "%.1f", adc_value);
  1391  0910  30A7               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1392  0911  00C3               	movwf	??_main^(0+128)
  1393  0912  0843               	movf	??_main^(0+128),w
  1394  0913  00A0               	movwf	sprintf@f^(0+128)
  1395  0914  0849               	movf	(_adc_value+3)^(0+128),w
  1396  0915  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1397  0916  0848               	movf	(_adc_value+2)^(0+128),w
  1398  0917  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1399  0918  0847               	movf	(_adc_value+1)^(0+128),w
  1400  0919  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1401  091A  0846               	movf	_adc_value^(0+128),w
  1402  091B  00A1               	movwf	(?_sprintf^(0+128)+1)
  1403  091C  30E2               	movlw	(low (_voltage| 0))& (0+255)
  1404  091D  120A  118A  20D4  120A  158A  	fcall	_sprintf
  1405                           
  1406                           ;Master_main.c: 176:     sprintf(counter, "%u",counter_read);
  1407  0922  30AC               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1408  0923  1683               	bsf	3,5	;RP0=1, select bank1
  1409  0924  1303               	bcf	3,6	;RP1=0, select bank1
  1410  0925  00C3               	movwf	??_main^(0+128)
  1411  0926  0843               	movf	??_main^(0+128),w
  1412  0927  00A0               	movwf	sprintf@f^(0+128)
  1413  0928  0857               	movf	(_counter_read+1)^(0+128),w
  1414  0929  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1415  092A  0856               	movf	_counter_read^(0+128),w
  1416  092B  00A1               	movwf	(?_sprintf^(0+128)+1)
  1417  092C  30E7               	movlw	(low (_counter| 0))& (0+255)
  1418  092D  120A  118A  20D4  120A  158A  	fcall	_sprintf
  1419                           
  1420                           ;Master_main.c: 177:     sprintf(sensor, "%.2f  ",MPU);
  1421  0932  30A0               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1422  0933  1683               	bsf	3,5	;RP0=1, select bank1
  1423  0934  1303               	bcf	3,6	;RP1=0, select bank1
  1424  0935  00C3               	movwf	??_main^(0+128)
  1425  0936  0843               	movf	??_main^(0+128),w
  1426  0937  00A0               	movwf	sprintf@f^(0+128)
  1427  0938  084D               	movf	(_MPU+3)^(0+128),w
  1428  0939  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1429  093A  084C               	movf	(_MPU+2)^(0+128),w
  1430  093B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1431  093C  084B               	movf	(_MPU+1)^(0+128),w
  1432  093D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1433  093E  084A               	movf	_MPU^(0+128),w
  1434  093F  00A1               	movwf	(?_sprintf^(0+128)+1)
  1435  0940  30D8               	movlw	(low (_sensor| 0))& (0+255)
  1436  0941  120A  118A  20D4  120A  158A  	fcall	_sprintf
  1437                           
  1438                           ;Master_main.c: 178:     LCD8_set_cursor(2,1);
  1439  0946  01F3               	clrf	LCD8_set_cursor@column
  1440  0947  0AF3               	incf	LCD8_set_cursor@column,f
  1441  0948  3002               	movlw	2
  1442  0949  160A  118A  20C3  120A  158A  	fcall	_LCD8_set_cursor
  1443                           
  1444                           ;Master_main.c: 179:     LCD8_strWrite(voltage);
  1445  094E  30E2               	movlw	(low (_voltage| 0))& (0+255)
  1446  094F  00F2               	movwf	LCD8_strWrite@data
  1447  0950  3000               	movlw	0
  1448  0951  00F3               	movwf	LCD8_strWrite@data+1
  1449  0952  160A  158A  22FD  120A  158A  	fcall	_LCD8_strWrite
  1450                           
  1451                           ;Master_main.c: 180:     LCD8_set_cursor(2,6);
  1452  0957  3006               	movlw	6
  1453  0958  1683               	bsf	3,5	;RP0=1, select bank1
  1454  0959  1303               	bcf	3,6	;RP1=0, select bank1
  1455  095A  00C3               	movwf	??_main^(0+128)
  1456  095B  0843               	movf	??_main^(0+128),w
  1457  095C  00F3               	movwf	LCD8_set_cursor@column
  1458  095D  3002               	movlw	2
  1459  095E  160A  118A  20C3  120A  158A  	fcall	_LCD8_set_cursor
  1460                           
  1461                           ;Master_main.c: 181:     LCD8_strWrite(counter);
  1462  0963  30E7               	movlw	(low (_counter| 0))& (0+255)
  1463  0964  00F2               	movwf	LCD8_strWrite@data
  1464  0965  3000               	movlw	0
  1465  0966  00F3               	movwf	LCD8_strWrite@data+1
  1466  0967  160A  158A  22FD  120A  158A  	fcall	_LCD8_strWrite
  1467                           
  1468                           ;Master_main.c: 182:     LCD8_set_cursor(2,10);
  1469  096C  300A               	movlw	10
  1470  096D  1683               	bsf	3,5	;RP0=1, select bank1
  1471  096E  1303               	bcf	3,6	;RP1=0, select bank1
  1472  096F  00C3               	movwf	??_main^(0+128)
  1473  0970  0843               	movf	??_main^(0+128),w
  1474  0971  00F3               	movwf	LCD8_set_cursor@column
  1475  0972  3002               	movlw	2
  1476  0973  160A  118A  20C3  120A  158A  	fcall	_LCD8_set_cursor
  1477                           
  1478                           ;Master_main.c: 183:     LCD8_strWrite(sensor);
  1479  0978  30D8               	movlw	(low (_sensor| 0))& (0+255)
  1480  0979  00F2               	movwf	LCD8_strWrite@data
  1481  097A  3000               	movlw	0
  1482  097B  00F3               	movwf	LCD8_strWrite@data+1
  1483  097C  160A  158A  22FD  120A  158A  	fcall	_LCD8_strWrite
  1484                           
  1485                           ;Master_main.c: 184:     LCD8_set_cursor(1,1);
  1486  0981  01F3               	clrf	LCD8_set_cursor@column
  1487  0982  0AF3               	incf	LCD8_set_cursor@column,f
  1488  0983  3001               	movlw	1
  1489  0984  160A  118A  20C3  120A  158A  	fcall	_LCD8_set_cursor
  1490                           
  1491                           ;Master_main.c: 185:     LCD8_strWrite("ADC   NUM  IMU");
  1492  0989  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1493  098A  00F2               	movwf	LCD8_strWrite@data
  1494  098B  3080               	movlw	128
  1495  098C  00F3               	movwf	LCD8_strWrite@data+1
  1496  098D  160A  158A  22FD  120A  158A  	fcall	_LCD8_strWrite
  1497                           
  1498                           ;Master_main.c: 186:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1499  0992  3003               	movlw	3
  1500  0993  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0994  1303               	bcf	3,6	;RP1=0, select bank1
  1502  0995  00C5               	movwf	(??_main^(0+128)+2)
  1503  0996  3008               	movlw	8
  1504  0997  00C4               	movwf	(??_main^(0+128)+1)
  1505  0998  3076               	movlw	118
  1506  0999  00C3               	movwf	??_main^(0+128)
  1507  099A                     u5997:	
  1508  099A  0BC3               	decfsz	??_main^(0+128),f
  1509  099B  299A               	goto	u5997
  1510  099C  0BC4               	decfsz	(??_main^(0+128)+1),f
  1511  099D  299A               	goto	u5997
  1512  099E  0BC5               	decfsz	(??_main^(0+128)+2),f
  1513  099F  299A               	goto	u5997
  1514  09A0  0000               	nop
  1515  09A1  286C               	goto	l143
  1516  09A2                     __end_of_main:	
  1517                           
  1518                           	psect	text1
  1519  00D4                     __ptext1:	
  1520 ;; *************** function _sprintf *****************
  1521 ;; Defined at:
  1522 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  sp              1    wreg     PTR unsigned char 
  1525 ;;		 -> sensor(10), counter(4), voltage(5), 
  1526 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1527 ;;		 -> STR_3(7), STR_2(3), STR_1(5), 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1530 ;;		 -> sensor(10), counter(4), voltage(5), 
  1531 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1532 ;;  tmpval          4   23[BANK1 ] struct .
  1533 ;;  val             4   17[BANK1 ] unsigned long 
  1534 ;;  prec            2   28[BANK1 ] int 
  1535 ;;  eexp            2   21[BANK1 ] int 
  1536 ;;  flag            2   15[BANK1 ] unsigned short 
  1537 ;;  cp              2    0        PTR const unsigned char 
  1538 ;;  len             2    0        unsigned int 
  1539 ;;  width           2    0        int 
  1540 ;;  c               1   34[BANK1 ] unsigned char 
  1541 ;;  ap              1   14[BANK1 ] PTR void [1]
  1542 ;;		 -> ?_sprintf(2), 
  1543 ;;  d               1    0        unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  2    0[BANK1 ] int 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       5       0       0
  1554 ;;      Locals:         0       0      25       0       0
  1555 ;;      Temps:          0       0       5       0       0
  1556 ;;      Totals:         0       0      35       0       0
  1557 ;;Total ram usage:       35 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    3
  1560 ;; This function calls:
  1561 ;;		___awdiv
  1562 ;;		___fladd
  1563 ;;		___fleq
  1564 ;;		___flge
  1565 ;;		___flmul
  1566 ;;		___flneg
  1567 ;;		___flsub
  1568 ;;		___fltol
  1569 ;;		___lldiv
  1570 ;;		___llmod
  1571 ;;		___wmul
  1572 ;;		___xxtofl
  1573 ;;		__div_to_l_
  1574 ;;		__tdiv_to_l_
  1575 ;;		_fround
  1576 ;;		_isdigit
  1577 ;;		_scale
  1578 ;; This function is called by:
  1579 ;;		_main
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           
  1584                           ;psect for function _sprintf
  1585  00D4                     _sprintf:	
  1586                           
  1587                           ;incstack = 0
  1588                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1589                           ;sprintf@sp stored from wreg
  1590  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1591  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1592  00D6  00BB               	movwf	sprintf@sp^(0+128)
  1593                           
  1594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1595  00D7  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1596  00D8  00A5               	movwf	??_sprintf^(0+128)
  1597  00D9  0825               	movf	??_sprintf^(0+128),w
  1598  00DA  00AE               	movwf	sprintf@ap^(0+128)
  1599  00DB                     l3623:	
  1600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1601                           
  1602                           
  1603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1604  00DB  3001               	movlw	1
  1605  00DC  07A0               	addwf	sprintf@f^(0+128),f
  1606  00DD  30FF               	movlw	-1
  1607  00DE  0720               	addwf	sprintf@f^(0+128),w
  1608  00DF  0084               	movwf	4
  1609  00E0  160A  118A  200A  120A  118A  	fcall	stringdir
  1610  00E5  00A5               	movwf	??_sprintf^(0+128)
  1611  00E6  0825               	movf	??_sprintf^(0+128),w
  1612  00E7  00C2               	movwf	sprintf@c^(0+128)
  1613  00E8  0842               	movf	sprintf@c^(0+128),w
  1614  00E9  1903               	btfsc	3,2
  1615  00EA  2FF0               	goto	l3625
  1616                           
  1617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1618  00EB  3025               	movlw	37
  1619  00EC  0642               	xorwf	sprintf@c^(0+128),w
  1620  00ED  1903               	btfsc	3,2
  1621  00EE  28FB               	goto	l3411
  1622                           
  1623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1624  00EF  0842               	movf	sprintf@c^(0+128),w
  1625  00F0  00A5               	movwf	??_sprintf^(0+128)
  1626  00F1  083B               	movf	sprintf@sp^(0+128),w
  1627  00F2  0084               	movwf	4
  1628  00F3  0825               	movf	??_sprintf^(0+128),w
  1629  00F4  1383               	bcf	3,7	;select IRP bank0
  1630  00F5  0080               	movwf	0
  1631  00F6  3001               	movlw	1
  1632  00F7  00A5               	movwf	??_sprintf^(0+128)
  1633  00F8  0825               	movf	??_sprintf^(0+128),w
  1634  00F9  07BB               	addwf	sprintf@sp^(0+128),f
  1635                           
  1636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1637  00FA  28DB               	goto	l3623
  1638  00FB                     l3411:	
  1639                           
  1640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1641  00FB  01AF               	clrf	sprintf@flag^(0+128)
  1642  00FC  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1643                           
  1644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1645  00FD  0820               	movf	sprintf@f^(0+128),w
  1646  00FE  0084               	movwf	4
  1647  00FF  160A  118A  200A  120A  118A  	fcall	stringdir
  1648  0104  3A2E               	xorlw	46
  1649  0105  1D03               	skipz
  1650  0106  2948               	goto	l3427
  1651                           
  1652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  1653  0107  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1654                           
  1655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1656  0108  3001               	movlw	1
  1657  0109  00A5               	movwf	??_sprintf^(0+128)
  1658  010A  0825               	movf	??_sprintf^(0+128),w
  1659  010B  07A0               	addwf	sprintf@f^(0+128),f
  1660                           
  1661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1662  010C  01BC               	clrf	sprintf@prec^(0+128)
  1663  010D  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1664  010E                     l3425:	
  1665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1666                           
  1667                           
  1668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1669  010E  0820               	movf	sprintf@f^(0+128),w
  1670  010F  0084               	movwf	4
  1671  0110  160A  118A  200A  120A  118A  	fcall	stringdir
  1672  0115  120A  118A  2003  120A  118A  	fcall	_isdigit
  1673  011A  1C03               	btfss	3,0
  1674  011B  2953               	goto	l3435
  1675                           
  1676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1677  011C  1683               	bsf	3,5	;RP0=1, select bank1
  1678  011D  1303               	bcf	3,6	;RP1=0, select bank1
  1679  011E  083D               	movf	(sprintf@prec+1)^(0+128),w
  1680  011F  00F1               	movwf	___wmul@multiplier+1
  1681  0120  083C               	movf	sprintf@prec^(0+128),w
  1682  0121  00F0               	movwf	___wmul@multiplier
  1683  0122  300A               	movlw	10
  1684  0123  00F2               	movwf	___wmul@multiplicand
  1685  0124  3000               	movlw	0
  1686  0125  00F3               	movwf	___wmul@multiplicand+1
  1687  0126  160A  158A  2297  120A  118A  	fcall	___wmul
  1688  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1689  012C  1303               	bcf	3,6	;RP1=0, select bank1
  1690  012D  0820               	movf	sprintf@f^(0+128),w
  1691  012E  0084               	movwf	4
  1692  012F  160A  118A  200A  120A  118A  	fcall	stringdir
  1693  0134  0770               	addwf	?___wmul,w
  1694  0135  00A5               	movwf	??_sprintf^(0+128)
  1695  0136  3000               	movlw	0
  1696  0137  1803               	skipnc
  1697  0138  3001               	movlw	1
  1698  0139  0771               	addwf	?___wmul+1,w
  1699  013A  00A6               	movwf	(??_sprintf+1)^(0+128)
  1700  013B  0825               	movf	??_sprintf^(0+128),w
  1701  013C  3ED0               	addlw	208
  1702  013D  00BC               	movwf	sprintf@prec^(0+128)
  1703  013E  0826               	movf	(??_sprintf+1)^(0+128),w
  1704  013F  1803               	skipnc
  1705  0140  3E01               	addlw	1
  1706  0141  3EFF               	addlw	255
  1707  0142  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1708  0143  3001               	movlw	1
  1709  0144  00A5               	movwf	??_sprintf^(0+128)
  1710  0145  0825               	movf	??_sprintf^(0+128),w
  1711  0146  07A0               	addwf	sprintf@f^(0+128),f
  1712  0147  290E               	goto	l3425
  1713  0148                     l3427:	
  1714                           
  1715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1716  0148  01BC               	clrf	sprintf@prec^(0+128)
  1717  0149  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1718                           
  1719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  1720  014A  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1721  014B  2953               	goto	l3435
  1722  014C                     l274:	
  1723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1724                           
  1725                           
  1726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1727  014C  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1728                           
  1729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1730  014D  2972               	goto	l3437
  1731  014E                     l3431:	
  1732                           
  1733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 837:    fla
      +                          g |= 0xC0;
  1734  014E  30C0               	movlw	192
  1735  014F  04AF               	iorwf	sprintf@flag^(0+128),f
  1736  0150  3000               	movlw	0
  1737  0151  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1738                           
  1739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 838:    bre
      +                          ak;
  1740  0152  2972               	goto	l3437
  1741  0153                     l3435:	
  1742  0153  3001               	movlw	1
  1743  0154  1683               	bsf	3,5	;RP0=1, select bank1
  1744  0155  1303               	bcf	3,6	;RP1=0, select bank1
  1745  0156  07A0               	addwf	sprintf@f^(0+128),f
  1746  0157  30FF               	movlw	-1
  1747  0158  0720               	addwf	sprintf@f^(0+128),w
  1748  0159  0084               	movwf	4
  1749  015A  160A  118A  200A  120A  118A  	fcall	stringdir
  1750  015F  00C2               	movwf	sprintf@c^(0+128)
  1751  0160  00A5               	movwf	??_sprintf^(0+128)
  1752  0161  01A6               	clrf	(??_sprintf^(0+128)+1)
  1753                           
  1754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1755                           ; Switch size 1, requested type "simple"
  1756                           ; Number of cases is 1, Range of values is 0 to 0
  1757                           ; switch strategies available:
  1758                           ; Name         Instructions Cycles
  1759                           ; simple_byte            4     3 (average)
  1760                           ; direct_byte           11     8 (fixed)
  1761                           ; jumptable            260     6 (fixed)
  1762                           ;	Chosen strategy is simple_byte
  1763  0162  0826               	movf	(??_sprintf+1)^(0+128),w
  1764  0163  3A00               	xorlw	0	; case 0
  1765  0164  1903               	skipnz
  1766  0165  2967               	goto	l3843
  1767  0166  28DB               	goto	l3623
  1768  0167                     l3843:	
  1769                           
  1770                           ; Switch size 1, requested type "simple"
  1771                           ; Number of cases is 3, Range of values is 0 to 117
  1772                           ; switch strategies available:
  1773                           ; Name         Instructions Cycles
  1774                           ; simple_byte           10     6 (average)
  1775                           ; jumptable            260     6 (fixed)
  1776                           ;	Chosen strategy is simple_byte
  1777  0167  0825               	movf	??_sprintf^(0+128),w
  1778  0168  3A00               	xorlw	0	; case 0
  1779  0169  1903               	skipnz
  1780  016A  2FF0               	goto	l3625
  1781  016B  3A66               	xorlw	102	; case 102
  1782  016C  1903               	skipnz
  1783  016D  294C               	goto	l274
  1784  016E  3A13               	xorlw	19	; case 117
  1785  016F  1903               	skipnz
  1786  0170  294E               	goto	l3431
  1787  0171  28DB               	goto	l3623
  1788  0172                     l3437:	
  1789                           
  1790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1791  0172  3000               	movlw	0
  1792  0173  052F               	andwf	sprintf@flag^(0+128),w
  1793  0174  00A5               	movwf	??_sprintf^(0+128)
  1794  0175  3007               	movlw	7
  1795  0176  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1796  0177  00A6               	movwf	(??_sprintf+1)^(0+128)
  1797  0178  0825               	movf	??_sprintf^(0+128),w
  1798  0179  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1799  017A  1903               	btfsc	3,2
  1800  017B  2EF8               	goto	l3579
  1801                           
  1802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  1803  017C  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1804  017D  2982               	goto	l3443
  1805                           
  1806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1807  017E  3006               	movlw	6
  1808  017F  00BC               	movwf	sprintf@prec^(0+128)
  1809  0180  3000               	movlw	0
  1810  0181  00BD               	movwf	(sprintf@prec^(0+128)+1)
  1811  0182                     l3443:	
  1812                           
  1813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1814  0182  082E               	movf	sprintf@ap^(0+128),w
  1815  0183  0084               	movwf	4
  1816  0184  1383               	bcf	3,7	;select IRP bank0
  1817  0185  0800               	movf	0,w
  1818  0186  00BE               	movwf	sprintf@fval^(0+128)
  1819  0187  0A84               	incf	4,f
  1820  0188  0800               	movf	0,w
  1821  0189  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1822  018A  0A84               	incf	4,f
  1823  018B  0800               	movf	0,w
  1824  018C  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1825  018D  0A84               	incf	4,f
  1826  018E  0800               	movf	0,w
  1827  018F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1828  0190  3004               	movlw	4
  1829  0191  00A5               	movwf	??_sprintf^(0+128)
  1830  0192  0825               	movf	??_sprintf^(0+128),w
  1831  0193  07AE               	addwf	sprintf@ap^(0+128),f
  1832                           
  1833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  1834  0194  0841               	movf	(sprintf@fval+3)^(0+128),w
  1835  0195  00F3               	movwf	___flge@ff1+3
  1836  0196  0840               	movf	(sprintf@fval+2)^(0+128),w
  1837  0197  00F2               	movwf	___flge@ff1+2
  1838  0198  083F               	movf	(sprintf@fval+1)^(0+128),w
  1839  0199  00F1               	movwf	___flge@ff1+1
  1840  019A  083E               	movf	sprintf@fval^(0+128),w
  1841  019B  00F0               	movwf	___flge@ff1
  1842  019C  3000               	movlw	0
  1843  019D  00F7               	movwf	___flge@ff2+3
  1844  019E  3000               	movlw	0
  1845  019F  00F6               	movwf	___flge@ff2+2
  1846  01A0  3000               	movlw	0
  1847  01A1  00F5               	movwf	___flge@ff2+1
  1848  01A2  3000               	movlw	0
  1849  01A3  00F4               	movwf	___flge@ff2
  1850  01A4  160A  158A  26CA  120A  118A  	fcall	___flge
  1851  01A9  1803               	btfsc	3,0
  1852  01AA  29C8               	goto	l3453
  1853                           
  1854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  1855  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1856  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1857  01AD  0841               	movf	(sprintf@fval+3)^(0+128),w
  1858  01AE  00F3               	movwf	___flneg@f1+3
  1859  01AF  0840               	movf	(sprintf@fval+2)^(0+128),w
  1860  01B0  00F2               	movwf	___flneg@f1+2
  1861  01B1  083F               	movf	(sprintf@fval+1)^(0+128),w
  1862  01B2  00F1               	movwf	___flneg@f1+1
  1863  01B3  083E               	movf	sprintf@fval^(0+128),w
  1864  01B4  00F0               	movwf	___flneg@f1
  1865  01B5  120A  158A  2000  120A  118A  	fcall	___flneg
  1866  01BA  0873               	movf	?___flneg+3,w
  1867  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1868  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1869  01BD  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1870  01BE  0872               	movf	?___flneg+2,w
  1871  01BF  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1872  01C0  0871               	movf	?___flneg+1,w
  1873  01C1  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1874  01C2  0870               	movf	?___flneg,w
  1875  01C3  00BE               	movwf	sprintf@fval^(0+128)
  1876                           
  1877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  1878  01C4  3003               	movlw	3
  1879  01C5  04AF               	iorwf	sprintf@flag^(0+128),f
  1880  01C6  3000               	movlw	0
  1881  01C7  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1882  01C8                     l3453:	
  1883                           
  1884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  1885  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  1886  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  1887  01CA  01B5               	clrf	sprintf@eexp^(0+128)
  1888  01CB  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  1889                           
  1890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  1891  01CC  0841               	movf	(sprintf@fval+3)^(0+128),w
  1892  01CD  00F3               	movwf	___fleq@ff1+3
  1893  01CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  1894  01CF  00F2               	movwf	___fleq@ff1+2
  1895  01D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  1896  01D1  00F1               	movwf	___fleq@ff1+1
  1897  01D2  083E               	movf	sprintf@fval^(0+128),w
  1898  01D3  00F0               	movwf	___fleq@ff1
  1899  01D4  3000               	movlw	0
  1900  01D5  00F7               	movwf	___fleq@ff2+3
  1901  01D6  3000               	movlw	0
  1902  01D7  00F6               	movwf	___fleq@ff2+2
  1903  01D8  3000               	movlw	0
  1904  01D9  00F5               	movwf	___fleq@ff2+1
  1905  01DA  3000               	movlw	0
  1906  01DB  00F4               	movwf	___fleq@ff2
  1907  01DC  160A  158A  2480  120A  118A  	fcall	___fleq
  1908  01E1  1803               	btfsc	3,0
  1909  01E2  2ACC               	goto	l3481
  1910                           
  1911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1912  01E3  1003               	clrc
  1913  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  1914  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  1915  01E6  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1916  01E7  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1917  01E8  3E82               	addlw	130
  1918  01E9  00B5               	movwf	sprintf@eexp^(0+128)
  1919  01EA  30FF               	movlw	255
  1920  01EB  1803               	skipnc
  1921  01EC  3000               	movlw	0
  1922  01ED  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  1923                           
  1924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  1925  01EE  30FF               	movlw	255
  1926  01EF  07B5               	addwf	sprintf@eexp^(0+128),f
  1927  01F0  1803               	skipnc
  1928  01F1  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1929  01F2  30FF               	movlw	255
  1930  01F3  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1931                           
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  1933  01F4  3003               	movlw	3
  1934  01F5  00F0               	movwf	___wmul@multiplier
  1935  01F6  3000               	movlw	0
  1936  01F7  00F1               	movwf	___wmul@multiplier+1
  1937  01F8  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1938  01F9  00F3               	movwf	___wmul@multiplicand+1
  1939  01FA  0835               	movf	sprintf@eexp^(0+128),w
  1940  01FB  00F2               	movwf	___wmul@multiplicand
  1941  01FC  160A  158A  2297  120A  118A  	fcall	___wmul
  1942  0201  0871               	movf	?___wmul+1,w
  1943  0202  1683               	bsf	3,5	;RP0=1, select bank1
  1944  0203  1303               	bcf	3,6	;RP1=0, select bank1
  1945  0204  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1946  0205  0870               	movf	?___wmul,w
  1947  0206  00B5               	movwf	sprintf@eexp^(0+128)
  1948                           
  1949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  1950  0207  300A               	movlw	10
  1951  0208  00F7               	movwf	___awdiv@divisor
  1952  0209  3000               	movlw	0
  1953  020A  00F8               	movwf	___awdiv@divisor+1
  1954  020B  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1955  020C  00FA               	movwf	___awdiv@dividend+1
  1956  020D  0835               	movf	sprintf@eexp^(0+128),w
  1957  020E  00F9               	movwf	___awdiv@dividend
  1958  020F  160A  158A  2602  120A  118A  	fcall	___awdiv
  1959  0214  0878               	movf	?___awdiv+1,w
  1960  0215  1683               	bsf	3,5	;RP0=1, select bank1
  1961  0216  1303               	bcf	3,6	;RP1=0, select bank1
  1962  0217  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1963  0218  0877               	movf	?___awdiv,w
  1964  0219  00B5               	movwf	sprintf@eexp^(0+128)
  1965                           
  1966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  1967  021A  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  1968  021B  2A22               	goto	l3469
  1969                           
  1970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  1971  021C  30FF               	movlw	255
  1972  021D  07B5               	addwf	sprintf@eexp^(0+128),f
  1973  021E  1803               	skipnc
  1974  021F  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1975  0220  30FF               	movlw	255
  1976  0221  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1977  0222                     l3469:	
  1978                           
  1979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  1980  0222  0335               	decf	sprintf@eexp^(0+128),w
  1981  0223  3AFF               	xorlw	255
  1982  0224  120A  158A  24B7  120A  118A  	fcall	_scale
  1983  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1984  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1985  022B  0841               	movf	?_scale+3,w
  1986  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1987  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1988  022E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1989  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0230  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0231  0840               	movf	?_scale+2,w
  1992  0232  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0233  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0234  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1995  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0237  083F               	movf	?_scale+1,w
  1998  0238  1683               	bsf	3,5	;RP0=1, select bank1
  1999  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2000  023A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2001  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2002  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2003  023D  083E               	movf	?_scale,w
  2004  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2005  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2006  0240  00B7               	movwf	sprintf@tmpval^(0+128)
  2007                           
  2008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  2009  0241  0841               	movf	(sprintf@fval+3)^(0+128),w
  2010  0242  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0243  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0244  00A7               	movwf	___flmul@b+3
  2013  0245  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0246  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0247  0840               	movf	(sprintf@fval+2)^(0+128),w
  2016  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0249  1303               	bcf	3,6	;RP1=0, select bank0
  2018  024A  00A6               	movwf	___flmul@b+2
  2019  024B  1683               	bsf	3,5	;RP0=1, select bank1
  2020  024C  1303               	bcf	3,6	;RP1=0, select bank1
  2021  024D  083F               	movf	(sprintf@fval+1)^(0+128),w
  2022  024E  1283               	bcf	3,5	;RP0=0, select bank0
  2023  024F  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0250  00A5               	movwf	___flmul@b+1
  2025  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2026  0252  1303               	bcf	3,6	;RP1=0, select bank1
  2027  0253  083E               	movf	sprintf@fval^(0+128),w
  2028  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0255  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0256  00A4               	movwf	___flmul@b
  2031  0257  1683               	bsf	3,5	;RP0=1, select bank1
  2032  0258  1303               	bcf	3,6	;RP1=0, select bank1
  2033  0259  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2034  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2035  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2036  025C  00AB               	movwf	___flmul@a+3
  2037  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2038  025E  1303               	bcf	3,6	;RP1=0, select bank1
  2039  025F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2040  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0262  00AA               	movwf	___flmul@a+2
  2043  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0264  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0265  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2046  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0267  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0268  00A9               	movwf	___flmul@a+1
  2049  0269  1683               	bsf	3,5	;RP0=1, select bank1
  2050  026A  1303               	bcf	3,6	;RP1=0, select bank1
  2051  026B  0837               	movf	sprintf@tmpval^(0+128),w
  2052  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2053  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2054  026E  00A8               	movwf	___flmul@a
  2055  026F  120A  158A  21A2  120A  118A  	fcall	___flmul
  2056  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0276  0827               	movf	?___flmul+3,w
  2059  0277  1683               	bsf	3,5	;RP0=1, select bank1
  2060  0278  1303               	bcf	3,6	;RP1=0, select bank1
  2061  0279  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2062  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2063  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2064  027C  0826               	movf	?___flmul+2,w
  2065  027D  1683               	bsf	3,5	;RP0=1, select bank1
  2066  027E  1303               	bcf	3,6	;RP1=0, select bank1
  2067  027F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2068  0280  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0281  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0282  0825               	movf	?___flmul+1,w
  2071  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2072  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2073  0285  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2074  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0288  0824               	movf	?___flmul,w
  2077  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2078  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2079  028B  00B7               	movwf	sprintf@tmpval^(0+128)
  2080                           
  2081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  2082  028C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2083  028D  00F3               	movwf	___flge@ff1+3
  2084  028E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2085  028F  00F2               	movwf	___flge@ff1+2
  2086  0290  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2087  0291  00F1               	movwf	___flge@ff1+1
  2088  0292  0837               	movf	sprintf@tmpval^(0+128),w
  2089  0293  00F0               	movwf	___flge@ff1
  2090  0294  303F               	movlw	63
  2091  0295  00F7               	movwf	___flge@ff2+3
  2092  0296  3080               	movlw	128
  2093  0297  00F6               	movwf	___flge@ff2+2
  2094  0298  3000               	movlw	0
  2095  0299  00F5               	movwf	___flge@ff2+1
  2096  029A  3000               	movlw	0
  2097  029B  00F4               	movwf	___flge@ff2
  2098  029C  160A  158A  26CA  120A  118A  	fcall	___flge
  2099  02A1  1803               	btfsc	3,0
  2100  02A2  2AAB               	goto	l3477
  2101                           
  2102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2103  02A3  30FF               	movlw	255
  2104  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2105  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  2106  02A6  07B5               	addwf	sprintf@eexp^(0+128),f
  2107  02A7  1803               	skipnc
  2108  02A8  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2109  02A9  30FF               	movlw	255
  2110  02AA  2ACB               	goto	L1
  2111  02AB                     l3477:	
  2112  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2113  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  2114  02AD  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2115  02AE  00F3               	movwf	___flge@ff1+3
  2116  02AF  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2117  02B0  00F2               	movwf	___flge@ff1+2
  2118  02B1  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2119  02B2  00F1               	movwf	___flge@ff1+1
  2120  02B3  0837               	movf	sprintf@tmpval^(0+128),w
  2121  02B4  00F0               	movwf	___flge@ff1
  2122  02B5  3041               	movlw	65
  2123  02B6  00F7               	movwf	___flge@ff2+3
  2124  02B7  3020               	movlw	32
  2125  02B8  00F6               	movwf	___flge@ff2+2
  2126  02B9  3000               	movlw	0
  2127  02BA  00F5               	movwf	___flge@ff2+1
  2128  02BB  3000               	movlw	0
  2129  02BC  00F4               	movwf	___flge@ff2
  2130  02BD  160A  158A  26CA  120A  118A  	fcall	___flge
  2131  02C2  1C03               	btfss	3,0
  2132  02C3  2ACC               	goto	l3481
  2133                           
  2134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  2135  02C4  3001               	movlw	1
  2136  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2137  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2138  02C7  07B5               	addwf	sprintf@eexp^(0+128),f
  2139  02C8  1803               	skipnc
  2140  02C9  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2141  02CA  3000               	movlw	0
  2142  02CB                     L1:	
  2143  02CB  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2144  02CC                     l3481:	
  2145                           
  2146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  2147  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2148  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2149  02CE  083D               	movf	(sprintf@prec+1)^(0+128),w
  2150  02CF  3A80               	xorlw	128
  2151  02D0  00FF               	movwf	127
  2152  02D1  3080               	movlw	128
  2153  02D2  027F               	subwf	127,w
  2154  02D3  1D03               	skipz
  2155  02D4  2AD7               	goto	u5405
  2156  02D5  300D               	movlw	13
  2157  02D6  023C               	subwf	sprintf@prec^(0+128),w
  2158  02D7                     u5405:	
  2159  02D7  1803               	skipnc
  2160  02D8  2B20               	goto	l3485
  2161                           
  2162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  2163  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2164  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2165  02DB  083C               	movf	sprintf@prec^(0+128),w
  2166  02DC  160A  118A  23D0  120A  118A  	fcall	_fround
  2167  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2168  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2169  02E3  0841               	movf	?_fround+3,w
  2170  02E4  00D5               	movwf	___fladd@b+3
  2171  02E5  0840               	movf	?_fround+2,w
  2172  02E6  00D4               	movwf	___fladd@b+2
  2173  02E7  083F               	movf	?_fround+1,w
  2174  02E8  00D3               	movwf	___fladd@b+1
  2175  02E9  083E               	movf	?_fround,w
  2176  02EA  00D2               	movwf	___fladd@b
  2177  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2178  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2179  02ED  0841               	movf	(sprintf@fval+3)^(0+128),w
  2180  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2181  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2182  02F0  00D9               	movwf	___fladd@a+3
  2183  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2184  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2185  02F3  0840               	movf	(sprintf@fval+2)^(0+128),w
  2186  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2187  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2188  02F6  00D8               	movwf	___fladd@a+2
  2189  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2190  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2191  02F9  083F               	movf	(sprintf@fval+1)^(0+128),w
  2192  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2193  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2194  02FC  00D7               	movwf	___fladd@a+1
  2195  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2196  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2197  02FF  083E               	movf	sprintf@fval^(0+128),w
  2198  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0302  00D6               	movwf	___fladd@a
  2201  0303  160A  118A  25D1  120A  118A  	fcall	___fladd
  2202  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2203  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2204  030A  0855               	movf	?___fladd+3,w
  2205  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2206  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2207  030D  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2208  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2209  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0310  0854               	movf	?___fladd+2,w
  2211  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2212  0312  1303               	bcf	3,6	;RP1=0, select bank1
  2213  0313  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2214  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0316  0853               	movf	?___fladd+1,w
  2217  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2219  0319  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2220  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2221  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2222  031C  0852               	movf	?___fladd,w
  2223  031D  1683               	bsf	3,5	;RP0=1, select bank1
  2224  031E  1303               	bcf	3,6	;RP1=0, select bank1
  2225  031F  00BE               	movwf	sprintf@fval^(0+128)
  2226  0320                     l3485:	
  2227                           
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2229  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2230  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2231  0322  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2232  0323  3A80               	xorlw	128
  2233  0324  00FF               	movwf	127
  2234  0325  3080               	movlw	128
  2235  0326  027F               	subwf	127,w
  2236  0327  1D03               	skipz
  2237  0328  2B2B               	goto	u5415
  2238  0329  300A               	movlw	10
  2239  032A  0235               	subwf	sprintf@eexp^(0+128),w
  2240  032B                     u5415:	
  2241  032B  1803               	skipnc
  2242  032C  2B78               	goto	l3493
  2243  032D  1683               	bsf	3,5	;RP0=1, select bank1
  2244  032E  1303               	bcf	3,6	;RP1=0, select bank1
  2245  032F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2246  0330  00F3               	movwf	___fleq@ff1+3
  2247  0331  0840               	movf	(sprintf@fval+2)^(0+128),w
  2248  0332  00F2               	movwf	___fleq@ff1+2
  2249  0333  083F               	movf	(sprintf@fval+1)^(0+128),w
  2250  0334  00F1               	movwf	___fleq@ff1+1
  2251  0335  083E               	movf	sprintf@fval^(0+128),w
  2252  0336  00F0               	movwf	___fleq@ff1
  2253  0337  3000               	movlw	0
  2254  0338  00F7               	movwf	___fleq@ff2+3
  2255  0339  3000               	movlw	0
  2256  033A  00F6               	movwf	___fleq@ff2+2
  2257  033B  3000               	movlw	0
  2258  033C  00F5               	movwf	___fleq@ff2+1
  2259  033D  3000               	movlw	0
  2260  033E  00F4               	movwf	___fleq@ff2
  2261  033F  160A  158A  2480  120A  118A  	fcall	___fleq
  2262  0344  1803               	btfsc	3,0
  2263  0345  2BE1               	goto	l3507
  2264  0346  1683               	bsf	3,5	;RP0=1, select bank1
  2265  0347  1303               	bcf	3,6	;RP1=0, select bank1
  2266  0348  0841               	movf	(sprintf@fval+3)^(0+128),w
  2267  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2268  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2269  034B  00D4               	movwf	___fltol@f1+3
  2270  034C  1683               	bsf	3,5	;RP0=1, select bank1
  2271  034D  1303               	bcf	3,6	;RP1=0, select bank1
  2272  034E  0840               	movf	(sprintf@fval+2)^(0+128),w
  2273  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0351  00D3               	movwf	___fltol@f1+2
  2276  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2277  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2278  0354  083F               	movf	(sprintf@fval+1)^(0+128),w
  2279  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2281  0357  00D2               	movwf	___fltol@f1+1
  2282  0358  1683               	bsf	3,5	;RP0=1, select bank1
  2283  0359  1303               	bcf	3,6	;RP1=0, select bank1
  2284  035A  083E               	movf	sprintf@fval^(0+128),w
  2285  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2286  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2287  035D  00D1               	movwf	___fltol@f1
  2288  035E  160A  158A  265D  120A  118A  	fcall	___fltol
  2289  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0365  0854               	movf	?___fltol+3,w
  2292  0366  0453               	iorwf	?___fltol+2,w
  2293  0367  0452               	iorwf	?___fltol+1,w
  2294  0368  0451               	iorwf	?___fltol,w
  2295  0369  1D03               	skipz
  2296  036A  2BE1               	goto	l3507
  2297  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2298  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2299  036D  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2300  036E  3A80               	xorlw	128
  2301  036F  00FF               	movwf	127
  2302  0370  3080               	movlw	128
  2303  0371  027F               	subwf	127,w
  2304  0372  1D03               	skipz
  2305  0373  2B76               	goto	u5445
  2306  0374  3002               	movlw	2
  2307  0375  0235               	subwf	sprintf@eexp^(0+128),w
  2308  0376                     u5445:	
  2309  0376  1C03               	skipc
  2310  0377  2BE1               	goto	l3507
  2311  0378                     l3493:	
  2312                           
  2313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  2314  0378  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0379  1303               	bcf	3,6	;RP1=0, select bank1
  2316  037A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2317  037B  00F3               	movwf	___flge@ff1+3
  2318  037C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2319  037D  00F2               	movwf	___flge@ff1+2
  2320  037E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2321  037F  00F1               	movwf	___flge@ff1+1
  2322  0380  0837               	movf	sprintf@tmpval^(0+128),w
  2323  0381  00F0               	movwf	___flge@ff1
  2324  0382  3040               	movlw	64
  2325  0383  00F7               	movwf	___flge@ff2+3
  2326  0384  3089               	movlw	137
  2327  0385  00F6               	movwf	___flge@ff2+2
  2328  0386  3070               	movlw	112
  2329  0387  00F5               	movwf	___flge@ff2+1
  2330  0388  305F               	movlw	95
  2331  0389  00F4               	movwf	___flge@ff2
  2332  038A  160A  158A  26CA  120A  118A  	fcall	___flge
  2333  038F  1803               	btfsc	3,0
  2334  0390  2B93               	goto	l3497
  2335                           
  2336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2337  0391  30F7               	movlw	247
  2338  0392  2B94               	goto	L2
  2339  0393                     l3497:	
  2340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  2341                           
  2342                           
  2343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2344  0393  30F8               	movlw	248
  2345  0394                     L2:	
  2346  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2347  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2348  0396  07B5               	addwf	sprintf@eexp^(0+128),f
  2349  0397  1803               	skipnc
  2350  0398  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2351  0399  30FF               	movlw	255
  2352  039A  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2353                           
  2354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2355  039B  0835               	movf	sprintf@eexp^(0+128),w
  2356  039C  120A  158A  24B7  120A  118A  	fcall	_scale
  2357  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2358  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2359  03A3  0841               	movf	?_scale+3,w
  2360  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2361  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  2362  03A6  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2363  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2364  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2365  03A9  0840               	movf	?_scale+2,w
  2366  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2367  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2368  03AC  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2369  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2370  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2371  03AF  083F               	movf	?_scale+1,w
  2372  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2373  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2374  03B2  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2375  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2376  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2377  03B5  083E               	movf	?_scale,w
  2378  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2379  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2380  03B8  00B7               	movwf	sprintf@tmpval^(0+128)
  2381  03B9  0841               	movf	(sprintf@fval+3)^(0+128),w
  2382  03BA  00F3               	movwf	__div_to_l_@f1+3
  2383  03BB  0840               	movf	(sprintf@fval+2)^(0+128),w
  2384  03BC  00F2               	movwf	__div_to_l_@f1+2
  2385  03BD  083F               	movf	(sprintf@fval+1)^(0+128),w
  2386  03BE  00F1               	movwf	__div_to_l_@f1+1
  2387  03BF  083E               	movf	sprintf@fval^(0+128),w
  2388  03C0  00F0               	movwf	__div_to_l_@f1
  2389  03C1  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2390  03C2  00F7               	movwf	__div_to_l_@f2+3
  2391  03C3  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2392  03C4  00F6               	movwf	__div_to_l_@f2+2
  2393  03C5  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2394  03C6  00F5               	movwf	__div_to_l_@f2+1
  2395  03C7  0837               	movf	sprintf@tmpval^(0+128),w
  2396  03C8  00F4               	movwf	__div_to_l_@f2
  2397  03C9  160A  118A  2183  120A  118A  	fcall	__div_to_l_
  2398  03CE  0873               	movf	?__div_to_l_+3,w
  2399  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  2400  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  2401  03D1  00B4               	movwf	(sprintf@val+3)^(0+128)
  2402  03D2  0872               	movf	?__div_to_l_+2,w
  2403  03D3  00B3               	movwf	(sprintf@val+2)^(0+128)
  2404  03D4  0871               	movf	?__div_to_l_+1,w
  2405  03D5  00B2               	movwf	(sprintf@val+1)^(0+128)
  2406  03D6  0870               	movf	?__div_to_l_,w
  2407  03D7  00B1               	movwf	sprintf@val^(0+128)
  2408                           
  2409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2410  03D8  3000               	movlw	0
  2411  03D9  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2412  03DA  3000               	movlw	0
  2413  03DB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2414  03DC  3000               	movlw	0
  2415  03DD  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2416  03DE  3000               	movlw	0
  2417  03DF  00BE               	movwf	sprintf@fval^(0+128)
  2418                           
  2419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  2420  03E0  2C65               	goto	l3513
  2421  03E1                     l3507:	
  2422                           
  2423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  2424  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2425  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  2426  03E3  0841               	movf	(sprintf@fval+3)^(0+128),w
  2427  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2428  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2429  03E6  00D4               	movwf	___fltol@f1+3
  2430  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2431  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2432  03E9  0840               	movf	(sprintf@fval+2)^(0+128),w
  2433  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2434  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2435  03EC  00D3               	movwf	___fltol@f1+2
  2436  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2437  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2438  03EF  083F               	movf	(sprintf@fval+1)^(0+128),w
  2439  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2440  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2441  03F2  00D2               	movwf	___fltol@f1+1
  2442  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2443  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2444  03F5  083E               	movf	sprintf@fval^(0+128),w
  2445  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2446  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2447  03F8  00D1               	movwf	___fltol@f1
  2448  03F9  160A  158A  265D  120A  118A  	fcall	___fltol
  2449  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2450  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0400  0854               	movf	?___fltol+3,w
  2452  0401  1683               	bsf	3,5	;RP0=1, select bank1
  2453  0402  1303               	bcf	3,6	;RP1=0, select bank1
  2454  0403  00B4               	movwf	(sprintf@val+3)^(0+128)
  2455  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0406  0853               	movf	?___fltol+2,w
  2458  0407  1683               	bsf	3,5	;RP0=1, select bank1
  2459  0408  1303               	bcf	3,6	;RP1=0, select bank1
  2460  0409  00B3               	movwf	(sprintf@val+2)^(0+128)
  2461  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2462  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2463  040C  0852               	movf	?___fltol+1,w
  2464  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2465  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2466  040F  00B2               	movwf	(sprintf@val+1)^(0+128)
  2467  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0412  0851               	movf	?___fltol,w
  2470  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2471  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2472  0415  00B1               	movwf	sprintf@val^(0+128)
  2473                           
  2474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2475  0416  0834               	movf	(sprintf@val+3)^(0+128),w
  2476  0417  00F3               	movwf	___xxtofl@val+3
  2477  0418  0833               	movf	(sprintf@val+2)^(0+128),w
  2478  0419  00F2               	movwf	___xxtofl@val+2
  2479  041A  0832               	movf	(sprintf@val+1)^(0+128),w
  2480  041B  00F1               	movwf	___xxtofl@val+1
  2481  041C  0831               	movf	sprintf@val^(0+128),w
  2482  041D  00F0               	movwf	___xxtofl@val
  2483  041E  3000               	movlw	0
  2484  041F  160A  158A  275D  120A  118A  	fcall	___xxtofl
  2485  0424  0873               	movf	?___xxtofl+3,w
  2486  0425  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0426  1303               	bcf	3,6	;RP1=0, select bank0
  2488  0427  00E9               	movwf	___flsub@a+3
  2489  0428  0872               	movf	?___xxtofl+2,w
  2490  0429  00E8               	movwf	___flsub@a+2
  2491  042A  0871               	movf	?___xxtofl+1,w
  2492  042B  00E7               	movwf	___flsub@a+1
  2493  042C  0870               	movf	?___xxtofl,w
  2494  042D  00E6               	movwf	___flsub@a
  2495  042E  1683               	bsf	3,5	;RP0=1, select bank1
  2496  042F  1303               	bcf	3,6	;RP1=0, select bank1
  2497  0430  0841               	movf	(sprintf@fval+3)^(0+128),w
  2498  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0433  00ED               	movwf	___flsub@b+3
  2501  0434  1683               	bsf	3,5	;RP0=1, select bank1
  2502  0435  1303               	bcf	3,6	;RP1=0, select bank1
  2503  0436  0840               	movf	(sprintf@fval+2)^(0+128),w
  2504  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0439  00EC               	movwf	___flsub@b+2
  2507  043A  1683               	bsf	3,5	;RP0=1, select bank1
  2508  043B  1303               	bcf	3,6	;RP1=0, select bank1
  2509  043C  083F               	movf	(sprintf@fval+1)^(0+128),w
  2510  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2511  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2512  043F  00EB               	movwf	___flsub@b+1
  2513  0440  1683               	bsf	3,5	;RP0=1, select bank1
  2514  0441  1303               	bcf	3,6	;RP1=0, select bank1
  2515  0442  083E               	movf	sprintf@fval^(0+128),w
  2516  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0445  00EA               	movwf	___flsub@b
  2519  0446  160A  158A  22B8  120A  118A  	fcall	___flsub
  2520  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2521  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2522  044D  0869               	movf	?___flsub+3,w
  2523  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2524  044F  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0450  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2526  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0453  0868               	movf	?___flsub+2,w
  2529  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2530  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2531  0456  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2532  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0459  0867               	movf	?___flsub+1,w
  2535  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2536  045B  1303               	bcf	3,6	;RP1=0, select bank1
  2537  045C  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2538  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2539  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2540  045F  0866               	movf	?___flsub,w
  2541  0460  1683               	bsf	3,5	;RP0=1, select bank1
  2542  0461  1303               	bcf	3,6	;RP1=0, select bank1
  2543  0462  00BE               	movwf	sprintf@fval^(0+128)
  2544                           
  2545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2546  0463  01B5               	clrf	sprintf@eexp^(0+128)
  2547  0464  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2548  0465                     l3513:	
  2549                           
  2550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2551  0465  01C2               	clrf	sprintf@c^(0+128)
  2552  0466  0AC2               	incf	sprintf@c^(0+128),f
  2553  0467                     l3519:	
  2554                           
  2555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2556  0467  0842               	movf	sprintf@c^(0+128),w
  2557  0468  00A5               	movwf	??_sprintf^(0+128)
  2558  0469  3001               	movlw	1
  2559  046A                     u5465:	
  2560  046A  1003               	clrc
  2561  046B  0DA5               	rlf	??_sprintf^(0+128),f
  2562  046C  3EFF               	addlw	-1
  2563  046D  1D03               	skipz
  2564  046E  2C6A               	goto	u5465
  2565  046F  1003               	clrc
  2566  0470  0D25               	rlf	??_sprintf^(0+128),w
  2567  0471  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2568  0472  0084               	movwf	4
  2569  0473  160A  118A  200A  120A  118A  	fcall	stringdir
  2570  0478  00A6               	movwf	(??_sprintf+1)^(0+128)
  2571  0479  160A  118A  200A  120A  118A  	fcall	stringdir
  2572  047E  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2573  047F  160A  118A  200A  120A  118A  	fcall	stringdir
  2574  0484  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2575  0485  160A  118A  200A  120A  118A  	fcall	stringdir
  2576  048A  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2577  048B  0829               	movf	(??_sprintf+4)^(0+128),w
  2578  048C  0234               	subwf	(sprintf@val+3)^(0+128),w
  2579  048D  1D03               	skipz
  2580  048E  2C99               	goto	u5475
  2581  048F  0828               	movf	(??_sprintf+3)^(0+128),w
  2582  0490  0233               	subwf	(sprintf@val+2)^(0+128),w
  2583  0491  1D03               	skipz
  2584  0492  2C99               	goto	u5475
  2585  0493  0827               	movf	(??_sprintf+2)^(0+128),w
  2586  0494  0232               	subwf	(sprintf@val+1)^(0+128),w
  2587  0495  1D03               	skipz
  2588  0496  2C99               	goto	u5475
  2589  0497  0826               	movf	(??_sprintf+1)^(0+128),w
  2590  0498  0231               	subwf	sprintf@val^(0+128),w
  2591  0499                     u5475:	
  2592  0499  1C03               	btfss	3,0
  2593  049A  2CA3               	goto	l3525
  2594  049B  3001               	movlw	1
  2595  049C  00A5               	movwf	??_sprintf^(0+128)
  2596  049D  0825               	movf	??_sprintf^(0+128),w
  2597  049E  07C2               	addwf	sprintf@c^(0+128),f
  2598  049F  300A               	movlw	10
  2599  04A0  0642               	xorwf	sprintf@c^(0+128),w
  2600  04A1  1D03               	btfss	3,2
  2601  04A2  2C67               	goto	l3519
  2602  04A3                     l3525:	
  2603                           
  2604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2605  04A3  3003               	movlw	3
  2606  04A4  052F               	andwf	sprintf@flag^(0+128),w
  2607  04A5  00A5               	movwf	??_sprintf^(0+128)
  2608  04A6  3000               	movlw	0
  2609  04A7  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2610  04A8  00A6               	movwf	(??_sprintf+1)^(0+128)
  2611  04A9  0825               	movf	??_sprintf^(0+128),w
  2612  04AA  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2613  04AB  1903               	btfsc	3,2
  2614  04AC  2CB8               	goto	l301
  2615                           
  2616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  2617  04AD  302D               	movlw	45
  2618  04AE                     L3:	
  2619  04AE  00A5               	movwf	??_sprintf^(0+128)
  2620  04AF  083B               	movf	sprintf@sp^(0+128),w
  2621  04B0  0084               	movwf	4
  2622  04B1  0825               	movf	??_sprintf^(0+128),w
  2623  04B2  1383               	bcf	3,7	;select IRP bank0
  2624  04B3  0080               	movwf	0
  2625  04B4  3001               	movlw	1
  2626  04B5  00A5               	movwf	??_sprintf^(0+128)
  2627  04B6  0825               	movf	??_sprintf^(0+128),w
  2628  04B7  07BB               	addwf	sprintf@sp^(0+128),f
  2629  04B8                     l301:	
  2630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2631                           
  2632                           
  2633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2634  04B8  3001               	movlw	1
  2635  04B9  02C2               	subwf	sprintf@c^(0+128),f
  2636  04BA  0A42               	incf	sprintf@c^(0+128),w
  2637  04BB  1903               	btfsc	3,2
  2638  04BC  2D4D               	goto	l3543
  2639                           
  2640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2641  04BD  0842               	movf	sprintf@c^(0+128),w
  2642  04BE  00A5               	movwf	??_sprintf^(0+128)
  2643  04BF  3001               	movlw	1
  2644  04C0                     u5505:	
  2645  04C0  1003               	clrc
  2646  04C1  0DA5               	rlf	??_sprintf^(0+128),f
  2647  04C2  3EFF               	addlw	-1
  2648  04C3  1D03               	skipz
  2649  04C4  2CC0               	goto	u5505
  2650  04C5  1003               	clrc
  2651  04C6  0D25               	rlf	??_sprintf^(0+128),w
  2652  04C7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2653  04C8  0084               	movwf	4
  2654  04C9  160A  118A  200A  120A  118A  	fcall	stringdir
  2655  04CE  00F0               	movwf	___lldiv@divisor
  2656  04CF  160A  118A  200A  120A  118A  	fcall	stringdir
  2657  04D4  00F1               	movwf	___lldiv@divisor+1
  2658  04D5  160A  118A  200A  120A  118A  	fcall	stringdir
  2659  04DA  00F2               	movwf	___lldiv@divisor+2
  2660  04DB  160A  118A  200A  120A  118A  	fcall	stringdir
  2661  04E0  00F3               	movwf	___lldiv@divisor+3
  2662  04E1  0834               	movf	(sprintf@val+3)^(0+128),w
  2663  04E2  00F7               	movwf	___lldiv@dividend+3
  2664  04E3  0833               	movf	(sprintf@val+2)^(0+128),w
  2665  04E4  00F6               	movwf	___lldiv@dividend+2
  2666  04E5  0832               	movf	(sprintf@val+1)^(0+128),w
  2667  04E6  00F5               	movwf	___lldiv@dividend+1
  2668  04E7  0831               	movf	sprintf@val^(0+128),w
  2669  04E8  00F4               	movwf	___lldiv@dividend
  2670  04E9  120A  158A  2009  120A  118A  	fcall	___lldiv
  2671  04EE  0873               	movf	?___lldiv+3,w
  2672  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2673  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2674  04F1  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2675  04F2  0872               	movf	?___lldiv+2,w
  2676  04F3  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2677  04F4  0871               	movf	?___lldiv+1,w
  2678  04F5  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2679  04F6  0870               	movf	?___lldiv,w
  2680  04F7  00B7               	movwf	sprintf@tmpval^(0+128)
  2681                           
  2682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2683  04F8  3000               	movlw	0
  2684  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2685  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2686  04FB  00A3               	movwf	___llmod@divisor+3
  2687  04FC  3000               	movlw	0
  2688  04FD  00A2               	movwf	___llmod@divisor+2
  2689  04FE  3000               	movlw	0
  2690  04FF  00A1               	movwf	___llmod@divisor+1
  2691  0500  300A               	movlw	10
  2692  0501  00A0               	movwf	___llmod@divisor
  2693  0502  1683               	bsf	3,5	;RP0=1, select bank1
  2694  0503  1303               	bcf	3,6	;RP1=0, select bank1
  2695  0504  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2696  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0507  00A7               	movwf	___llmod@dividend+3
  2699  0508  1683               	bsf	3,5	;RP0=1, select bank1
  2700  0509  1303               	bcf	3,6	;RP1=0, select bank1
  2701  050A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2702  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2703  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2704  050D  00A6               	movwf	___llmod@dividend+2
  2705  050E  1683               	bsf	3,5	;RP0=1, select bank1
  2706  050F  1303               	bcf	3,6	;RP1=0, select bank1
  2707  0510  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2708  0511  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0512  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0513  00A5               	movwf	___llmod@dividend+1
  2711  0514  1683               	bsf	3,5	;RP0=1, select bank1
  2712  0515  1303               	bcf	3,6	;RP1=0, select bank1
  2713  0516  0837               	movf	sprintf@tmpval^(0+128),w
  2714  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2716  0519  00A4               	movwf	___llmod@dividend
  2717  051A  160A  158A  2560  120A  118A  	fcall	___llmod
  2718  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0521  0823               	movf	?___llmod+3,w
  2721  0522  1683               	bsf	3,5	;RP0=1, select bank1
  2722  0523  1303               	bcf	3,6	;RP1=0, select bank1
  2723  0524  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2724  0525  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0526  1303               	bcf	3,6	;RP1=0, select bank0
  2726  0527  0822               	movf	?___llmod+2,w
  2727  0528  1683               	bsf	3,5	;RP0=1, select bank1
  2728  0529  1303               	bcf	3,6	;RP1=0, select bank1
  2729  052A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2730  052B  1283               	bcf	3,5	;RP0=0, select bank0
  2731  052C  1303               	bcf	3,6	;RP1=0, select bank0
  2732  052D  0821               	movf	?___llmod+1,w
  2733  052E  1683               	bsf	3,5	;RP0=1, select bank1
  2734  052F  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0530  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2736  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0533  0820               	movf	?___llmod,w
  2739  0534  1683               	bsf	3,5	;RP0=1, select bank1
  2740  0535  1303               	bcf	3,6	;RP1=0, select bank1
  2741  0536  00B7               	movwf	sprintf@tmpval^(0+128)
  2742                           
  2743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2744  0537  0837               	movf	sprintf@tmpval^(0+128),w
  2745  0538  3E30               	addlw	48
  2746  0539  2CAE               	goto	L3
  2747  053A                     l3537:	
  2748                           
  2749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  2750  053A  3030               	movlw	48
  2751  053B  1683               	bsf	3,5	;RP0=1, select bank1
  2752  053C  1303               	bcf	3,6	;RP1=0, select bank1
  2753  053D  00A5               	movwf	??_sprintf^(0+128)
  2754  053E  083B               	movf	sprintf@sp^(0+128),w
  2755  053F  0084               	movwf	4
  2756  0540  0825               	movf	??_sprintf^(0+128),w
  2757  0541  1383               	bcf	3,7	;select IRP bank0
  2758  0542  0080               	movwf	0
  2759  0543  3001               	movlw	1
  2760  0544  00A5               	movwf	??_sprintf^(0+128)
  2761  0545  0825               	movf	??_sprintf^(0+128),w
  2762  0546  07BB               	addwf	sprintf@sp^(0+128),f
  2763                           
  2764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2765  0547  30FF               	movlw	255
  2766  0548  07B5               	addwf	sprintf@eexp^(0+128),f
  2767  0549  1803               	skipnc
  2768  054A  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2769  054B  30FF               	movlw	255
  2770  054C  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2771  054D                     l3543:	
  2772                           
  2773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2774  054D  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2775  054E  3A80               	xorlw	128
  2776  054F  00FF               	movwf	127
  2777  0550  3080               	movlw	128
  2778  0551  027F               	subwf	127,w
  2779  0552  1D03               	skipz
  2780  0553  2D56               	goto	u5525
  2781  0554  3001               	movlw	1
  2782  0555  0235               	subwf	sprintf@eexp^(0+128),w
  2783  0556                     u5525:	
  2784  0556  1803               	skipnc
  2785  0557  2D3A               	goto	l3537
  2786                           
  2787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2788  0558  1683               	bsf	3,5	;RP0=1, select bank1
  2789  0559  1303               	bcf	3,6	;RP1=0, select bank1
  2790  055A  083D               	movf	(sprintf@prec+1)^(0+128),w
  2791  055B  3A80               	xorlw	128
  2792  055C  00FF               	movwf	127
  2793  055D  3080               	movlw	128
  2794  055E  027F               	subwf	127,w
  2795  055F  1D03               	skipz
  2796  0560  2D63               	goto	u5535
  2797  0561  3009               	movlw	9
  2798  0562  023C               	subwf	sprintf@prec^(0+128),w
  2799  0563                     u5535:	
  2800  0563  1C03               	skipc
  2801  0564  2D69               	goto	l3549
  2802                           
  2803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2804  0565  3008               	movlw	8
  2805  0566  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0567  1303               	bcf	3,6	;RP1=0, select bank1
  2807  0568  2D6C               	goto	L4
  2808  0569                     l3549:	
  2809                           
  2810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2811  0569  1683               	bsf	3,5	;RP0=1, select bank1
  2812  056A  1303               	bcf	3,6	;RP1=0, select bank1
  2813  056B  083C               	movf	sprintf@prec^(0+128),w
  2814  056C                     L4:	
  2815  056C  00A5               	movwf	??_sprintf^(0+128)
  2816  056D  0825               	movf	??_sprintf^(0+128),w
  2817  056E  00C2               	movwf	sprintf@c^(0+128)
  2818                           
  2819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2820  056F  0842               	movf	sprintf@c^(0+128),w
  2821  0570  00A5               	movwf	??_sprintf^(0+128)
  2822  0571  01A6               	clrf	(??_sprintf^(0+128)+1)
  2823  0572  0825               	movf	??_sprintf^(0+128),w
  2824  0573  02BC               	subwf	sprintf@prec^(0+128),f
  2825  0574  0826               	movf	(??_sprintf+1)^(0+128),w
  2826  0575  1C03               	skipc
  2827  0576  03BD               	decf	(sprintf@prec+1)^(0+128),f
  2828  0577  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  2829                           
  2830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2831  0578  0842               	movf	sprintf@c^(0+128),w
  2832  0579  1903               	btfsc	3,2
  2833  057A  2D86               	goto	l3557
  2834                           
  2835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  2836  057B  302E               	movlw	46
  2837  057C  00A5               	movwf	??_sprintf^(0+128)
  2838  057D  083B               	movf	sprintf@sp^(0+128),w
  2839  057E  0084               	movwf	4
  2840  057F  0825               	movf	??_sprintf^(0+128),w
  2841  0580  1383               	bcf	3,7	;select IRP bank0
  2842  0581  0080               	movwf	0
  2843  0582  3001               	movlw	1
  2844  0583  00A5               	movwf	??_sprintf^(0+128)
  2845  0584  0825               	movf	??_sprintf^(0+128),w
  2846  0585  07BB               	addwf	sprintf@sp^(0+128),f
  2847  0586                     l3557:	
  2848                           
  2849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2850  0586  0842               	movf	sprintf@c^(0+128),w
  2851  0587  120A  158A  24B7  120A  118A  	fcall	_scale
  2852  058C  1283               	bcf	3,5	;RP0=0, select bank0
  2853  058D  1303               	bcf	3,6	;RP1=0, select bank0
  2854  058E  0841               	movf	?_scale+3,w
  2855  058F  1683               	bsf	3,5	;RP0=1, select bank1
  2856  0590  1303               	bcf	3,6	;RP1=0, select bank1
  2857  0591  00AD               	movwf	(_sprintf$908+3)^(0+128)
  2858  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2859  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2860  0594  0840               	movf	?_scale+2,w
  2861  0595  1683               	bsf	3,5	;RP0=1, select bank1
  2862  0596  1303               	bcf	3,6	;RP1=0, select bank1
  2863  0597  00AC               	movwf	(_sprintf$908+2)^(0+128)
  2864  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2865  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2866  059A  083F               	movf	?_scale+1,w
  2867  059B  1683               	bsf	3,5	;RP0=1, select bank1
  2868  059C  1303               	bcf	3,6	;RP1=0, select bank1
  2869  059D  00AB               	movwf	(_sprintf$908+1)^(0+128)
  2870  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2871  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2872  05A0  083E               	movf	?_scale,w
  2873  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  2874  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  2875  05A3  00AA               	movwf	_sprintf$908^(0+128)
  2876                           
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2878  05A4  082D               	movf	(_sprintf$908+3)^(0+128),w
  2879  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2880  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2881  05A7  00AB               	movwf	___flmul@a+3
  2882  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  2883  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  2884  05AA  082C               	movf	(_sprintf$908+2)^(0+128),w
  2885  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2886  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2887  05AD  00AA               	movwf	___flmul@a+2
  2888  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  2889  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  2890  05B0  082B               	movf	(_sprintf$908+1)^(0+128),w
  2891  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2892  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2893  05B3  00A9               	movwf	___flmul@a+1
  2894  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  2895  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  2896  05B6  082A               	movf	_sprintf$908^(0+128),w
  2897  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  2898  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  2899  05B9  00A8               	movwf	___flmul@a
  2900  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  2901  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  2902  05BC  0841               	movf	(sprintf@fval+3)^(0+128),w
  2903  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2904  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  2905  05BF  00A7               	movwf	___flmul@b+3
  2906  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  2907  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  2908  05C2  0840               	movf	(sprintf@fval+2)^(0+128),w
  2909  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2910  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2911  05C5  00A6               	movwf	___flmul@b+2
  2912  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  2913  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  2914  05C8  083F               	movf	(sprintf@fval+1)^(0+128),w
  2915  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  2916  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  2917  05CB  00A5               	movwf	___flmul@b+1
  2918  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  2919  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  2920  05CE  083E               	movf	sprintf@fval^(0+128),w
  2921  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2922  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2923  05D1  00A4               	movwf	___flmul@b
  2924  05D2  120A  158A  21A2  120A  118A  	fcall	___flmul
  2925  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2926  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  2927  05D9  0827               	movf	?___flmul+3,w
  2928  05DA  00D4               	movwf	___fltol@f1+3
  2929  05DB  0826               	movf	?___flmul+2,w
  2930  05DC  00D3               	movwf	___fltol@f1+2
  2931  05DD  0825               	movf	?___flmul+1,w
  2932  05DE  00D2               	movwf	___fltol@f1+1
  2933  05DF  0824               	movf	?___flmul,w
  2934  05E0  00D1               	movwf	___fltol@f1
  2935  05E1  160A  158A  265D  120A  118A  	fcall	___fltol
  2936  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2937  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2938  05E8  0854               	movf	?___fltol+3,w
  2939  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  2940  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  2941  05EB  00B4               	movwf	(sprintf@val+3)^(0+128)
  2942  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  2943  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  2944  05EE  0853               	movf	?___fltol+2,w
  2945  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  2946  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  2947  05F1  00B3               	movwf	(sprintf@val+2)^(0+128)
  2948  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2949  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2950  05F4  0852               	movf	?___fltol+1,w
  2951  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  2952  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  2953  05F7  00B2               	movwf	(sprintf@val+1)^(0+128)
  2954  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  2955  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  2956  05FA  0851               	movf	?___fltol,w
  2957  05FB                     L5:	
  2958  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  2959  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  2960  05FD  00B1               	movwf	sprintf@val^(0+128)
  2961                           
  2962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2963  05FE  3001               	movlw	1
  2964  05FF  02C2               	subwf	sprintf@c^(0+128),f
  2965  0600  0A42               	incf	sprintf@c^(0+128),w
  2966  0601  1903               	btfsc	3,2
  2967  0602  2EF3               	goto	l3577
  2968                           
  2969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  2970                           
  2971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2972  0603  0842               	movf	sprintf@c^(0+128),w
  2973  0604  00A5               	movwf	??_sprintf^(0+128)
  2974  0605  3001               	movlw	1
  2975  0606                     u5555:	
  2976  0606  1003               	clrc
  2977  0607  0DA5               	rlf	??_sprintf^(0+128),f
  2978  0608  3EFF               	addlw	-1
  2979  0609  1D03               	skipz
  2980  060A  2E06               	goto	u5555
  2981  060B  1003               	clrc
  2982  060C  0D25               	rlf	??_sprintf^(0+128),w
  2983  060D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2984  060E  0084               	movwf	4
  2985  060F  160A  118A  200A  120A  118A  	fcall	stringdir
  2986  0614  00F0               	movwf	___lldiv@divisor
  2987  0615  160A  118A  200A  120A  118A  	fcall	stringdir
  2988  061A  00F1               	movwf	___lldiv@divisor+1
  2989  061B  160A  118A  200A  120A  118A  	fcall	stringdir
  2990  0620  00F2               	movwf	___lldiv@divisor+2
  2991  0621  160A  118A  200A  120A  118A  	fcall	stringdir
  2992  0626  00F3               	movwf	___lldiv@divisor+3
  2993  0627  0834               	movf	(sprintf@val+3)^(0+128),w
  2994  0628  00F7               	movwf	___lldiv@dividend+3
  2995  0629  0833               	movf	(sprintf@val+2)^(0+128),w
  2996  062A  00F6               	movwf	___lldiv@dividend+2
  2997  062B  0832               	movf	(sprintf@val+1)^(0+128),w
  2998  062C  00F5               	movwf	___lldiv@dividend+1
  2999  062D  0831               	movf	sprintf@val^(0+128),w
  3000  062E  00F4               	movwf	___lldiv@dividend
  3001  062F  120A  158A  2009  120A  118A  	fcall	___lldiv
  3002  0634  0873               	movf	?___lldiv+3,w
  3003  0635  1683               	bsf	3,5	;RP0=1, select bank1
  3004  0636  1303               	bcf	3,6	;RP1=0, select bank1
  3005  0637  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3006  0638  0872               	movf	?___lldiv+2,w
  3007  0639  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3008  063A  0871               	movf	?___lldiv+1,w
  3009  063B  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3010  063C  0870               	movf	?___lldiv,w
  3011  063D  00B7               	movwf	sprintf@tmpval^(0+128)
  3012                           
  3013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  3014  063E  3000               	movlw	0
  3015  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0641  00A3               	movwf	___llmod@divisor+3
  3018  0642  3000               	movlw	0
  3019  0643  00A2               	movwf	___llmod@divisor+2
  3020  0644  3000               	movlw	0
  3021  0645  00A1               	movwf	___llmod@divisor+1
  3022  0646  300A               	movlw	10
  3023  0647  00A0               	movwf	___llmod@divisor
  3024  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3025  0649  1303               	bcf	3,6	;RP1=0, select bank1
  3026  064A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3027  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3028  064C  1303               	bcf	3,6	;RP1=0, select bank0
  3029  064D  00A7               	movwf	___llmod@dividend+3
  3030  064E  1683               	bsf	3,5	;RP0=1, select bank1
  3031  064F  1303               	bcf	3,6	;RP1=0, select bank1
  3032  0650  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3033  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0653  00A6               	movwf	___llmod@dividend+2
  3036  0654  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0655  1303               	bcf	3,6	;RP1=0, select bank1
  3038  0656  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3039  0657  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0658  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0659  00A5               	movwf	___llmod@dividend+1
  3042  065A  1683               	bsf	3,5	;RP0=1, select bank1
  3043  065B  1303               	bcf	3,6	;RP1=0, select bank1
  3044  065C  0837               	movf	sprintf@tmpval^(0+128),w
  3045  065D  1283               	bcf	3,5	;RP0=0, select bank0
  3046  065E  1303               	bcf	3,6	;RP1=0, select bank0
  3047  065F  00A4               	movwf	___llmod@dividend
  3048  0660  160A  158A  2560  120A  118A  	fcall	___llmod
  3049  0665  1283               	bcf	3,5	;RP0=0, select bank0
  3050  0666  1303               	bcf	3,6	;RP1=0, select bank0
  3051  0667  0823               	movf	?___llmod+3,w
  3052  0668  1683               	bsf	3,5	;RP0=1, select bank1
  3053  0669  1303               	bcf	3,6	;RP1=0, select bank1
  3054  066A  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3055  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3056  066C  1303               	bcf	3,6	;RP1=0, select bank0
  3057  066D  0822               	movf	?___llmod+2,w
  3058  066E  1683               	bsf	3,5	;RP0=1, select bank1
  3059  066F  1303               	bcf	3,6	;RP1=0, select bank1
  3060  0670  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3061  0671  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0672  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0673  0821               	movf	?___llmod+1,w
  3064  0674  1683               	bsf	3,5	;RP0=1, select bank1
  3065  0675  1303               	bcf	3,6	;RP1=0, select bank1
  3066  0676  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3067  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3068  0678  1303               	bcf	3,6	;RP1=0, select bank0
  3069  0679  0820               	movf	?___llmod,w
  3070  067A  1683               	bsf	3,5	;RP0=1, select bank1
  3071  067B  1303               	bcf	3,6	;RP1=0, select bank1
  3072  067C  00B7               	movwf	sprintf@tmpval^(0+128)
  3073                           
  3074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3075  067D  0837               	movf	sprintf@tmpval^(0+128),w
  3076  067E  3E30               	addlw	48
  3077  067F  00A5               	movwf	??_sprintf^(0+128)
  3078  0680  083B               	movf	sprintf@sp^(0+128),w
  3079  0681  0084               	movwf	4
  3080  0682  0825               	movf	??_sprintf^(0+128),w
  3081  0683  1383               	bcf	3,7	;select IRP bank0
  3082  0684  0080               	movwf	0
  3083  0685  3001               	movlw	1
  3084  0686  00A5               	movwf	??_sprintf^(0+128)
  3085  0687  0825               	movf	??_sprintf^(0+128),w
  3086  0688  07BB               	addwf	sprintf@sp^(0+128),f
  3087                           
  3088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  3089  0689  0842               	movf	sprintf@c^(0+128),w
  3090  068A  00A5               	movwf	??_sprintf^(0+128)
  3091  068B  3001               	movlw	1
  3092  068C                     u5565:	
  3093  068C  1003               	clrc
  3094  068D  0DA5               	rlf	??_sprintf^(0+128),f
  3095  068E  3EFF               	addlw	-1
  3096  068F  1D03               	skipz
  3097  0690  2E8C               	goto	u5565
  3098  0691  1003               	clrc
  3099  0692  0D25               	rlf	??_sprintf^(0+128),w
  3100  0693  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3101  0694  0084               	movwf	4
  3102  0695  160A  118A  200A  120A  118A  	fcall	stringdir
  3103  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3104  069B  1303               	bcf	3,6	;RP1=0, select bank0
  3105  069C  00A0               	movwf	___llmod@divisor
  3106  069D  160A  118A  200A  120A  118A  	fcall	stringdir
  3107  06A2  00A1               	movwf	___llmod@divisor+1
  3108  06A3  160A  118A  200A  120A  118A  	fcall	stringdir
  3109  06A8  00A2               	movwf	___llmod@divisor+2
  3110  06A9  160A  118A  200A  120A  118A  	fcall	stringdir
  3111  06AE  00A3               	movwf	___llmod@divisor+3
  3112  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  3113  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  3114  06B1  0834               	movf	(sprintf@val+3)^(0+128),w
  3115  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3116  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  3117  06B4  00A7               	movwf	___llmod@dividend+3
  3118  06B5  1683               	bsf	3,5	;RP0=1, select bank1
  3119  06B6  1303               	bcf	3,6	;RP1=0, select bank1
  3120  06B7  0833               	movf	(sprintf@val+2)^(0+128),w
  3121  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  3122  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  3123  06BA  00A6               	movwf	___llmod@dividend+2
  3124  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  3125  06BC  1303               	bcf	3,6	;RP1=0, select bank1
  3126  06BD  0832               	movf	(sprintf@val+1)^(0+128),w
  3127  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3128  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3129  06C0  00A5               	movwf	___llmod@dividend+1
  3130  06C1  1683               	bsf	3,5	;RP0=1, select bank1
  3131  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  3132  06C3  0831               	movf	sprintf@val^(0+128),w
  3133  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  3134  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  3135  06C6  00A4               	movwf	___llmod@dividend
  3136  06C7  160A  158A  2560  120A  118A  	fcall	___llmod
  3137  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  3138  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  3139  06CE  0823               	movf	?___llmod+3,w
  3140  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  3141  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  3142  06D1  00B4               	movwf	(sprintf@val+3)^(0+128)
  3143  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  3144  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  3145  06D4  0822               	movf	?___llmod+2,w
  3146  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  3147  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  3148  06D7  00B3               	movwf	(sprintf@val+2)^(0+128)
  3149  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3150  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3151  06DA  0821               	movf	?___llmod+1,w
  3152  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  3153  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  3154  06DD  00B2               	movwf	(sprintf@val+1)^(0+128)
  3155  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  3156  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  3157  06E0  0820               	movf	?___llmod,w
  3158  06E1  2DFB               	goto	L5
  3159  06E2                     l3571:	
  3160                           
  3161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  3162  06E2  3030               	movlw	48
  3163  06E3  00A5               	movwf	??_sprintf^(0+128)
  3164  06E4  083B               	movf	sprintf@sp^(0+128),w
  3165  06E5  0084               	movwf	4
  3166  06E6  0825               	movf	??_sprintf^(0+128),w
  3167  06E7  1383               	bcf	3,7	;select IRP bank0
  3168  06E8  0080               	movwf	0
  3169  06E9  3001               	movlw	1
  3170  06EA  00A5               	movwf	??_sprintf^(0+128)
  3171  06EB  0825               	movf	??_sprintf^(0+128),w
  3172  06EC  07BB               	addwf	sprintf@sp^(0+128),f
  3173                           
  3174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  3175  06ED  30FF               	movlw	255
  3176  06EE  07BC               	addwf	sprintf@prec^(0+128),f
  3177  06EF  1803               	skipnc
  3178  06F0  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3179  06F1  30FF               	movlw	255
  3180  06F2  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3181  06F3                     l3577:	
  3182                           
  3183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  3184  06F3  083C               	movf	sprintf@prec^(0+128),w
  3185  06F4  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3186  06F5  1903               	btfsc	3,2
  3187  06F6  28DB               	goto	l3623
  3188  06F7  2EE2               	goto	l3571
  3189  06F8                     l3579:	
  3190                           
  3191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1292:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1305:     val
      +                           = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3192  06F8  082E               	movf	sprintf@ap^(0+128),w
  3193  06F9  0084               	movwf	4
  3194  06FA  1383               	bcf	3,7	;select IRP bank0
  3195  06FB  0800               	movf	0,w
  3196  06FC  00A5               	movwf	??_sprintf^(0+128)
  3197  06FD  0A84               	incf	4,f
  3198  06FE  0800               	movf	0,w
  3199  06FF  00A6               	movwf	(??_sprintf^(0+128)+1)
  3200  0700  0825               	movf	??_sprintf^(0+128),w
  3201  0701  00B1               	movwf	sprintf@val^(0+128)
  3202  0702  0826               	movf	(??_sprintf+1)^(0+128),w
  3203  0703  00B2               	movwf	(sprintf@val^(0+128)+1)
  3204  0704  01B3               	clrf	(sprintf@val^(0+128)+2)
  3205  0705  01B4               	clrf	(sprintf@val^(0+128)+3)
  3206  0706  3002               	movlw	2
  3207  0707  00A5               	movwf	??_sprintf^(0+128)
  3208  0708  0825               	movf	??_sprintf^(0+128),w
  3209  0709  07AE               	addwf	sprintf@ap^(0+128),f
  3210                           
  3211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1306:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(pr
      +                          ec == 0 && val == 0)
  3212  070A  083C               	movf	sprintf@prec^(0+128),w
  3213  070B  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3214  070C  1D03               	btfss	3,2
  3215  070D  2F1A               	goto	l3589
  3216  070E  0834               	movf	(sprintf@val+3)^(0+128),w
  3217  070F  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3218  0710  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3219  0711  0431               	iorwf	sprintf@val^(0+128),w
  3220  0712  1D03               	skipz
  3221  0713  2F1A               	goto	l3589
  3222                           
  3223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  3224  0714  3001               	movlw	1
  3225  0715  07BC               	addwf	sprintf@prec^(0+128),f
  3226  0716  1803               	skipnc
  3227  0717  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3228  0718  3000               	movlw	0
  3229  0719  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3230  071A                     l3589:	
  3231                           
  3232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3233  071A  01C2               	clrf	sprintf@c^(0+128)
  3234  071B  0AC2               	incf	sprintf@c^(0+128),f
  3235  071C                     l3595:	
  3236                           
  3237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  3238  071C  0842               	movf	sprintf@c^(0+128),w
  3239  071D  00A5               	movwf	??_sprintf^(0+128)
  3240  071E  3001               	movlw	1
  3241  071F                     u5615:	
  3242  071F  1003               	clrc
  3243  0720  0DA5               	rlf	??_sprintf^(0+128),f
  3244  0721  3EFF               	addlw	-1
  3245  0722  1D03               	skipz
  3246  0723  2F1F               	goto	u5615
  3247  0724  1003               	clrc
  3248  0725  0D25               	rlf	??_sprintf^(0+128),w
  3249  0726  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3250  0727  0084               	movwf	4
  3251  0728  160A  118A  200A  120A  118A  	fcall	stringdir
  3252  072D  00A6               	movwf	(??_sprintf+1)^(0+128)
  3253  072E  160A  118A  200A  120A  118A  	fcall	stringdir
  3254  0733  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3255  0734  160A  118A  200A  120A  118A  	fcall	stringdir
  3256  0739  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3257  073A  160A  118A  200A  120A  118A  	fcall	stringdir
  3258  073F  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3259  0740  0829               	movf	(??_sprintf+4)^(0+128),w
  3260  0741  0234               	subwf	(sprintf@val+3)^(0+128),w
  3261  0742  1D03               	skipz
  3262  0743  2F4E               	goto	u5625
  3263  0744  0828               	movf	(??_sprintf+3)^(0+128),w
  3264  0745  0233               	subwf	(sprintf@val+2)^(0+128),w
  3265  0746  1D03               	skipz
  3266  0747  2F4E               	goto	u5625
  3267  0748  0827               	movf	(??_sprintf+2)^(0+128),w
  3268  0749  0232               	subwf	(sprintf@val+1)^(0+128),w
  3269  074A  1D03               	skipz
  3270  074B  2F4E               	goto	u5625
  3271  074C  0826               	movf	(??_sprintf+1)^(0+128),w
  3272  074D  0231               	subwf	sprintf@val^(0+128),w
  3273  074E                     u5625:	
  3274  074E  1C03               	btfss	3,0
  3275  074F  2F58               	goto	l3601
  3276  0750  3001               	movlw	1
  3277  0751  00A5               	movwf	??_sprintf^(0+128)
  3278  0752  0825               	movf	??_sprintf^(0+128),w
  3279  0753  07C2               	addwf	sprintf@c^(0+128),f
  3280  0754  300A               	movlw	10
  3281  0755  0642               	xorwf	sprintf@c^(0+128),w
  3282  0756  1D03               	btfss	3,2
  3283  0757  2F1C               	goto	l3595
  3284  0758                     l3601:	
  3285                           
  3286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  3287  0758  083D               	movf	(sprintf@prec+1)^(0+128),w
  3288  0759  3A80               	xorlw	128
  3289  075A  3C80               	sublw	128
  3290  075B  1D03               	skipz
  3291  075C  2F5F               	goto	u5645
  3292  075D  083C               	movf	sprintf@prec^(0+128),w
  3293  075E  0242               	subwf	sprintf@c^(0+128),w
  3294  075F                     u5645:	
  3295  075F  1C03               	btfss	3,0
  3296  0760  2F77               	goto	l3609
  3297  0761  1683               	bsf	3,5	;RP0=1, select bank1
  3298  0762  1303               	bcf	3,6	;RP1=0, select bank1
  3299  0763  083D               	movf	(sprintf@prec+1)^(0+128),w
  3300  0764  3A80               	xorlw	128
  3301  0765  00A5               	movwf	??_sprintf^(0+128)
  3302  0766  3080               	movlw	128
  3303  0767  0225               	subwf	??_sprintf^(0+128),w
  3304  0768  1D03               	skipz
  3305  0769  2F6C               	goto	u5655
  3306  076A  0842               	movf	sprintf@c^(0+128),w
  3307  076B  023C               	subwf	sprintf@prec^(0+128),w
  3308  076C                     u5655:	
  3309  076C  1803               	skipnc
  3310  076D  2F77               	goto	l3609
  3311                           
  3312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1361:    pr
      +                          ec = c;
  3313  076E  1683               	bsf	3,5	;RP0=1, select bank1
  3314  076F  1303               	bcf	3,6	;RP1=0, select bank1
  3315  0770  0842               	movf	sprintf@c^(0+128),w
  3316  0771  00A5               	movwf	??_sprintf^(0+128)
  3317  0772  01A6               	clrf	(??_sprintf^(0+128)+1)
  3318  0773  0825               	movf	??_sprintf^(0+128),w
  3319  0774  00BC               	movwf	sprintf@prec^(0+128)
  3320  0775  0826               	movf	(??_sprintf+1)^(0+128),w
  3321  0776  00BD               	movwf	(sprintf@prec+1)^(0+128)
  3322  0777                     l3609:	
  3323                           
  3324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  3325  0777  3003               	movlw	3
  3326  0778  1683               	bsf	3,5	;RP0=1, select bank1
  3327  0779  1303               	bcf	3,6	;RP1=0, select bank1
  3328  077A  052F               	andwf	sprintf@flag^(0+128),w
  3329  077B  00A5               	movwf	??_sprintf^(0+128)
  3330  077C  3000               	movlw	0
  3331  077D  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3332  077E  00A6               	movwf	(??_sprintf+1)^(0+128)
  3333  077F  0825               	movf	??_sprintf^(0+128),w
  3334  0780  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3335  0781  1903               	btfsc	3,2
  3336  0782  2F8E               	goto	l3621
  3337                           
  3338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  3339  0783  302D               	movlw	45
  3340  0784                     L6:	
  3341  0784  00A5               	movwf	??_sprintf^(0+128)
  3342  0785  083B               	movf	sprintf@sp^(0+128),w
  3343  0786  0084               	movwf	4
  3344  0787  0825               	movf	??_sprintf^(0+128),w
  3345  0788  1383               	bcf	3,7	;select IRP bank0
  3346  0789  0080               	movwf	0
  3347  078A  3001               	movlw	1
  3348  078B  00A5               	movwf	??_sprintf^(0+128)
  3349  078C  0825               	movf	??_sprintf^(0+128),w
  3350  078D  07BB               	addwf	sprintf@sp^(0+128),f
  3351  078E                     l3621:	
  3352                           
  3353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  3354  078E  30FF               	movlw	255
  3355  078F  07BC               	addwf	sprintf@prec^(0+128),f
  3356  0790  1803               	skipnc
  3357  0791  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3358  0792  30FF               	movlw	255
  3359  0793  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3360  0794  0A3C               	incf	sprintf@prec^(0+128),w
  3361  0795  1903               	btfsc	3,2
  3362  0796  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  3363  0797  1903               	btfsc	3,2
  3364  0798  28DB               	goto	l3623
  3365                           
  3366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  3367  0799  3000               	movlw	0
  3368  079A  1283               	bcf	3,5	;RP0=0, select bank0
  3369  079B  1303               	bcf	3,6	;RP1=0, select bank0
  3370  079C  00A3               	movwf	___llmod@divisor+3
  3371  079D  3000               	movlw	0
  3372  079E  00A2               	movwf	___llmod@divisor+2
  3373  079F  3000               	movlw	0
  3374  07A0  00A1               	movwf	___llmod@divisor+1
  3375  07A1  300A               	movlw	10
  3376  07A2  00A0               	movwf	___llmod@divisor
  3377  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  3378  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  3379  07A5  083C               	movf	sprintf@prec^(0+128),w
  3380  07A6  00A5               	movwf	??_sprintf^(0+128)
  3381  07A7  3001               	movlw	1
  3382  07A8                     u5675:	
  3383  07A8  1003               	clrc
  3384  07A9  0DA5               	rlf	??_sprintf^(0+128),f
  3385  07AA  3EFF               	addlw	-1
  3386  07AB  1D03               	skipz
  3387  07AC  2FA8               	goto	u5675
  3388  07AD  1003               	clrc
  3389  07AE  0D25               	rlf	??_sprintf^(0+128),w
  3390  07AF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3391  07B0  0084               	movwf	4
  3392  07B1  160A  118A  200A  120A  118A  	fcall	stringdir
  3393  07B6  00F0               	movwf	___lldiv@divisor
  3394  07B7  160A  118A  200A  120A  118A  	fcall	stringdir
  3395  07BC  00F1               	movwf	___lldiv@divisor+1
  3396  07BD  160A  118A  200A  120A  118A  	fcall	stringdir
  3397  07C2  00F2               	movwf	___lldiv@divisor+2
  3398  07C3  160A  118A  200A  120A  118A  	fcall	stringdir
  3399  07C8  00F3               	movwf	___lldiv@divisor+3
  3400  07C9  0834               	movf	(sprintf@val+3)^(0+128),w
  3401  07CA  00F7               	movwf	___lldiv@dividend+3
  3402  07CB  0833               	movf	(sprintf@val+2)^(0+128),w
  3403  07CC  00F6               	movwf	___lldiv@dividend+2
  3404  07CD  0832               	movf	(sprintf@val+1)^(0+128),w
  3405  07CE  00F5               	movwf	___lldiv@dividend+1
  3406  07CF  0831               	movf	sprintf@val^(0+128),w
  3407  07D0  00F4               	movwf	___lldiv@dividend
  3408  07D1  120A  158A  2009  120A  118A  	fcall	___lldiv
  3409  07D6  0873               	movf	?___lldiv+3,w
  3410  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  3411  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  3412  07D9  00A7               	movwf	___llmod@dividend+3
  3413  07DA  0872               	movf	?___lldiv+2,w
  3414  07DB  00A6               	movwf	___llmod@dividend+2
  3415  07DC  0871               	movf	?___lldiv+1,w
  3416  07DD  00A5               	movwf	___llmod@dividend+1
  3417  07DE  0870               	movf	?___lldiv,w
  3418  07DF  00A4               	movwf	___llmod@dividend
  3419  07E0  160A  158A  2560  120A  118A  	fcall	___llmod
  3420  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  3421  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  3422  07E7  0820               	movf	?___llmod,w
  3423  07E8  3E30               	addlw	48
  3424  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  3425  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  3426  07EB  00A6               	movwf	(??_sprintf+1)^(0+128)
  3427  07EC  0826               	movf	(??_sprintf+1)^(0+128),w
  3428  07ED  00C2               	movwf	sprintf@c^(0+128)
  3429                           
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  3431  07EE  0842               	movf	sprintf@c^(0+128),w
  3432  07EF  2F84               	goto	L6
  3433  07F0                     l3625:	
  3434                           
  3435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  3436  07F0  083B               	movf	sprintf@sp^(0+128),w
  3437  07F1  0084               	movwf	4
  3438  07F2  1383               	bcf	3,7	;select IRP bank0
  3439  07F3  0180               	clrf	0
  3440  07F4  0008               	return
  3441  07F5                     __end_of_sprintf:	
  3442                           
  3443                           	psect	text2
  3444  0CB7                     __ptext2:	
  3445 ;; *************** function _scale *****************
  3446 ;; Defined at:
  3447 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  scl             1    wreg     char 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  scl             1   48[BANK0 ] char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  4   30[BANK0 ] char 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         0       4       0       0       0
  3462 ;;      Locals:         0       5       0       0       0
  3463 ;;      Temps:          0      10       0       0       0
  3464 ;;      Totals:         0      19       0       0       0
  3465 ;;Total ram usage:       19 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    2
  3468 ;; This function calls:
  3469 ;;		___awdiv
  3470 ;;		___awmod
  3471 ;;		___flmul
  3472 ;; This function is called by:
  3473 ;;		_sprintf
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _scale
  3479  0CB7                     _scale:	
  3480                           
  3481                           ;incstack = 0
  3482                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3483                           ;scale@scl stored from wreg
  3484  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  3486  0CB9  00D0               	movwf	scale@scl
  3487                           
  3488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3489  0CBA  1FD0               	btfss	scale@scl,7
  3490  0CBB  2E5F               	goto	l3071
  3491                           
  3492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3493  0CBC  09D0               	comf	scale@scl,f
  3494  0CBD  0AD0               	incf	scale@scl,f
  3495                           
  3496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3497  0CBE  0850               	movf	scale@scl,w
  3498  0CBF  3A80               	xorlw	128
  3499  0CC0  3E12               	addlw	-238
  3500  0CC1  1C03               	skipc
  3501  0CC2  2DA9               	goto	l3061
  3502                           
  3503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3504  0CC3  300A               	movlw	10
  3505  0CC4  00F7               	movwf	___awdiv@divisor
  3506  0CC5  3000               	movlw	0
  3507  0CC6  00F8               	movwf	___awdiv@divisor+1
  3508  0CC7  0850               	movf	scale@scl,w
  3509  0CC8  00F2               	movwf	___awmod@dividend
  3510  0CC9  01F3               	clrf	___awmod@dividend+1
  3511  0CCA  1BF2               	btfsc	___awmod@dividend,7
  3512  0CCB  03F3               	decf	___awmod@dividend+1,f
  3513  0CCC  3064               	movlw	100
  3514  0CCD  00F0               	movwf	___awmod@divisor
  3515  0CCE  3000               	movlw	0
  3516  0CCF  00F1               	movwf	___awmod@divisor+1
  3517  0CD0  160A  158A  24C8  120A  158A  	fcall	___awmod
  3518  0CD5  0871               	movf	?___awmod+1,w
  3519  0CD6  00FA               	movwf	___awdiv@dividend+1
  3520  0CD7  0870               	movf	?___awmod,w
  3521  0CD8  00F9               	movwf	___awdiv@dividend
  3522  0CD9  160A  158A  2602  120A  158A  	fcall	___awdiv
  3523  0CDE  0877               	movf	?___awdiv,w
  3524  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3526  0CE1  00C2               	movwf	??_scale
  3527  0CE2  3001               	movlw	1
  3528  0CE3                     u4395:	
  3529  0CE3  1003               	clrc
  3530  0CE4  0DC2               	rlf	??_scale,f
  3531  0CE5  3EFF               	addlw	-1
  3532  0CE6  1D03               	skipz
  3533  0CE7  2CE3               	goto	u4395
  3534  0CE8  1003               	clrc
  3535  0CE9  0D42               	rlf	??_scale,w
  3536  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3537  0CEB  0084               	movwf	4
  3538  0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  3539  0CF1  00C3               	movwf	??_scale+1
  3540  0CF2  160A  118A  200A  120A  158A  	fcall	stringdir
  3541  0CF7  00C4               	movwf	??_scale+2
  3542  0CF8  160A  118A  200A  120A  158A  	fcall	stringdir
  3543  0CFD  00C5               	movwf	??_scale+3
  3544  0CFE  160A  118A  200A  120A  158A  	fcall	stringdir
  3545  0D03  00C6               	movwf	??_scale+4
  3546  0D04  0846               	movf	??_scale+4,w
  3547  0D05  00A7               	movwf	___flmul@b+3
  3548  0D06  0845               	movf	??_scale+3,w
  3549  0D07  00A6               	movwf	___flmul@b+2
  3550  0D08  0844               	movf	??_scale+2,w
  3551  0D09  00A5               	movwf	___flmul@b+1
  3552  0D0A  0843               	movf	??_scale+1,w
  3553  0D0B  00A4               	movwf	___flmul@b
  3554  0D0C  3064               	movlw	100
  3555  0D0D  00F7               	movwf	___awdiv@divisor
  3556  0D0E  3000               	movlw	0
  3557  0D0F  00F8               	movwf	___awdiv@divisor+1
  3558  0D10  0850               	movf	scale@scl,w
  3559  0D11  00F9               	movwf	___awdiv@dividend
  3560  0D12  01FA               	clrf	___awdiv@dividend+1
  3561  0D13  1BF9               	btfsc	___awdiv@dividend,7
  3562  0D14  03FA               	decf	___awdiv@dividend+1,f
  3563  0D15  160A  158A  2602  120A  158A  	fcall	___awdiv
  3564  0D1A  0877               	movf	?___awdiv,w
  3565  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0D1D  00C7               	movwf	??_scale+5
  3568  0D1E  3001               	movlw	1
  3569  0D1F                     u4405:	
  3570  0D1F  1003               	clrc
  3571  0D20  0DC7               	rlf	??_scale+5,f
  3572  0D21  3EFF               	addlw	-1
  3573  0D22  1D03               	skipz
  3574  0D23  2D1F               	goto	u4405
  3575  0D24  1003               	clrc
  3576  0D25  0D47               	rlf	??_scale+5,w
  3577  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3578  0D27  0084               	movwf	4
  3579  0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  3580  0D2D  00C8               	movwf	??_scale+6
  3581  0D2E  160A  118A  200A  120A  158A  	fcall	stringdir
  3582  0D33  00C9               	movwf	??_scale+7
  3583  0D34  160A  118A  200A  120A  158A  	fcall	stringdir
  3584  0D39  00CA               	movwf	??_scale+8
  3585  0D3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3586  0D3F  00CB               	movwf	??_scale+9
  3587  0D40  084B               	movf	??_scale+9,w
  3588  0D41  00AB               	movwf	___flmul@a+3
  3589  0D42  084A               	movf	??_scale+8,w
  3590  0D43  00AA               	movwf	___flmul@a+2
  3591  0D44  0849               	movf	??_scale+7,w
  3592  0D45  00A9               	movwf	___flmul@a+1
  3593  0D46  0848               	movf	??_scale+6,w
  3594  0D47  00A8               	movwf	___flmul@a
  3595  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3596  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0D4F  0827               	movf	?___flmul+3,w
  3599  0D50  00CF               	movwf	_scale$907+3
  3600  0D51  0826               	movf	?___flmul+2,w
  3601  0D52  00CE               	movwf	_scale$907+2
  3602  0D53  0825               	movf	?___flmul+1,w
  3603  0D54  00CD               	movwf	_scale$907+1
  3604  0D55  0824               	movf	?___flmul,w
  3605  0D56  00CC               	movwf	_scale$907
  3606                           
  3607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3608  0D57  300A               	movlw	10
  3609  0D58  00F0               	movwf	___awmod@divisor
  3610  0D59  3000               	movlw	0
  3611  0D5A  00F1               	movwf	___awmod@divisor+1
  3612  0D5B  0850               	movf	scale@scl,w
  3613  0D5C  00F2               	movwf	___awmod@dividend
  3614  0D5D  01F3               	clrf	___awmod@dividend+1
  3615  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3616  0D5F  03F3               	decf	___awmod@dividend+1,f
  3617  0D60  160A  158A  24C8  120A  158A  	fcall	___awmod
  3618  0D65  0870               	movf	?___awmod,w
  3619  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3621  0D68  00C2               	movwf	??_scale
  3622  0D69  3001               	movlw	1
  3623  0D6A                     u4415:	
  3624  0D6A  1003               	clrc
  3625  0D6B  0DC2               	rlf	??_scale,f
  3626  0D6C  3EFF               	addlw	-1
  3627  0D6D  1D03               	skipz
  3628  0D6E  2D6A               	goto	u4415
  3629  0D6F  1003               	clrc
  3630  0D70  0D42               	rlf	??_scale,w
  3631  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3632  0D72  0084               	movwf	4
  3633  0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  3634  0D78  00C3               	movwf	??_scale+1
  3635  0D79  160A  118A  200A  120A  158A  	fcall	stringdir
  3636  0D7E  00C4               	movwf	??_scale+2
  3637  0D7F  160A  118A  200A  120A  158A  	fcall	stringdir
  3638  0D84  00C5               	movwf	??_scale+3
  3639  0D85  160A  118A  200A  120A  158A  	fcall	stringdir
  3640  0D8A  00C6               	movwf	??_scale+4
  3641  0D8B  0846               	movf	??_scale+4,w
  3642  0D8C  00A7               	movwf	___flmul@b+3
  3643  0D8D  0845               	movf	??_scale+3,w
  3644  0D8E  00A6               	movwf	___flmul@b+2
  3645  0D8F  0844               	movf	??_scale+2,w
  3646  0D90  00A5               	movwf	___flmul@b+1
  3647  0D91  0843               	movf	??_scale+1,w
  3648  0D92  00A4               	movwf	___flmul@b
  3649  0D93  084F               	movf	_scale$907+3,w
  3650  0D94  00AB               	movwf	___flmul@a+3
  3651  0D95  084E               	movf	_scale$907+2,w
  3652  0D96  00AA               	movwf	___flmul@a+2
  3653  0D97  084D               	movf	_scale$907+1,w
  3654  0D98  00A9               	movwf	___flmul@a+1
  3655  0D99  084C               	movf	_scale$907,w
  3656  0D9A  00A8               	movwf	___flmul@a
  3657  0D9B  120A  158A  21A2   	fcall	___flmul
  3658  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3659  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3660  0DA0  0827               	movf	?___flmul+3,w
  3661  0DA1  00C1               	movwf	?_scale+3
  3662  0DA2  0826               	movf	?___flmul+2,w
  3663  0DA3  00C0               	movwf	?_scale+2
  3664  0DA4  0825               	movf	?___flmul+1,w
  3665  0DA5  00BF               	movwf	?_scale+1
  3666  0DA6  0824               	movf	?___flmul,w
  3667  0DA7  00BE               	movwf	?_scale
  3668  0DA8  0008               	return
  3669  0DA9                     l3061:	
  3670  0DA9  0850               	movf	scale@scl,w
  3671  0DAA  3A80               	xorlw	128
  3672  0DAB  3E75               	addlw	-139
  3673  0DAC  1C03               	skipc
  3674  0DAD  2E34               	goto	l3067
  3675                           
  3676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3677  0DAE  300A               	movlw	10
  3678  0DAF  00F0               	movwf	___awmod@divisor
  3679  0DB0  3000               	movlw	0
  3680  0DB1  00F1               	movwf	___awmod@divisor+1
  3681  0DB2  0850               	movf	scale@scl,w
  3682  0DB3  00F2               	movwf	___awmod@dividend
  3683  0DB4  01F3               	clrf	___awmod@dividend+1
  3684  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3685  0DB6  03F3               	decf	___awmod@dividend+1,f
  3686  0DB7  160A  158A  24C8  120A  158A  	fcall	___awmod
  3687  0DBC  0870               	movf	?___awmod,w
  3688  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3689  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3690  0DBF  00C2               	movwf	??_scale
  3691  0DC0  3001               	movlw	1
  3692  0DC1                     u4435:	
  3693  0DC1  1003               	clrc
  3694  0DC2  0DC2               	rlf	??_scale,f
  3695  0DC3  3EFF               	addlw	-1
  3696  0DC4  1D03               	skipz
  3697  0DC5  2DC1               	goto	u4435
  3698  0DC6  1003               	clrc
  3699  0DC7  0D42               	rlf	??_scale,w
  3700  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3701  0DC9  0084               	movwf	4
  3702  0DCA  160A  118A  200A  120A  158A  	fcall	stringdir
  3703  0DCF  00C3               	movwf	??_scale+1
  3704  0DD0  160A  118A  200A  120A  158A  	fcall	stringdir
  3705  0DD5  00C4               	movwf	??_scale+2
  3706  0DD6  160A  118A  200A  120A  158A  	fcall	stringdir
  3707  0DDB  00C5               	movwf	??_scale+3
  3708  0DDC  160A  118A  200A  120A  158A  	fcall	stringdir
  3709  0DE1  00C6               	movwf	??_scale+4
  3710  0DE2  0846               	movf	??_scale+4,w
  3711  0DE3  00A7               	movwf	___flmul@b+3
  3712  0DE4  0845               	movf	??_scale+3,w
  3713  0DE5  00A6               	movwf	___flmul@b+2
  3714  0DE6  0844               	movf	??_scale+2,w
  3715  0DE7  00A5               	movwf	___flmul@b+1
  3716  0DE8  0843               	movf	??_scale+1,w
  3717  0DE9  00A4               	movwf	___flmul@b
  3718  0DEA  300A               	movlw	10
  3719  0DEB  00F7               	movwf	___awdiv@divisor
  3720  0DEC  3000               	movlw	0
  3721  0DED  00F8               	movwf	___awdiv@divisor+1
  3722  0DEE  0850               	movf	scale@scl,w
  3723  0DEF  00F9               	movwf	___awdiv@dividend
  3724  0DF0  01FA               	clrf	___awdiv@dividend+1
  3725  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3726  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3727  0DF3  160A  158A  2602  120A  158A  	fcall	___awdiv
  3728  0DF8  0877               	movf	?___awdiv,w
  3729  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3730  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3731  0DFB  00C7               	movwf	??_scale+5
  3732  0DFC  3001               	movlw	1
  3733  0DFD                     u4445:	
  3734  0DFD  1003               	clrc
  3735  0DFE  0DC7               	rlf	??_scale+5,f
  3736  0DFF  3EFF               	addlw	-1
  3737  0E00  1D03               	skipz
  3738  0E01  2DFD               	goto	u4445
  3739  0E02  1003               	clrc
  3740  0E03  0D47               	rlf	??_scale+5,w
  3741  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3742  0E05  0084               	movwf	4
  3743  0E06  160A  118A  200A  120A  158A  	fcall	stringdir
  3744  0E0B  00C8               	movwf	??_scale+6
  3745  0E0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3746  0E11  00C9               	movwf	??_scale+7
  3747  0E12  160A  118A  200A  120A  158A  	fcall	stringdir
  3748  0E17  00CA               	movwf	??_scale+8
  3749  0E18  160A  118A  200A  120A  158A  	fcall	stringdir
  3750  0E1D  00CB               	movwf	??_scale+9
  3751  0E1E  084B               	movf	??_scale+9,w
  3752  0E1F  00AB               	movwf	___flmul@a+3
  3753  0E20  084A               	movf	??_scale+8,w
  3754  0E21  00AA               	movwf	___flmul@a+2
  3755  0E22  0849               	movf	??_scale+7,w
  3756  0E23  00A9               	movwf	___flmul@a+1
  3757  0E24  0848               	movf	??_scale+6,w
  3758  0E25  00A8               	movwf	___flmul@a
  3759  0E26  120A  158A  21A2   	fcall	___flmul
  3760  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0E2B  0827               	movf	?___flmul+3,w
  3763  0E2C  00C1               	movwf	?_scale+3
  3764  0E2D  0826               	movf	?___flmul+2,w
  3765  0E2E  00C0               	movwf	?_scale+2
  3766  0E2F  0825               	movf	?___flmul+1,w
  3767  0E30  00BF               	movwf	?_scale+1
  3768  0E31  0824               	movf	?___flmul,w
  3769  0E32  00BE               	movwf	?_scale
  3770  0E33  0008               	return
  3771  0E34                     l3067:	
  3772                           
  3773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3774  0E34  0850               	movf	scale@scl,w
  3775  0E35  00C2               	movwf	??_scale
  3776  0E36  3001               	movlw	1
  3777  0E37                     u4455:	
  3778  0E37  1003               	clrc
  3779  0E38  0DC2               	rlf	??_scale,f
  3780  0E39  3EFF               	addlw	-1
  3781  0E3A  1D03               	skipz
  3782  0E3B  2E37               	goto	u4455
  3783  0E3C  1003               	clrc
  3784  0E3D  0D42               	rlf	??_scale,w
  3785  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3786  0E3F  0084               	movwf	4
  3787  0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  3788  0E45  00C3               	movwf	??_scale+1
  3789  0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  3790  0E4B  00C4               	movwf	??_scale+2
  3791  0E4C  160A  118A  200A  120A  158A  	fcall	stringdir
  3792  0E51  00C5               	movwf	??_scale+3
  3793  0E52  160A  118A  200A   	fcall	stringdir
  3794  0E55  00C6               	movwf	??_scale+4
  3795  0E56  0846               	movf	??_scale+4,w
  3796  0E57  00C1               	movwf	?_scale+3
  3797  0E58  0845               	movf	??_scale+3,w
  3798  0E59  00C0               	movwf	?_scale+2
  3799  0E5A  0844               	movf	??_scale+2,w
  3800  0E5B  00BF               	movwf	?_scale+1
  3801  0E5C  0843               	movf	??_scale+1,w
  3802  0E5D  00BE               	movwf	?_scale
  3803  0E5E  0008               	return
  3804  0E5F                     l3071:	
  3805                           
  3806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3807  0E5F  0850               	movf	scale@scl,w
  3808  0E60  3A80               	xorlw	128
  3809  0E61  3E12               	addlw	-238
  3810  0E62  1C03               	skipc
  3811  0E63  2F4A               	goto	l3079
  3812                           
  3813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3814  0E64  300A               	movlw	10
  3815  0E65  00F7               	movwf	___awdiv@divisor
  3816  0E66  3000               	movlw	0
  3817  0E67  00F8               	movwf	___awdiv@divisor+1
  3818  0E68  0850               	movf	scale@scl,w
  3819  0E69  00F2               	movwf	___awmod@dividend
  3820  0E6A  01F3               	clrf	___awmod@dividend+1
  3821  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3822  0E6C  03F3               	decf	___awmod@dividend+1,f
  3823  0E6D  3064               	movlw	100
  3824  0E6E  00F0               	movwf	___awmod@divisor
  3825  0E6F  3000               	movlw	0
  3826  0E70  00F1               	movwf	___awmod@divisor+1
  3827  0E71  160A  158A  24C8  120A  158A  	fcall	___awmod
  3828  0E76  0871               	movf	?___awmod+1,w
  3829  0E77  00FA               	movwf	___awdiv@dividend+1
  3830  0E78  0870               	movf	?___awmod,w
  3831  0E79  00F9               	movwf	___awdiv@dividend
  3832  0E7A  160A  158A  2602  120A  158A  	fcall	___awdiv
  3833  0E7F  0877               	movf	?___awdiv,w
  3834  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3835  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3836  0E82  00C2               	movwf	??_scale
  3837  0E83  3001               	movlw	1
  3838  0E84                     u4475:	
  3839  0E84  1003               	clrc
  3840  0E85  0DC2               	rlf	??_scale,f
  3841  0E86  3EFF               	addlw	-1
  3842  0E87  1D03               	skipz
  3843  0E88  2E84               	goto	u4475
  3844  0E89  1003               	clrc
  3845  0E8A  0D42               	rlf	??_scale,w
  3846  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3847  0E8C  0084               	movwf	4
  3848  0E8D  160A  118A  200A  120A  158A  	fcall	stringdir
  3849  0E92  00C3               	movwf	??_scale+1
  3850  0E93  160A  118A  200A  120A  158A  	fcall	stringdir
  3851  0E98  00C4               	movwf	??_scale+2
  3852  0E99  160A  118A  200A  120A  158A  	fcall	stringdir
  3853  0E9E  00C5               	movwf	??_scale+3
  3854  0E9F  160A  118A  200A  120A  158A  	fcall	stringdir
  3855  0EA4  00C6               	movwf	??_scale+4
  3856  0EA5  0846               	movf	??_scale+4,w
  3857  0EA6  00A7               	movwf	___flmul@b+3
  3858  0EA7  0845               	movf	??_scale+3,w
  3859  0EA8  00A6               	movwf	___flmul@b+2
  3860  0EA9  0844               	movf	??_scale+2,w
  3861  0EAA  00A5               	movwf	___flmul@b+1
  3862  0EAB  0843               	movf	??_scale+1,w
  3863  0EAC  00A4               	movwf	___flmul@b
  3864  0EAD  3064               	movlw	100
  3865  0EAE  00F7               	movwf	___awdiv@divisor
  3866  0EAF  3000               	movlw	0
  3867  0EB0  00F8               	movwf	___awdiv@divisor+1
  3868  0EB1  0850               	movf	scale@scl,w
  3869  0EB2  00F9               	movwf	___awdiv@dividend
  3870  0EB3  01FA               	clrf	___awdiv@dividend+1
  3871  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3872  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3873  0EB6  160A  158A  2602  120A  158A  	fcall	___awdiv
  3874  0EBB  0877               	movf	?___awdiv,w
  3875  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3877  0EBE  00C7               	movwf	??_scale+5
  3878  0EBF  3001               	movlw	1
  3879  0EC0                     u4485:	
  3880  0EC0  1003               	clrc
  3881  0EC1  0DC7               	rlf	??_scale+5,f
  3882  0EC2  3EFF               	addlw	-1
  3883  0EC3  1D03               	skipz
  3884  0EC4  2EC0               	goto	u4485
  3885  0EC5  1003               	clrc
  3886  0EC6  0D47               	rlf	??_scale+5,w
  3887  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3888  0EC8  0084               	movwf	4
  3889  0EC9  160A  118A  200A  120A  158A  	fcall	stringdir
  3890  0ECE  00C8               	movwf	??_scale+6
  3891  0ECF  160A  118A  200A  120A  158A  	fcall	stringdir
  3892  0ED4  00C9               	movwf	??_scale+7
  3893  0ED5  160A  118A  200A  120A  158A  	fcall	stringdir
  3894  0EDA  00CA               	movwf	??_scale+8
  3895  0EDB  160A  118A  200A  120A  158A  	fcall	stringdir
  3896  0EE0  00CB               	movwf	??_scale+9
  3897  0EE1  084B               	movf	??_scale+9,w
  3898  0EE2  00AB               	movwf	___flmul@a+3
  3899  0EE3  084A               	movf	??_scale+8,w
  3900  0EE4  00AA               	movwf	___flmul@a+2
  3901  0EE5  0849               	movf	??_scale+7,w
  3902  0EE6  00A9               	movwf	___flmul@a+1
  3903  0EE7  0848               	movf	??_scale+6,w
  3904  0EE8  00A8               	movwf	___flmul@a
  3905  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3906  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0EF0  0827               	movf	?___flmul+3,w
  3909  0EF1  00CF               	movwf	_scale$907+3
  3910  0EF2  0826               	movf	?___flmul+2,w
  3911  0EF3  00CE               	movwf	_scale$907+2
  3912  0EF4  0825               	movf	?___flmul+1,w
  3913  0EF5  00CD               	movwf	_scale$907+1
  3914  0EF6  0824               	movf	?___flmul,w
  3915  0EF7  00CC               	movwf	_scale$907
  3916                           
  3917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3918  0EF8  300A               	movlw	10
  3919  0EF9  00F0               	movwf	___awmod@divisor
  3920  0EFA  3000               	movlw	0
  3921  0EFB  00F1               	movwf	___awmod@divisor+1
  3922  0EFC  0850               	movf	scale@scl,w
  3923  0EFD  00F2               	movwf	___awmod@dividend
  3924  0EFE  01F3               	clrf	___awmod@dividend+1
  3925  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3926  0F00  03F3               	decf	___awmod@dividend+1,f
  3927  0F01  160A  158A  24C8  120A  158A  	fcall	___awmod
  3928  0F06  0870               	movf	?___awmod,w
  3929  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3930  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3931  0F09  00C2               	movwf	??_scale
  3932  0F0A  3001               	movlw	1
  3933  0F0B                     u4495:	
  3934  0F0B  1003               	clrc
  3935  0F0C  0DC2               	rlf	??_scale,f
  3936  0F0D  3EFF               	addlw	-1
  3937  0F0E  1D03               	skipz
  3938  0F0F  2F0B               	goto	u4495
  3939  0F10  1003               	clrc
  3940  0F11  0D42               	rlf	??_scale,w
  3941  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3942  0F13  0084               	movwf	4
  3943  0F14  160A  118A  200A  120A  158A  	fcall	stringdir
  3944  0F19  00C3               	movwf	??_scale+1
  3945  0F1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3946  0F1F  00C4               	movwf	??_scale+2
  3947  0F20  160A  118A  200A  120A  158A  	fcall	stringdir
  3948  0F25  00C5               	movwf	??_scale+3
  3949  0F26  160A  118A  200A  120A  158A  	fcall	stringdir
  3950  0F2B  00C6               	movwf	??_scale+4
  3951  0F2C  0846               	movf	??_scale+4,w
  3952  0F2D  00A7               	movwf	___flmul@b+3
  3953  0F2E  0845               	movf	??_scale+3,w
  3954  0F2F  00A6               	movwf	___flmul@b+2
  3955  0F30  0844               	movf	??_scale+2,w
  3956  0F31  00A5               	movwf	___flmul@b+1
  3957  0F32  0843               	movf	??_scale+1,w
  3958  0F33  00A4               	movwf	___flmul@b
  3959  0F34  084F               	movf	_scale$907+3,w
  3960  0F35  00AB               	movwf	___flmul@a+3
  3961  0F36  084E               	movf	_scale$907+2,w
  3962  0F37  00AA               	movwf	___flmul@a+2
  3963  0F38  084D               	movf	_scale$907+1,w
  3964  0F39  00A9               	movwf	___flmul@a+1
  3965  0F3A  084C               	movf	_scale$907,w
  3966  0F3B  00A8               	movwf	___flmul@a
  3967  0F3C  120A  158A  21A2   	fcall	___flmul
  3968  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3970  0F41  0827               	movf	?___flmul+3,w
  3971  0F42  00C1               	movwf	?_scale+3
  3972  0F43  0826               	movf	?___flmul+2,w
  3973  0F44  00C0               	movwf	?_scale+2
  3974  0F45  0825               	movf	?___flmul+1,w
  3975  0F46  00BF               	movwf	?_scale+1
  3976  0F47  0824               	movf	?___flmul,w
  3977  0F48  00BE               	movwf	?_scale
  3978  0F49  0008               	return
  3979  0F4A                     l3079:	
  3980  0F4A  0850               	movf	scale@scl,w
  3981  0F4B  3A80               	xorlw	128
  3982  0F4C  3E75               	addlw	-139
  3983  0F4D  1C03               	skipc
  3984  0F4E  2FD5               	goto	l3085
  3985                           
  3986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3987  0F4F  300A               	movlw	10
  3988  0F50  00F0               	movwf	___awmod@divisor
  3989  0F51  3000               	movlw	0
  3990  0F52  00F1               	movwf	___awmod@divisor+1
  3991  0F53  0850               	movf	scale@scl,w
  3992  0F54  00F2               	movwf	___awmod@dividend
  3993  0F55  01F3               	clrf	___awmod@dividend+1
  3994  0F56  1BF2               	btfsc	___awmod@dividend,7
  3995  0F57  03F3               	decf	___awmod@dividend+1,f
  3996  0F58  160A  158A  24C8  120A  158A  	fcall	___awmod
  3997  0F5D  0870               	movf	?___awmod,w
  3998  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3999  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  4000  0F60  00C2               	movwf	??_scale
  4001  0F61  3001               	movlw	1
  4002  0F62                     u4515:	
  4003  0F62  1003               	clrc
  4004  0F63  0DC2               	rlf	??_scale,f
  4005  0F64  3EFF               	addlw	-1
  4006  0F65  1D03               	skipz
  4007  0F66  2F62               	goto	u4515
  4008  0F67  1003               	clrc
  4009  0F68  0D42               	rlf	??_scale,w
  4010  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4011  0F6A  0084               	movwf	4
  4012  0F6B  160A  118A  200A  120A  158A  	fcall	stringdir
  4013  0F70  00C3               	movwf	??_scale+1
  4014  0F71  160A  118A  200A  120A  158A  	fcall	stringdir
  4015  0F76  00C4               	movwf	??_scale+2
  4016  0F77  160A  118A  200A  120A  158A  	fcall	stringdir
  4017  0F7C  00C5               	movwf	??_scale+3
  4018  0F7D  160A  118A  200A  120A  158A  	fcall	stringdir
  4019  0F82  00C6               	movwf	??_scale+4
  4020  0F83  0846               	movf	??_scale+4,w
  4021  0F84  00A7               	movwf	___flmul@b+3
  4022  0F85  0845               	movf	??_scale+3,w
  4023  0F86  00A6               	movwf	___flmul@b+2
  4024  0F87  0844               	movf	??_scale+2,w
  4025  0F88  00A5               	movwf	___flmul@b+1
  4026  0F89  0843               	movf	??_scale+1,w
  4027  0F8A  00A4               	movwf	___flmul@b
  4028  0F8B  300A               	movlw	10
  4029  0F8C  00F7               	movwf	___awdiv@divisor
  4030  0F8D  3000               	movlw	0
  4031  0F8E  00F8               	movwf	___awdiv@divisor+1
  4032  0F8F  0850               	movf	scale@scl,w
  4033  0F90  00F9               	movwf	___awdiv@dividend
  4034  0F91  01FA               	clrf	___awdiv@dividend+1
  4035  0F92  1BF9               	btfsc	___awdiv@dividend,7
  4036  0F93  03FA               	decf	___awdiv@dividend+1,f
  4037  0F94  160A  158A  2602  120A  158A  	fcall	___awdiv
  4038  0F99  0877               	movf	?___awdiv,w
  4039  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0F9C  00C7               	movwf	??_scale+5
  4042  0F9D  3001               	movlw	1
  4043  0F9E                     u4525:	
  4044  0F9E  1003               	clrc
  4045  0F9F  0DC7               	rlf	??_scale+5,f
  4046  0FA0  3EFF               	addlw	-1
  4047  0FA1  1D03               	skipz
  4048  0FA2  2F9E               	goto	u4525
  4049  0FA3  1003               	clrc
  4050  0FA4  0D47               	rlf	??_scale+5,w
  4051  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4052  0FA6  0084               	movwf	4
  4053  0FA7  160A  118A  200A  120A  158A  	fcall	stringdir
  4054  0FAC  00C8               	movwf	??_scale+6
  4055  0FAD  160A  118A  200A  120A  158A  	fcall	stringdir
  4056  0FB2  00C9               	movwf	??_scale+7
  4057  0FB3  160A  118A  200A  120A  158A  	fcall	stringdir
  4058  0FB8  00CA               	movwf	??_scale+8
  4059  0FB9  160A  118A  200A  120A  158A  	fcall	stringdir
  4060  0FBE  00CB               	movwf	??_scale+9
  4061  0FBF  084B               	movf	??_scale+9,w
  4062  0FC0  00AB               	movwf	___flmul@a+3
  4063  0FC1  084A               	movf	??_scale+8,w
  4064  0FC2  00AA               	movwf	___flmul@a+2
  4065  0FC3  0849               	movf	??_scale+7,w
  4066  0FC4  00A9               	movwf	___flmul@a+1
  4067  0FC5  0848               	movf	??_scale+6,w
  4068  0FC6  00A8               	movwf	___flmul@a
  4069  0FC7  120A  158A  21A2   	fcall	___flmul
  4070  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4071  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4072  0FCC  0827               	movf	?___flmul+3,w
  4073  0FCD  00C1               	movwf	?_scale+3
  4074  0FCE  0826               	movf	?___flmul+2,w
  4075  0FCF  00C0               	movwf	?_scale+2
  4076  0FD0  0825               	movf	?___flmul+1,w
  4077  0FD1  00BF               	movwf	?_scale+1
  4078  0FD2  0824               	movf	?___flmul,w
  4079  0FD3  00BE               	movwf	?_scale
  4080  0FD4  0008               	return
  4081  0FD5                     l3085:	
  4082                           
  4083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4084  0FD5  0850               	movf	scale@scl,w
  4085  0FD6  00C2               	movwf	??_scale
  4086  0FD7  3001               	movlw	1
  4087  0FD8                     u4535:	
  4088  0FD8  1003               	clrc
  4089  0FD9  0DC2               	rlf	??_scale,f
  4090  0FDA  3EFF               	addlw	-1
  4091  0FDB  1D03               	skipz
  4092  0FDC  2FD8               	goto	u4535
  4093  0FDD  1003               	clrc
  4094  0FDE  0D42               	rlf	??_scale,w
  4095  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4096  0FE0  0084               	movwf	4
  4097  0FE1  160A  118A  200A  120A  158A  	fcall	stringdir
  4098  0FE6  00C3               	movwf	??_scale+1
  4099  0FE7  160A  118A  200A  120A  158A  	fcall	stringdir
  4100  0FEC  00C4               	movwf	??_scale+2
  4101  0FED  160A  118A  200A  120A  158A  	fcall	stringdir
  4102  0FF2  00C5               	movwf	??_scale+3
  4103  0FF3  160A  118A  200A   	fcall	stringdir
  4104  0FF6  00C6               	movwf	??_scale+4
  4105  0FF7  0846               	movf	??_scale+4,w
  4106  0FF8  00C1               	movwf	?_scale+3
  4107  0FF9  0845               	movf	??_scale+3,w
  4108  0FFA  00C0               	movwf	?_scale+2
  4109  0FFB  0844               	movf	??_scale+2,w
  4110  0FFC  00BF               	movwf	?_scale+1
  4111  0FFD  0843               	movf	??_scale+1,w
  4112  0FFE  00BE               	movwf	?_scale
  4113  0FFF  0008               	return
  4114  1000                     __end_of_scale:	
  4115                           
  4116                           	psect	text3
  4117  1CC8                     __ptext3:	
  4118 ;; *************** function ___awmod *****************
  4119 ;; Defined at:
  4120 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  divisor         2    0[COMMON] int 
  4123 ;;  dividend        2    2[COMMON] int 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  sign            1    6[COMMON] unsigned char 
  4126 ;;  counter         1    5[COMMON] unsigned char 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  2    0[COMMON] int 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, status,0
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4136 ;;      Params:         4       0       0       0       0
  4137 ;;      Locals:         2       0       0       0       0
  4138 ;;      Temps:          1       0       0       0       0
  4139 ;;      Totals:         7       0       0       0       0
  4140 ;;Total ram usage:        7 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_scale
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           
  4150                           ;psect for function ___awmod
  4151  1CC8                     ___awmod:	
  4152                           
  4153                           ;incstack = 0
  4154                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4155  1CC8  01F6               	clrf	___awmod@sign
  4156  1CC9  1FF3               	btfss	___awmod@dividend+1,7
  4157  1CCA  2CD2               	goto	l2511
  4158  1CCB  09F2               	comf	___awmod@dividend,f
  4159  1CCC  09F3               	comf	___awmod@dividend+1,f
  4160  1CCD  0AF2               	incf	___awmod@dividend,f
  4161  1CCE  1903               	skipnz
  4162  1CCF  0AF3               	incf	___awmod@dividend+1,f
  4163  1CD0  01F6               	clrf	___awmod@sign
  4164  1CD1  0AF6               	incf	___awmod@sign,f
  4165  1CD2                     l2511:	
  4166  1CD2  1FF1               	btfss	___awmod@divisor+1,7
  4167  1CD3  2CD9               	goto	l2515
  4168  1CD4  09F0               	comf	___awmod@divisor,f
  4169  1CD5  09F1               	comf	___awmod@divisor+1,f
  4170  1CD6  0AF0               	incf	___awmod@divisor,f
  4171  1CD7  1903               	skipnz
  4172  1CD8  0AF1               	incf	___awmod@divisor+1,f
  4173  1CD9                     l2515:	
  4174  1CD9  0870               	movf	___awmod@divisor,w
  4175  1CDA  0471               	iorwf	___awmod@divisor+1,w
  4176  1CDB  1903               	btfsc	3,2
  4177  1CDC  2D06               	goto	l2533
  4178  1CDD  01F5               	clrf	___awmod@counter
  4179  1CDE  0AF5               	incf	___awmod@counter,f
  4180  1CDF                     l2523:	
  4181  1CDF  1BF1               	btfsc	___awmod@divisor+1,7
  4182  1CE0  2CED               	goto	l2525
  4183  1CE1  3001               	movlw	1
  4184  1CE2                     u3265:	
  4185  1CE2  1003               	clrc
  4186  1CE3  0DF0               	rlf	___awmod@divisor,f
  4187  1CE4  0DF1               	rlf	___awmod@divisor+1,f
  4188  1CE5  3EFF               	addlw	-1
  4189  1CE6  1D03               	skipz
  4190  1CE7  2CE2               	goto	u3265
  4191  1CE8  3001               	movlw	1
  4192  1CE9  00F4               	movwf	??___awmod
  4193  1CEA  0874               	movf	??___awmod,w
  4194  1CEB  07F5               	addwf	___awmod@counter,f
  4195  1CEC  2CDF               	goto	l2523
  4196  1CED                     l2525:	
  4197  1CED  0871               	movf	___awmod@divisor+1,w
  4198  1CEE  0273               	subwf	___awmod@dividend+1,w
  4199  1CEF  1D03               	skipz
  4200  1CF0  2CF3               	goto	u3285
  4201  1CF1  0870               	movf	___awmod@divisor,w
  4202  1CF2  0272               	subwf	___awmod@dividend,w
  4203  1CF3                     u3285:	
  4204  1CF3  1C03               	skipc
  4205  1CF4  2CFB               	goto	l2529
  4206  1CF5  0870               	movf	___awmod@divisor,w
  4207  1CF6  02F2               	subwf	___awmod@dividend,f
  4208  1CF7  0871               	movf	___awmod@divisor+1,w
  4209  1CF8  1C03               	skipc
  4210  1CF9  03F3               	decf	___awmod@dividend+1,f
  4211  1CFA  02F3               	subwf	___awmod@dividend+1,f
  4212  1CFB                     l2529:	
  4213  1CFB  3001               	movlw	1
  4214  1CFC                     u3295:	
  4215  1CFC  1003               	clrc
  4216  1CFD  0CF1               	rrf	___awmod@divisor+1,f
  4217  1CFE  0CF0               	rrf	___awmod@divisor,f
  4218  1CFF  3EFF               	addlw	-1
  4219  1D00  1D03               	skipz
  4220  1D01  2CFC               	goto	u3295
  4221  1D02  3001               	movlw	1
  4222  1D03  02F5               	subwf	___awmod@counter,f
  4223  1D04  1D03               	btfss	3,2
  4224  1D05  2CED               	goto	l2525
  4225  1D06                     l2533:	
  4226  1D06  0876               	movf	___awmod@sign,w
  4227  1D07  1903               	btfsc	3,2
  4228  1D08  2D0E               	goto	l2537
  4229  1D09  09F2               	comf	___awmod@dividend,f
  4230  1D0A  09F3               	comf	___awmod@dividend+1,f
  4231  1D0B  0AF2               	incf	___awmod@dividend,f
  4232  1D0C  1903               	skipnz
  4233  1D0D  0AF3               	incf	___awmod@dividend+1,f
  4234  1D0E                     l2537:	
  4235  1D0E  0873               	movf	___awmod@dividend+1,w
  4236  1D0F  00F1               	movwf	?___awmod+1
  4237  1D10  0872               	movf	___awmod@dividend,w
  4238  1D11  00F0               	movwf	?___awmod
  4239  1D12  0008               	return
  4240  1D13                     __end_of___awmod:	
  4241                           
  4242                           	psect	text4
  4243  1E02                     __ptext4:	
  4244 ;; *************** function ___awdiv *****************
  4245 ;; Defined at:
  4246 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  divisor         2    7[COMMON] int 
  4249 ;;  dividend        2    9[COMMON] int 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  quotient        2    2[BANK0 ] int 
  4252 ;;  sign            1    1[BANK0 ] unsigned char 
  4253 ;;  counter         1    0[BANK0 ] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2    7[COMMON] int 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4263 ;;      Params:         4       0       0       0       0
  4264 ;;      Locals:         0       4       0       0       0
  4265 ;;      Temps:          1       0       0       0       0
  4266 ;;      Totals:         5       4       0       0       0
  4267 ;;Total ram usage:        9 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_scale
  4273 ;;		_sprintf
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function ___awdiv
  4279  1E02                     ___awdiv:	
  4280                           
  4281                           ;incstack = 0
  4282                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4283  1E02  1283               	bcf	3,5	;RP0=0, select bank0
  4284  1E03  1303               	bcf	3,6	;RP1=0, select bank0
  4285  1E04  01A1               	clrf	___awdiv@sign
  4286  1E05  1FF8               	btfss	___awdiv@divisor+1,7
  4287  1E06  2E0E               	goto	l2467
  4288  1E07  09F7               	comf	___awdiv@divisor,f
  4289  1E08  09F8               	comf	___awdiv@divisor+1,f
  4290  1E09  0AF7               	incf	___awdiv@divisor,f
  4291  1E0A  1903               	skipnz
  4292  1E0B  0AF8               	incf	___awdiv@divisor+1,f
  4293  1E0C  01A1               	clrf	___awdiv@sign
  4294  1E0D  0AA1               	incf	___awdiv@sign,f
  4295  1E0E                     l2467:	
  4296  1E0E  1FFA               	btfss	___awdiv@dividend+1,7
  4297  1E0F  2E19               	goto	l2473
  4298  1E10  09F9               	comf	___awdiv@dividend,f
  4299  1E11  09FA               	comf	___awdiv@dividend+1,f
  4300  1E12  0AF9               	incf	___awdiv@dividend,f
  4301  1E13  1903               	skipnz
  4302  1E14  0AFA               	incf	___awdiv@dividend+1,f
  4303  1E15  3001               	movlw	1
  4304  1E16  00FB               	movwf	??___awdiv
  4305  1E17  087B               	movf	??___awdiv,w
  4306  1E18  06A1               	xorwf	___awdiv@sign,f
  4307  1E19                     l2473:	
  4308  1E19  01A2               	clrf	___awdiv@quotient
  4309  1E1A  01A3               	clrf	___awdiv@quotient+1
  4310  1E1B  0877               	movf	___awdiv@divisor,w
  4311  1E1C  0478               	iorwf	___awdiv@divisor+1,w
  4312  1E1D  1903               	btfsc	3,2
  4313  1E1E  2E50               	goto	l2495
  4314  1E1F  01A0               	clrf	___awdiv@counter
  4315  1E20  0AA0               	incf	___awdiv@counter,f
  4316  1E21                     l2483:	
  4317  1E21  1BF8               	btfsc	___awdiv@divisor+1,7
  4318  1E22  2E2F               	goto	l2485
  4319  1E23  3001               	movlw	1
  4320  1E24                     u3165:	
  4321  1E24  1003               	clrc
  4322  1E25  0DF7               	rlf	___awdiv@divisor,f
  4323  1E26  0DF8               	rlf	___awdiv@divisor+1,f
  4324  1E27  3EFF               	addlw	-1
  4325  1E28  1D03               	skipz
  4326  1E29  2E24               	goto	u3165
  4327  1E2A  3001               	movlw	1
  4328  1E2B  00FB               	movwf	??___awdiv
  4329  1E2C  087B               	movf	??___awdiv,w
  4330  1E2D  07A0               	addwf	___awdiv@counter,f
  4331  1E2E  2E21               	goto	l2483
  4332  1E2F                     l2485:	
  4333  1E2F  3001               	movlw	1
  4334  1E30                     u3185:	
  4335  1E30  1003               	clrc
  4336  1E31  0DA2               	rlf	___awdiv@quotient,f
  4337  1E32  0DA3               	rlf	___awdiv@quotient+1,f
  4338  1E33  3EFF               	addlw	-1
  4339  1E34  1D03               	skipz
  4340  1E35  2E30               	goto	u3185
  4341  1E36  0878               	movf	___awdiv@divisor+1,w
  4342  1E37  027A               	subwf	___awdiv@dividend+1,w
  4343  1E38  1D03               	skipz
  4344  1E39  2E3C               	goto	u3195
  4345  1E3A  0877               	movf	___awdiv@divisor,w
  4346  1E3B  0279               	subwf	___awdiv@dividend,w
  4347  1E3C                     u3195:	
  4348  1E3C  1C03               	skipc
  4349  1E3D  2E45               	goto	l2491
  4350  1E3E  0877               	movf	___awdiv@divisor,w
  4351  1E3F  02F9               	subwf	___awdiv@dividend,f
  4352  1E40  0878               	movf	___awdiv@divisor+1,w
  4353  1E41  1C03               	skipc
  4354  1E42  03FA               	decf	___awdiv@dividend+1,f
  4355  1E43  02FA               	subwf	___awdiv@dividend+1,f
  4356  1E44  1422               	bsf	___awdiv@quotient,0
  4357  1E45                     l2491:	
  4358  1E45  3001               	movlw	1
  4359  1E46                     u3205:	
  4360  1E46  1003               	clrc
  4361  1E47  0CF8               	rrf	___awdiv@divisor+1,f
  4362  1E48  0CF7               	rrf	___awdiv@divisor,f
  4363  1E49  3EFF               	addlw	-1
  4364  1E4A  1D03               	skipz
  4365  1E4B  2E46               	goto	u3205
  4366  1E4C  3001               	movlw	1
  4367  1E4D  02A0               	subwf	___awdiv@counter,f
  4368  1E4E  1D03               	btfss	3,2
  4369  1E4F  2E2F               	goto	l2485
  4370  1E50                     l2495:	
  4371  1E50  0821               	movf	___awdiv@sign,w
  4372  1E51  1903               	btfsc	3,2
  4373  1E52  2E58               	goto	l2499
  4374  1E53  09A2               	comf	___awdiv@quotient,f
  4375  1E54  09A3               	comf	___awdiv@quotient+1,f
  4376  1E55  0AA2               	incf	___awdiv@quotient,f
  4377  1E56  1903               	skipnz
  4378  1E57  0AA3               	incf	___awdiv@quotient+1,f
  4379  1E58                     l2499:	
  4380  1E58  0823               	movf	___awdiv@quotient+1,w
  4381  1E59  00F8               	movwf	?___awdiv+1
  4382  1E5A  0822               	movf	___awdiv@quotient,w
  4383  1E5B  00F7               	movwf	?___awdiv
  4384  1E5C  0008               	return
  4385  1E5D                     __end_of___awdiv:	
  4386                           
  4387                           	psect	text5
  4388  0003                     __ptext5:	
  4389 ;; *************** function _isdigit *****************
  4390 ;; Defined at:
  4391 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  c               1    wreg     unsigned char 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  c               1    1[COMMON] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;		None               void
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4405 ;;      Params:         0       0       0       0       0
  4406 ;;      Locals:         2       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0
  4408 ;;      Totals:         2       0       0       0       0
  4409 ;;Total ram usage:        2 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_sprintf
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           
  4419                           ;psect for function _isdigit
  4420  0003                     _isdigit:	
  4421                           
  4422                           ;incstack = 0
  4423                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4424                           ;isdigit@c stored from wreg
  4425  0003  00F1               	movwf	isdigit@c
  4426  0004  01F0               	clrf	_isdigit$692
  4427  0005  303A               	movlw	58
  4428  0006  0271               	subwf	isdigit@c,w
  4429  0007  1803               	skipnc
  4430  0008  280F               	goto	l3097
  4431  0009  3030               	movlw	48
  4432  000A  0271               	subwf	isdigit@c,w
  4433  000B  1C03               	skipc
  4434  000C  280F               	goto	l3097
  4435  000D  01F0               	clrf	_isdigit$692
  4436  000E  0AF0               	incf	_isdigit$692,f
  4437  000F                     l3097:	
  4438  000F  0C70               	rrf	_isdigit$692,w
  4439  0010  0008               	return
  4440  0011                     __end_of_isdigit:	
  4441                           
  4442                           	psect	text6
  4443  13D0                     __ptext6:	
  4444 ;; *************** function _fround *****************
  4445 ;; Defined at:
  4446 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  prec            1    wreg     unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  prec            1   49[BANK0 ] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  4   30[BANK0 ] unsigned char 
  4453 ;; Registers used:
  4454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4460 ;;      Params:         0       4       0       0       0
  4461 ;;      Locals:         0       9       0       0       0
  4462 ;;      Temps:          0       7       0       0       0
  4463 ;;      Totals:         0      20       0       0       0
  4464 ;;Total ram usage:       20 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    2
  4467 ;; This function calls:
  4468 ;;		___flmul
  4469 ;;		___lwdiv
  4470 ;;		___lwmod
  4471 ;; This function is called by:
  4472 ;;		_sprintf
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _fround
  4478  13D0                     _fround:	
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4482                           ;fround@prec stored from wreg
  4483  13D0  1283               	bcf	3,5	;RP0=0, select bank0
  4484  13D1  1303               	bcf	3,6	;RP1=0, select bank0
  4485  13D2  00D1               	movwf	fround@prec
  4486                           
  4487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4488  13D3  306E               	movlw	110
  4489  13D4  0251               	subwf	fround@prec,w
  4490  13D5  1C03               	skipc
  4491  13D6  2CE2               	goto	l3039
  4492                           
  4493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4494  13D7  303F               	movlw	63
  4495  13D8  00A7               	movwf	___flmul@b+3
  4496  13D9  3000               	movlw	0
  4497  13DA  00A6               	movwf	___flmul@b+2
  4498  13DB  3000               	movlw	0
  4499  13DC  00A5               	movwf	___flmul@b+1
  4500  13DD  3000               	movlw	0
  4501  13DE  00A4               	movwf	___flmul@b
  4502  13DF  3064               	movlw	100
  4503  13E0  00F6               	movwf	___lwdiv@divisor
  4504  13E1  3000               	movlw	0
  4505  13E2  00F7               	movwf	___lwdiv@divisor+1
  4506  13E3  0851               	movf	fround@prec,w
  4507  13E4  00C2               	movwf	??_fround
  4508  13E5  01C3               	clrf	??_fround+1
  4509  13E6  0842               	movf	??_fround,w
  4510  13E7  00F8               	movwf	___lwdiv@dividend
  4511  13E8  0843               	movf	??_fround+1,w
  4512  13E9  00F9               	movwf	___lwdiv@dividend+1
  4513  13EA  160A  158A  2444  160A  118A  	fcall	___lwdiv
  4514  13EF  0876               	movf	?___lwdiv,w
  4515  13F0  1283               	bcf	3,5	;RP0=0, select bank0
  4516  13F1  1303               	bcf	3,6	;RP1=0, select bank0
  4517  13F2  00C4               	movwf	??_fround+2
  4518  13F3  3001               	movlw	1
  4519  13F4                     u4305:	
  4520  13F4  1003               	clrc
  4521  13F5  0DC4               	rlf	??_fround+2,f
  4522  13F6  3EFF               	addlw	-1
  4523  13F7  1D03               	skipz
  4524  13F8  2BF4               	goto	u4305
  4525  13F9  1003               	clrc
  4526  13FA  0D44               	rlf	??_fround+2,w
  4527  13FB  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4528  13FC  0084               	movwf	4
  4529  13FD  160A  118A  200A  160A  118A  	fcall	stringdir
  4530  1402  00C5               	movwf	??_fround+3
  4531  1403  160A  118A  200A  160A  118A  	fcall	stringdir
  4532  1408  00C6               	movwf	??_fround+4
  4533  1409  160A  118A  200A  160A  118A  	fcall	stringdir
  4534  140E  00C7               	movwf	??_fround+5
  4535  140F  160A  118A  200A  160A  118A  	fcall	stringdir
  4536  1414  00C8               	movwf	??_fround+6
  4537  1415  0848               	movf	??_fround+6,w
  4538  1416  00AB               	movwf	___flmul@a+3
  4539  1417  0847               	movf	??_fround+5,w
  4540  1418  00AA               	movwf	___flmul@a+2
  4541  1419  0846               	movf	??_fround+4,w
  4542  141A  00A9               	movwf	___flmul@a+1
  4543  141B  0845               	movf	??_fround+3,w
  4544  141C  00A8               	movwf	___flmul@a
  4545  141D  120A  158A  21A2  160A  118A  	fcall	___flmul
  4546  1422  1283               	bcf	3,5	;RP0=0, select bank0
  4547  1423  1303               	bcf	3,6	;RP1=0, select bank0
  4548  1424  0827               	movf	?___flmul+3,w
  4549  1425  00D0               	movwf	_fround$905+3
  4550  1426  0826               	movf	?___flmul+2,w
  4551  1427  00CF               	movwf	_fround$905+2
  4552  1428  0825               	movf	?___flmul+1,w
  4553  1429  00CE               	movwf	_fround$905+1
  4554  142A  0824               	movf	?___flmul,w
  4555  142B  00CD               	movwf	_fround$905
  4556                           
  4557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4558  142C  300A               	movlw	10
  4559  142D  00F6               	movwf	___lwdiv@divisor
  4560  142E  3000               	movlw	0
  4561  142F  00F7               	movwf	___lwdiv@divisor+1
  4562  1430  0851               	movf	fround@prec,w
  4563  1431  00C2               	movwf	??_fround
  4564  1432  01C3               	clrf	??_fround+1
  4565  1433  0842               	movf	??_fround,w
  4566  1434  00F2               	movwf	___lwmod@dividend
  4567  1435  0843               	movf	??_fround+1,w
  4568  1436  00F3               	movwf	___lwmod@dividend+1
  4569  1437  3064               	movlw	100
  4570  1438  00F0               	movwf	___lwmod@divisor
  4571  1439  3000               	movlw	0
  4572  143A  00F1               	movwf	___lwmod@divisor+1
  4573  143B  160A  158A  23DC  160A  118A  	fcall	___lwmod
  4574  1440  0871               	movf	?___lwmod+1,w
  4575  1441  00F9               	movwf	___lwdiv@dividend+1
  4576  1442  0870               	movf	?___lwmod,w
  4577  1443  00F8               	movwf	___lwdiv@dividend
  4578  1444  160A  158A  2444  160A  118A  	fcall	___lwdiv
  4579  1449  0876               	movf	?___lwdiv,w
  4580  144A  1283               	bcf	3,5	;RP0=0, select bank0
  4581  144B  1303               	bcf	3,6	;RP1=0, select bank0
  4582  144C  00C4               	movwf	??_fround+2
  4583  144D  3001               	movlw	1
  4584  144E                     u4315:	
  4585  144E  1003               	clrc
  4586  144F  0DC4               	rlf	??_fround+2,f
  4587  1450  3EFF               	addlw	-1
  4588  1451  1D03               	skipz
  4589  1452  2C4E               	goto	u4315
  4590  1453  1003               	clrc
  4591  1454  0D44               	rlf	??_fround+2,w
  4592  1455  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4593  1456  0084               	movwf	4
  4594  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  4595  145C  00C5               	movwf	??_fround+3
  4596  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  4597  1462  00C6               	movwf	??_fround+4
  4598  1463  160A  118A  200A  160A  118A  	fcall	stringdir
  4599  1468  00C7               	movwf	??_fround+5
  4600  1469  160A  118A  200A  160A  118A  	fcall	stringdir
  4601  146E  00C8               	movwf	??_fround+6
  4602  146F  0848               	movf	??_fround+6,w
  4603  1470  00A7               	movwf	___flmul@b+3
  4604  1471  0847               	movf	??_fround+5,w
  4605  1472  00A6               	movwf	___flmul@b+2
  4606  1473  0846               	movf	??_fround+4,w
  4607  1474  00A5               	movwf	___flmul@b+1
  4608  1475  0845               	movf	??_fround+3,w
  4609  1476  00A4               	movwf	___flmul@b
  4610  1477  0850               	movf	_fround$905+3,w
  4611  1478  00AB               	movwf	___flmul@a+3
  4612  1479  084F               	movf	_fround$905+2,w
  4613  147A  00AA               	movwf	___flmul@a+2
  4614  147B  084E               	movf	_fround$905+1,w
  4615  147C  00A9               	movwf	___flmul@a+1
  4616  147D  084D               	movf	_fround$905,w
  4617  147E  00A8               	movwf	___flmul@a
  4618  147F  120A  158A  21A2  160A  118A  	fcall	___flmul
  4619  1484  1283               	bcf	3,5	;RP0=0, select bank0
  4620  1485  1303               	bcf	3,6	;RP1=0, select bank0
  4621  1486  0827               	movf	?___flmul+3,w
  4622  1487  00CC               	movwf	_fround$906+3
  4623  1488  0826               	movf	?___flmul+2,w
  4624  1489  00CB               	movwf	_fround$906+2
  4625  148A  0825               	movf	?___flmul+1,w
  4626  148B  00CA               	movwf	_fround$906+1
  4627  148C  0824               	movf	?___flmul,w
  4628  148D  00C9               	movwf	_fround$906
  4629                           
  4630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4631  148E  300A               	movlw	10
  4632  148F  00F0               	movwf	___lwmod@divisor
  4633  1490  3000               	movlw	0
  4634  1491  00F1               	movwf	___lwmod@divisor+1
  4635  1492  0851               	movf	fround@prec,w
  4636  1493  00C2               	movwf	??_fround
  4637  1494  01C3               	clrf	??_fround+1
  4638  1495  0842               	movf	??_fround,w
  4639  1496  00F2               	movwf	___lwmod@dividend
  4640  1497  0843               	movf	??_fround+1,w
  4641  1498  00F3               	movwf	___lwmod@dividend+1
  4642  1499  160A  158A  23DC  160A  118A  	fcall	___lwmod
  4643  149E  0870               	movf	?___lwmod,w
  4644  149F  1283               	bcf	3,5	;RP0=0, select bank0
  4645  14A0  1303               	bcf	3,6	;RP1=0, select bank0
  4646  14A1  00C4               	movwf	??_fround+2
  4647  14A2  3001               	movlw	1
  4648  14A3                     u4325:	
  4649  14A3  1003               	clrc
  4650  14A4  0DC4               	rlf	??_fround+2,f
  4651  14A5  3EFF               	addlw	-1
  4652  14A6  1D03               	skipz
  4653  14A7  2CA3               	goto	u4325
  4654  14A8  1003               	clrc
  4655  14A9  0D44               	rlf	??_fround+2,w
  4656  14AA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4657  14AB  0084               	movwf	4
  4658  14AC  160A  118A  200A  160A  118A  	fcall	stringdir
  4659  14B1  00C5               	movwf	??_fround+3
  4660  14B2  160A  118A  200A  160A  118A  	fcall	stringdir
  4661  14B7  00C6               	movwf	??_fround+4
  4662  14B8  160A  118A  200A  160A  118A  	fcall	stringdir
  4663  14BD  00C7               	movwf	??_fround+5
  4664  14BE  160A  118A  200A  160A  118A  	fcall	stringdir
  4665  14C3  00C8               	movwf	??_fround+6
  4666  14C4  0848               	movf	??_fround+6,w
  4667  14C5  00A7               	movwf	___flmul@b+3
  4668  14C6  0847               	movf	??_fround+5,w
  4669  14C7  00A6               	movwf	___flmul@b+2
  4670  14C8  0846               	movf	??_fround+4,w
  4671  14C9  00A5               	movwf	___flmul@b+1
  4672  14CA  0845               	movf	??_fround+3,w
  4673  14CB  00A4               	movwf	___flmul@b
  4674  14CC  084C               	movf	_fround$906+3,w
  4675  14CD  00AB               	movwf	___flmul@a+3
  4676  14CE  084B               	movf	_fround$906+2,w
  4677  14CF  00AA               	movwf	___flmul@a+2
  4678  14D0  084A               	movf	_fround$906+1,w
  4679  14D1  00A9               	movwf	___flmul@a+1
  4680  14D2  0849               	movf	_fround$906,w
  4681  14D3  00A8               	movwf	___flmul@a
  4682  14D4  120A  158A  21A2   	fcall	___flmul
  4683  14D7  1283               	bcf	3,5	;RP0=0, select bank0
  4684  14D8  1303               	bcf	3,6	;RP1=0, select bank0
  4685  14D9  0827               	movf	?___flmul+3,w
  4686  14DA  00C1               	movwf	?_fround+3
  4687  14DB  0826               	movf	?___flmul+2,w
  4688  14DC  00C0               	movwf	?_fround+2
  4689  14DD  0825               	movf	?___flmul+1,w
  4690  14DE  00BF               	movwf	?_fround+1
  4691  14DF  0824               	movf	?___flmul,w
  4692  14E0  00BE               	movwf	?_fround
  4693  14E1  0008               	return
  4694  14E2                     l3039:	
  4695  14E2  300B               	movlw	11
  4696  14E3  0251               	subwf	fround@prec,w
  4697  14E4  1C03               	skipc
  4698  14E5  2D8F               	goto	l3045
  4699                           
  4700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4701  14E6  303F               	movlw	63
  4702  14E7  00A7               	movwf	___flmul@b+3
  4703  14E8  3000               	movlw	0
  4704  14E9  00A6               	movwf	___flmul@b+2
  4705  14EA  3000               	movlw	0
  4706  14EB  00A5               	movwf	___flmul@b+1
  4707  14EC  3000               	movlw	0
  4708  14ED  00A4               	movwf	___flmul@b
  4709  14EE  300A               	movlw	10
  4710  14EF  00F6               	movwf	___lwdiv@divisor
  4711  14F0  3000               	movlw	0
  4712  14F1  00F7               	movwf	___lwdiv@divisor+1
  4713  14F2  0851               	movf	fround@prec,w
  4714  14F3  00C2               	movwf	??_fround
  4715  14F4  01C3               	clrf	??_fround+1
  4716  14F5  0842               	movf	??_fround,w
  4717  14F6  00F8               	movwf	___lwdiv@dividend
  4718  14F7  0843               	movf	??_fround+1,w
  4719  14F8  00F9               	movwf	___lwdiv@dividend+1
  4720  14F9  160A  158A  2444  160A  118A  	fcall	___lwdiv
  4721  14FE  0876               	movf	?___lwdiv,w
  4722  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  4723  1500  1303               	bcf	3,6	;RP1=0, select bank0
  4724  1501  00C4               	movwf	??_fround+2
  4725  1502  3001               	movlw	1
  4726  1503                     u4345:	
  4727  1503  1003               	clrc
  4728  1504  0DC4               	rlf	??_fround+2,f
  4729  1505  3EFF               	addlw	-1
  4730  1506  1D03               	skipz
  4731  1507  2D03               	goto	u4345
  4732  1508  1003               	clrc
  4733  1509  0D44               	rlf	??_fround+2,w
  4734  150A  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4735  150B  0084               	movwf	4
  4736  150C  160A  118A  200A  160A  118A  	fcall	stringdir
  4737  1511  00C5               	movwf	??_fround+3
  4738  1512  160A  118A  200A  160A  118A  	fcall	stringdir
  4739  1517  00C6               	movwf	??_fround+4
  4740  1518  160A  118A  200A  160A  118A  	fcall	stringdir
  4741  151D  00C7               	movwf	??_fround+5
  4742  151E  160A  118A  200A  160A  118A  	fcall	stringdir
  4743  1523  00C8               	movwf	??_fround+6
  4744  1524  0848               	movf	??_fround+6,w
  4745  1525  00AB               	movwf	___flmul@a+3
  4746  1526  0847               	movf	??_fround+5,w
  4747  1527  00AA               	movwf	___flmul@a+2
  4748  1528  0846               	movf	??_fround+4,w
  4749  1529  00A9               	movwf	___flmul@a+1
  4750  152A  0845               	movf	??_fround+3,w
  4751  152B  00A8               	movwf	___flmul@a
  4752  152C  120A  158A  21A2  160A  118A  	fcall	___flmul
  4753  1531  1283               	bcf	3,5	;RP0=0, select bank0
  4754  1532  1303               	bcf	3,6	;RP1=0, select bank0
  4755  1533  0827               	movf	?___flmul+3,w
  4756  1534  00D0               	movwf	_fround$905+3
  4757  1535  0826               	movf	?___flmul+2,w
  4758  1536  00CF               	movwf	_fround$905+2
  4759  1537  0825               	movf	?___flmul+1,w
  4760  1538  00CE               	movwf	_fround$905+1
  4761  1539  0824               	movf	?___flmul,w
  4762  153A  00CD               	movwf	_fround$905
  4763                           
  4764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4765  153B  300A               	movlw	10
  4766  153C  00F0               	movwf	___lwmod@divisor
  4767  153D  3000               	movlw	0
  4768  153E  00F1               	movwf	___lwmod@divisor+1
  4769  153F  0851               	movf	fround@prec,w
  4770  1540  00C2               	movwf	??_fround
  4771  1541  01C3               	clrf	??_fround+1
  4772  1542  0842               	movf	??_fround,w
  4773  1543  00F2               	movwf	___lwmod@dividend
  4774  1544  0843               	movf	??_fround+1,w
  4775  1545  00F3               	movwf	___lwmod@dividend+1
  4776  1546  160A  158A  23DC  160A  118A  	fcall	___lwmod
  4777  154B  0870               	movf	?___lwmod,w
  4778  154C  1283               	bcf	3,5	;RP0=0, select bank0
  4779  154D  1303               	bcf	3,6	;RP1=0, select bank0
  4780  154E  00C4               	movwf	??_fround+2
  4781  154F  3001               	movlw	1
  4782  1550                     u4355:	
  4783  1550  1003               	clrc
  4784  1551  0DC4               	rlf	??_fround+2,f
  4785  1552  3EFF               	addlw	-1
  4786  1553  1D03               	skipz
  4787  1554  2D50               	goto	u4355
  4788  1555  1003               	clrc
  4789  1556  0D44               	rlf	??_fround+2,w
  4790  1557  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4791  1558  0084               	movwf	4
  4792  1559  160A  118A  200A  160A  118A  	fcall	stringdir
  4793  155E  00C5               	movwf	??_fround+3
  4794  155F  160A  118A  200A  160A  118A  	fcall	stringdir
  4795  1564  00C6               	movwf	??_fround+4
  4796  1565  160A  118A  200A  160A  118A  	fcall	stringdir
  4797  156A  00C7               	movwf	??_fround+5
  4798  156B  160A  118A  200A  160A  118A  	fcall	stringdir
  4799  1570  00C8               	movwf	??_fround+6
  4800  1571  0848               	movf	??_fround+6,w
  4801  1572  00A7               	movwf	___flmul@b+3
  4802  1573  0847               	movf	??_fround+5,w
  4803  1574  00A6               	movwf	___flmul@b+2
  4804  1575  0846               	movf	??_fround+4,w
  4805  1576  00A5               	movwf	___flmul@b+1
  4806  1577  0845               	movf	??_fround+3,w
  4807  1578  00A4               	movwf	___flmul@b
  4808  1579  0850               	movf	_fround$905+3,w
  4809  157A  00AB               	movwf	___flmul@a+3
  4810  157B  084F               	movf	_fround$905+2,w
  4811  157C  00AA               	movwf	___flmul@a+2
  4812  157D  084E               	movf	_fround$905+1,w
  4813  157E  00A9               	movwf	___flmul@a+1
  4814  157F  084D               	movf	_fround$905,w
  4815  1580  00A8               	movwf	___flmul@a
  4816  1581  120A  158A  21A2   	fcall	___flmul
  4817  1584  1283               	bcf	3,5	;RP0=0, select bank0
  4818  1585  1303               	bcf	3,6	;RP1=0, select bank0
  4819  1586  0827               	movf	?___flmul+3,w
  4820  1587  00C1               	movwf	?_fround+3
  4821  1588  0826               	movf	?___flmul+2,w
  4822  1589  00C0               	movwf	?_fround+2
  4823  158A  0825               	movf	?___flmul+1,w
  4824  158B  00BF               	movwf	?_fround+1
  4825  158C  0824               	movf	?___flmul,w
  4826  158D  00BE               	movwf	?_fround
  4827  158E  0008               	return
  4828  158F                     l3045:	
  4829                           
  4830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4831  158F  303F               	movlw	63
  4832  1590  00A7               	movwf	___flmul@b+3
  4833  1591  3000               	movlw	0
  4834  1592  00A6               	movwf	___flmul@b+2
  4835  1593  3000               	movlw	0
  4836  1594  00A5               	movwf	___flmul@b+1
  4837  1595  3000               	movlw	0
  4838  1596  00A4               	movwf	___flmul@b
  4839  1597  0851               	movf	fround@prec,w
  4840  1598  00C2               	movwf	??_fround
  4841  1599  3001               	movlw	1
  4842  159A                     u4365:	
  4843  159A  1003               	clrc
  4844  159B  0DC2               	rlf	??_fround,f
  4845  159C  3EFF               	addlw	-1
  4846  159D  1D03               	skipz
  4847  159E  2D9A               	goto	u4365
  4848  159F  1003               	clrc
  4849  15A0  0D42               	rlf	??_fround,w
  4850  15A1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4851  15A2  0084               	movwf	4
  4852  15A3  160A  118A  200A  160A  118A  	fcall	stringdir
  4853  15A8  00C3               	movwf	??_fround+1
  4854  15A9  160A  118A  200A  160A  118A  	fcall	stringdir
  4855  15AE  00C4               	movwf	??_fround+2
  4856  15AF  160A  118A  200A  160A  118A  	fcall	stringdir
  4857  15B4  00C5               	movwf	??_fround+3
  4858  15B5  160A  118A  200A  160A  118A  	fcall	stringdir
  4859  15BA  00C6               	movwf	??_fround+4
  4860  15BB  0846               	movf	??_fround+4,w
  4861  15BC  00AB               	movwf	___flmul@a+3
  4862  15BD  0845               	movf	??_fround+3,w
  4863  15BE  00AA               	movwf	___flmul@a+2
  4864  15BF  0844               	movf	??_fround+2,w
  4865  15C0  00A9               	movwf	___flmul@a+1
  4866  15C1  0843               	movf	??_fround+1,w
  4867  15C2  00A8               	movwf	___flmul@a
  4868  15C3  120A  158A  21A2   	fcall	___flmul
  4869  15C6  1283               	bcf	3,5	;RP0=0, select bank0
  4870  15C7  1303               	bcf	3,6	;RP1=0, select bank0
  4871  15C8  0827               	movf	?___flmul+3,w
  4872  15C9  00C1               	movwf	?_fround+3
  4873  15CA  0826               	movf	?___flmul+2,w
  4874  15CB  00C0               	movwf	?_fround+2
  4875  15CC  0825               	movf	?___flmul+1,w
  4876  15CD  00BF               	movwf	?_fround+1
  4877  15CE  0824               	movf	?___flmul,w
  4878  15CF  00BE               	movwf	?_fround
  4879  15D0  0008               	return
  4880  15D1                     __end_of_fround:	
  4881                           
  4882                           	psect	text7
  4883  1BDC                     __ptext7:	
  4884 ;; *************** function ___lwmod *****************
  4885 ;; Defined at:
  4886 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  divisor         2    0[COMMON] unsigned int 
  4889 ;;  dividend        2    2[COMMON] unsigned int 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  counter         1    5[COMMON] unsigned char 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  2    0[COMMON] unsigned int 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4901 ;;      Params:         4       0       0       0       0
  4902 ;;      Locals:         1       0       0       0       0
  4903 ;;      Temps:          1       0       0       0       0
  4904 ;;      Totals:         6       0       0       0       0
  4905 ;;Total ram usage:        6 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_fround
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           
  4915                           ;psect for function ___lwmod
  4916  1BDC                     ___lwmod:	
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4920  1BDC  0870               	movf	___lwmod@divisor,w
  4921  1BDD  0471               	iorwf	___lwmod@divisor+1,w
  4922  1BDE  1903               	btfsc	3,2
  4923  1BDF  2C09               	goto	l2585
  4924  1BE0  01F5               	clrf	___lwmod@counter
  4925  1BE1  0AF5               	incf	___lwmod@counter,f
  4926  1BE2                     l2575:	
  4927  1BE2  1BF1               	btfsc	___lwmod@divisor+1,7
  4928  1BE3  2BF0               	goto	l2577
  4929  1BE4  3001               	movlw	1
  4930  1BE5                     u3405:	
  4931  1BE5  1003               	clrc
  4932  1BE6  0DF0               	rlf	___lwmod@divisor,f
  4933  1BE7  0DF1               	rlf	___lwmod@divisor+1,f
  4934  1BE8  3EFF               	addlw	-1
  4935  1BE9  1D03               	skipz
  4936  1BEA  2BE5               	goto	u3405
  4937  1BEB  3001               	movlw	1
  4938  1BEC  00F4               	movwf	??___lwmod
  4939  1BED  0874               	movf	??___lwmod,w
  4940  1BEE  07F5               	addwf	___lwmod@counter,f
  4941  1BEF  2BE2               	goto	l2575
  4942  1BF0                     l2577:	
  4943  1BF0  0871               	movf	___lwmod@divisor+1,w
  4944  1BF1  0273               	subwf	___lwmod@dividend+1,w
  4945  1BF2  1D03               	skipz
  4946  1BF3  2BF6               	goto	u3425
  4947  1BF4  0870               	movf	___lwmod@divisor,w
  4948  1BF5  0272               	subwf	___lwmod@dividend,w
  4949  1BF6                     u3425:	
  4950  1BF6  1C03               	skipc
  4951  1BF7  2BFE               	goto	l2581
  4952  1BF8  0870               	movf	___lwmod@divisor,w
  4953  1BF9  02F2               	subwf	___lwmod@dividend,f
  4954  1BFA  0871               	movf	___lwmod@divisor+1,w
  4955  1BFB  1C03               	skipc
  4956  1BFC  03F3               	decf	___lwmod@dividend+1,f
  4957  1BFD  02F3               	subwf	___lwmod@dividend+1,f
  4958  1BFE                     l2581:	
  4959  1BFE  3001               	movlw	1
  4960  1BFF                     u3435:	
  4961  1BFF  1003               	clrc
  4962  1C00  0CF1               	rrf	___lwmod@divisor+1,f
  4963  1C01  0CF0               	rrf	___lwmod@divisor,f
  4964  1C02  3EFF               	addlw	-1
  4965  1C03  1D03               	skipz
  4966  1C04  2BFF               	goto	u3435
  4967  1C05  3001               	movlw	1
  4968  1C06  02F5               	subwf	___lwmod@counter,f
  4969  1C07  1D03               	btfss	3,2
  4970  1C08  2BF0               	goto	l2577
  4971  1C09                     l2585:	
  4972  1C09  0873               	movf	___lwmod@dividend+1,w
  4973  1C0A  00F1               	movwf	?___lwmod+1
  4974  1C0B  0872               	movf	___lwmod@dividend,w
  4975  1C0C  00F0               	movwf	?___lwmod
  4976  1C0D  0008               	return
  4977  1C0E                     __end_of___lwmod:	
  4978                           
  4979                           	psect	text8
  4980  1C44                     __ptext8:	
  4981 ;; *************** function ___lwdiv *****************
  4982 ;; Defined at:
  4983 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  divisor         2    6[COMMON] unsigned int 
  4986 ;;  dividend        2    8[COMMON] unsigned int 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  quotient        2   11[COMMON] unsigned int 
  4989 ;;  counter         1   13[COMMON] unsigned char 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  2    6[COMMON] unsigned int 
  4992 ;; Registers used:
  4993 ;;		wreg, status,2, status,0
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4999 ;;      Params:         4       0       0       0       0
  5000 ;;      Locals:         3       0       0       0       0
  5001 ;;      Temps:          1       0       0       0       0
  5002 ;;      Totals:         8       0       0       0       0
  5003 ;;Total ram usage:        8 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_fround
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           
  5013                           ;psect for function ___lwdiv
  5014  1C44                     ___lwdiv:	
  5015                           
  5016                           ;incstack = 0
  5017                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5018  1C44  01FB               	clrf	___lwdiv@quotient
  5019  1C45  01FC               	clrf	___lwdiv@quotient+1
  5020  1C46  0876               	movf	___lwdiv@divisor,w
  5021  1C47  0477               	iorwf	___lwdiv@divisor+1,w
  5022  1C48  1903               	btfsc	3,2
  5023  1C49  2C7B               	goto	l2563
  5024  1C4A  01FD               	clrf	___lwdiv@counter
  5025  1C4B  0AFD               	incf	___lwdiv@counter,f
  5026  1C4C                     l2551:	
  5027  1C4C  1BF7               	btfsc	___lwdiv@divisor+1,7
  5028  1C4D  2C5A               	goto	l2553
  5029  1C4E  3001               	movlw	1
  5030  1C4F                     u3335:	
  5031  1C4F  1003               	clrc
  5032  1C50  0DF6               	rlf	___lwdiv@divisor,f
  5033  1C51  0DF7               	rlf	___lwdiv@divisor+1,f
  5034  1C52  3EFF               	addlw	-1
  5035  1C53  1D03               	skipz
  5036  1C54  2C4F               	goto	u3335
  5037  1C55  3001               	movlw	1
  5038  1C56  00FA               	movwf	??___lwdiv
  5039  1C57  087A               	movf	??___lwdiv,w
  5040  1C58  07FD               	addwf	___lwdiv@counter,f
  5041  1C59  2C4C               	goto	l2551
  5042  1C5A                     l2553:	
  5043  1C5A  3001               	movlw	1
  5044  1C5B                     u3355:	
  5045  1C5B  1003               	clrc
  5046  1C5C  0DFB               	rlf	___lwdiv@quotient,f
  5047  1C5D  0DFC               	rlf	___lwdiv@quotient+1,f
  5048  1C5E  3EFF               	addlw	-1
  5049  1C5F  1D03               	skipz
  5050  1C60  2C5B               	goto	u3355
  5051  1C61  0877               	movf	___lwdiv@divisor+1,w
  5052  1C62  0279               	subwf	___lwdiv@dividend+1,w
  5053  1C63  1D03               	skipz
  5054  1C64  2C67               	goto	u3365
  5055  1C65  0876               	movf	___lwdiv@divisor,w
  5056  1C66  0278               	subwf	___lwdiv@dividend,w
  5057  1C67                     u3365:	
  5058  1C67  1C03               	skipc
  5059  1C68  2C70               	goto	l2559
  5060  1C69  0876               	movf	___lwdiv@divisor,w
  5061  1C6A  02F8               	subwf	___lwdiv@dividend,f
  5062  1C6B  0877               	movf	___lwdiv@divisor+1,w
  5063  1C6C  1C03               	skipc
  5064  1C6D  03F9               	decf	___lwdiv@dividend+1,f
  5065  1C6E  02F9               	subwf	___lwdiv@dividend+1,f
  5066  1C6F  147B               	bsf	___lwdiv@quotient,0
  5067  1C70                     l2559:	
  5068  1C70  3001               	movlw	1
  5069  1C71                     u3375:	
  5070  1C71  1003               	clrc
  5071  1C72  0CF7               	rrf	___lwdiv@divisor+1,f
  5072  1C73  0CF6               	rrf	___lwdiv@divisor,f
  5073  1C74  3EFF               	addlw	-1
  5074  1C75  1D03               	skipz
  5075  1C76  2C71               	goto	u3375
  5076  1C77  3001               	movlw	1
  5077  1C78  02FD               	subwf	___lwdiv@counter,f
  5078  1C79  1D03               	btfss	3,2
  5079  1C7A  2C5A               	goto	l2553
  5080  1C7B                     l2563:	
  5081  1C7B  087C               	movf	___lwdiv@quotient+1,w
  5082  1C7C  00F7               	movwf	?___lwdiv+1
  5083  1C7D  087B               	movf	___lwdiv@quotient,w
  5084  1C7E  00F6               	movwf	?___lwdiv
  5085  1C7F  0008               	return
  5086  1C80                     __end_of___lwdiv:	
  5087                           
  5088                           	psect	text9
  5089  09A2                     __ptext9:	
  5090 ;; *************** function ___flmul *****************
  5091 ;; Defined at:
  5092 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  b               4    4[BANK0 ] unsigned int 
  5095 ;;  a               4    8[BANK0 ] unsigned int 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  prod            4   24[BANK0 ] struct .
  5098 ;;  grs             4   18[BANK0 ] unsigned long 
  5099 ;;  temp            2   28[BANK0 ] struct .
  5100 ;;  bexp            1   23[BANK0 ] unsigned char 
  5101 ;;  aexp            1   22[BANK0 ] unsigned char 
  5102 ;;  sign            1   17[BANK0 ] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  4    4[BANK0 ] unsigned char 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5112 ;;      Params:         0       8       0       0       0
  5113 ;;      Locals:         0      13       0       0       0
  5114 ;;      Temps:          0       5       0       0       0
  5115 ;;      Totals:         0      26       0       0       0
  5116 ;;Total ram usage:       26 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    1
  5119 ;; This function calls:
  5120 ;;		__Umul8_16
  5121 ;; This function is called by:
  5122 ;;		_main
  5123 ;;		_fround
  5124 ;;		_scale
  5125 ;;		_sprintf
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           
  5130                           ;psect for function ___flmul
  5131  09A2                     ___flmul:	
  5132                           
  5133                           ;incstack = 0
  5134                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5135  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  5136  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  5137  09A4  0827               	movf	___flmul@b+3,w
  5138  09A5  3980               	andlw	128
  5139  09A6  00AC               	movwf	??___flmul
  5140  09A7  082C               	movf	??___flmul,w
  5141  09A8  00B1               	movwf	___flmul@sign
  5142  09A9  0827               	movf	___flmul@b+3,w
  5143  09AA  00AC               	movwf	??___flmul
  5144  09AB  072C               	addwf	??___flmul,w
  5145  09AC  00AD               	movwf	??___flmul+1
  5146  09AD  082D               	movf	??___flmul+1,w
  5147  09AE  00B7               	movwf	___flmul@bexp
  5148  09AF  1BA6               	btfsc	___flmul@b+2,7
  5149  09B0  1437               	bsf	___flmul@bexp,0
  5150  09B1  0837               	movf	___flmul@bexp,w
  5151  09B2  1903               	btfsc	3,2
  5152  09B3  29C1               	goto	l2799
  5153  09B4  0A37               	incf	___flmul@bexp,w
  5154  09B5  1D03               	btfss	3,2
  5155  09B6  29BF               	goto	l2797
  5156  09B7  3000               	movlw	0
  5157  09B8  00A7               	movwf	___flmul@b+3
  5158  09B9  3000               	movlw	0
  5159  09BA  00A6               	movwf	___flmul@b+2
  5160  09BB  3000               	movlw	0
  5161  09BC  00A5               	movwf	___flmul@b+1
  5162  09BD  3000               	movlw	0
  5163  09BE  00A4               	movwf	___flmul@b
  5164  09BF                     l2797:	
  5165  09BF  17A6               	bsf	___flmul@b+2,7
  5166  09C0  29C9               	goto	l2801
  5167  09C1                     l2799:	
  5168  09C1  3000               	movlw	0
  5169  09C2  00A7               	movwf	___flmul@b+3
  5170  09C3  3000               	movlw	0
  5171  09C4  00A6               	movwf	___flmul@b+2
  5172  09C5  3000               	movlw	0
  5173  09C6  00A5               	movwf	___flmul@b+1
  5174  09C7  3000               	movlw	0
  5175  09C8  00A4               	movwf	___flmul@b
  5176  09C9                     l2801:	
  5177  09C9  082B               	movf	___flmul@a+3,w
  5178  09CA  3980               	andlw	128
  5179  09CB  00AC               	movwf	??___flmul
  5180  09CC  082C               	movf	??___flmul,w
  5181  09CD  06B1               	xorwf	___flmul@sign,f
  5182  09CE  082B               	movf	___flmul@a+3,w
  5183  09CF  00AC               	movwf	??___flmul
  5184  09D0  072C               	addwf	??___flmul,w
  5185  09D1  00AD               	movwf	??___flmul+1
  5186  09D2  082D               	movf	??___flmul+1,w
  5187  09D3  00B6               	movwf	___flmul@aexp
  5188  09D4  1BAA               	btfsc	___flmul@a+2,7
  5189  09D5  1436               	bsf	___flmul@aexp,0
  5190  09D6  0836               	movf	___flmul@aexp,w
  5191  09D7  1903               	btfsc	3,2
  5192  09D8  29E6               	goto	l2817
  5193  09D9  0A36               	incf	___flmul@aexp,w
  5194  09DA  1D03               	btfss	3,2
  5195  09DB  29E4               	goto	l2815
  5196  09DC  3000               	movlw	0
  5197  09DD  00AB               	movwf	___flmul@a+3
  5198  09DE  3000               	movlw	0
  5199  09DF  00AA               	movwf	___flmul@a+2
  5200  09E0  3000               	movlw	0
  5201  09E1  00A9               	movwf	___flmul@a+1
  5202  09E2  3000               	movlw	0
  5203  09E3  00A8               	movwf	___flmul@a
  5204  09E4                     l2815:	
  5205  09E4  17AA               	bsf	___flmul@a+2,7
  5206  09E5  29EE               	goto	l2819
  5207  09E6                     l2817:	
  5208  09E6  3000               	movlw	0
  5209  09E7  00AB               	movwf	___flmul@a+3
  5210  09E8  3000               	movlw	0
  5211  09E9  00AA               	movwf	___flmul@a+2
  5212  09EA  3000               	movlw	0
  5213  09EB  00A9               	movwf	___flmul@a+1
  5214  09EC  3000               	movlw	0
  5215  09ED  00A8               	movwf	___flmul@a
  5216  09EE                     l2819:	
  5217  09EE  0836               	movf	___flmul@aexp,w
  5218  09EF  1D03               	btfss	3,2
  5219  09F0  0837               	movf	___flmul@bexp,w
  5220  09F1  1D03               	btfss	3,2
  5221  09F2  29FC               	goto	l2827
  5222  09F3  3000               	movlw	0
  5223  09F4  00A7               	movwf	?___flmul+3
  5224  09F5  3000               	movlw	0
  5225  09F6  00A6               	movwf	?___flmul+2
  5226  09F7  3000               	movlw	0
  5227  09F8  00A5               	movwf	?___flmul+1
  5228  09F9  3000               	movlw	0
  5229  09FA  00A4               	movwf	?___flmul
  5230  09FB  0008               	return
  5231  09FC                     l2827:	
  5232  09FC  0824               	movf	___flmul@b,w
  5233  09FD  00AC               	movwf	??___flmul
  5234  09FE  082C               	movf	??___flmul,w
  5235  09FF  00F0               	movwf	__Umul8_16@multiplicand
  5236  0A00  082A               	movf	___flmul@a+2,w
  5237  0A01  160A  158A  22DA  120A  158A  	fcall	__Umul8_16
  5238  0A06  0871               	movf	?__Umul8_16+1,w
  5239  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  5240  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  5241  0A09  00BD               	movwf	___flmul@temp+1
  5242  0A0A  0870               	movf	?__Umul8_16,w
  5243  0A0B  00BC               	movwf	___flmul@temp
  5244  0A0C  083C               	movf	___flmul@temp,w
  5245  0A0D  00AC               	movwf	??___flmul
  5246  0A0E  01AD               	clrf	??___flmul+1
  5247  0A0F  01AE               	clrf	??___flmul+2
  5248  0A10  01AF               	clrf	??___flmul+3
  5249  0A11  082F               	movf	??___flmul+3,w
  5250  0A12  00B5               	movwf	___flmul@grs+3
  5251  0A13  082E               	movf	??___flmul+2,w
  5252  0A14  00B4               	movwf	___flmul@grs+2
  5253  0A15  082D               	movf	??___flmul+1,w
  5254  0A16  00B3               	movwf	___flmul@grs+1
  5255  0A17  082C               	movf	??___flmul,w
  5256  0A18  00B2               	movwf	___flmul@grs
  5257  0A19  083D               	movf	___flmul@temp+1,w
  5258  0A1A  00AC               	movwf	??___flmul
  5259  0A1B  01AD               	clrf	??___flmul+1
  5260  0A1C  01AE               	clrf	??___flmul+2
  5261  0A1D  01AF               	clrf	??___flmul+3
  5262  0A1E  082F               	movf	??___flmul+3,w
  5263  0A1F  00BB               	movwf	___flmul@prod+3
  5264  0A20  082E               	movf	??___flmul+2,w
  5265  0A21  00BA               	movwf	___flmul@prod+2
  5266  0A22  082D               	movf	??___flmul+1,w
  5267  0A23  00B9               	movwf	___flmul@prod+1
  5268  0A24  082C               	movf	??___flmul,w
  5269  0A25  00B8               	movwf	___flmul@prod
  5270  0A26  0825               	movf	___flmul@b+1,w
  5271  0A27  00AC               	movwf	??___flmul
  5272  0A28  082C               	movf	??___flmul,w
  5273  0A29  00F0               	movwf	__Umul8_16@multiplicand
  5274  0A2A  0829               	movf	___flmul@a+1,w
  5275  0A2B  160A  158A  22DA  120A  158A  	fcall	__Umul8_16
  5276  0A30  0871               	movf	?__Umul8_16+1,w
  5277  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  5278  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  5279  0A33  00BD               	movwf	___flmul@temp+1
  5280  0A34  0870               	movf	?__Umul8_16,w
  5281  0A35  00BC               	movwf	___flmul@temp
  5282  0A36  083C               	movf	___flmul@temp,w
  5283  0A37  00AC               	movwf	??___flmul
  5284  0A38  01AD               	clrf	??___flmul+1
  5285  0A39  01AE               	clrf	??___flmul+2
  5286  0A3A  01AF               	clrf	??___flmul+3
  5287  0A3B  082C               	movf	??___flmul,w
  5288  0A3C  07B2               	addwf	___flmul@grs,f
  5289  0A3D  082D               	movf	??___flmul+1,w
  5290  0A3E  1103               	clrz
  5291  0A3F  1803               	skipnc
  5292  0A40  3E01               	addlw	1
  5293  0A41  1D03               	btfss	3,2
  5294  0A42  07B3               	addwf	___flmul@grs+1,f
  5295  0A43  082E               	movf	??___flmul+2,w
  5296  0A44  1103               	clrz
  5297  0A45  1803               	skipnc
  5298  0A46  3E01               	addlw	1
  5299  0A47  1D03               	btfss	3,2
  5300  0A48  07B4               	addwf	___flmul@grs+2,f
  5301  0A49  082F               	movf	??___flmul+3,w
  5302  0A4A  1103               	clrz
  5303  0A4B  1803               	skipnc
  5304  0A4C  3E01               	addlw	1
  5305  0A4D  1D03               	btfss	3,2
  5306  0A4E  07B5               	addwf	___flmul@grs+3,f
  5307  0A4F  083D               	movf	___flmul@temp+1,w
  5308  0A50  00AC               	movwf	??___flmul
  5309  0A51  01AD               	clrf	??___flmul+1
  5310  0A52  01AE               	clrf	??___flmul+2
  5311  0A53  01AF               	clrf	??___flmul+3
  5312  0A54  082C               	movf	??___flmul,w
  5313  0A55  07B8               	addwf	___flmul@prod,f
  5314  0A56  082D               	movf	??___flmul+1,w
  5315  0A57  1103               	clrz
  5316  0A58  1803               	skipnc
  5317  0A59  3E01               	addlw	1
  5318  0A5A  1D03               	btfss	3,2
  5319  0A5B  07B9               	addwf	___flmul@prod+1,f
  5320  0A5C  082E               	movf	??___flmul+2,w
  5321  0A5D  1103               	clrz
  5322  0A5E  1803               	skipnc
  5323  0A5F  3E01               	addlw	1
  5324  0A60  1D03               	btfss	3,2
  5325  0A61  07BA               	addwf	___flmul@prod+2,f
  5326  0A62  082F               	movf	??___flmul+3,w
  5327  0A63  1103               	clrz
  5328  0A64  1803               	skipnc
  5329  0A65  3E01               	addlw	1
  5330  0A66  1D03               	btfss	3,2
  5331  0A67  07BB               	addwf	___flmul@prod+3,f
  5332  0A68  0826               	movf	___flmul@b+2,w
  5333  0A69  00AC               	movwf	??___flmul
  5334  0A6A  082C               	movf	??___flmul,w
  5335  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  5336  0A6C  0828               	movf	___flmul@a,w
  5337  0A6D  160A  158A  22DA  120A  158A  	fcall	__Umul8_16
  5338  0A72  0871               	movf	?__Umul8_16+1,w
  5339  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  5340  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  5341  0A75  00BD               	movwf	___flmul@temp+1
  5342  0A76  0870               	movf	?__Umul8_16,w
  5343  0A77  00BC               	movwf	___flmul@temp
  5344  0A78  083C               	movf	___flmul@temp,w
  5345  0A79  00AC               	movwf	??___flmul
  5346  0A7A  01AD               	clrf	??___flmul+1
  5347  0A7B  01AE               	clrf	??___flmul+2
  5348  0A7C  01AF               	clrf	??___flmul+3
  5349  0A7D  082C               	movf	??___flmul,w
  5350  0A7E  07B2               	addwf	___flmul@grs,f
  5351  0A7F  082D               	movf	??___flmul+1,w
  5352  0A80  1103               	clrz
  5353  0A81  1803               	skipnc
  5354  0A82  3E01               	addlw	1
  5355  0A83  1D03               	btfss	3,2
  5356  0A84  07B3               	addwf	___flmul@grs+1,f
  5357  0A85  082E               	movf	??___flmul+2,w
  5358  0A86  1103               	clrz
  5359  0A87  1803               	skipnc
  5360  0A88  3E01               	addlw	1
  5361  0A89  1D03               	btfss	3,2
  5362  0A8A  07B4               	addwf	___flmul@grs+2,f
  5363  0A8B  082F               	movf	??___flmul+3,w
  5364  0A8C  1103               	clrz
  5365  0A8D  1803               	skipnc
  5366  0A8E  3E01               	addlw	1
  5367  0A8F  1D03               	btfss	3,2
  5368  0A90  07B5               	addwf	___flmul@grs+3,f
  5369  0A91  083D               	movf	___flmul@temp+1,w
  5370  0A92  00AC               	movwf	??___flmul
  5371  0A93  01AD               	clrf	??___flmul+1
  5372  0A94  01AE               	clrf	??___flmul+2
  5373  0A95  01AF               	clrf	??___flmul+3
  5374  0A96  082C               	movf	??___flmul,w
  5375  0A97  07B8               	addwf	___flmul@prod,f
  5376  0A98  082D               	movf	??___flmul+1,w
  5377  0A99  1103               	clrz
  5378  0A9A  1803               	skipnc
  5379  0A9B  3E01               	addlw	1
  5380  0A9C  1D03               	btfss	3,2
  5381  0A9D  07B9               	addwf	___flmul@prod+1,f
  5382  0A9E  082E               	movf	??___flmul+2,w
  5383  0A9F  1103               	clrz
  5384  0AA0  1803               	skipnc
  5385  0AA1  3E01               	addlw	1
  5386  0AA2  1D03               	btfss	3,2
  5387  0AA3  07BA               	addwf	___flmul@prod+2,f
  5388  0AA4  082F               	movf	??___flmul+3,w
  5389  0AA5  1103               	clrz
  5390  0AA6  1803               	skipnc
  5391  0AA7  3E01               	addlw	1
  5392  0AA8  1D03               	btfss	3,2
  5393  0AA9  07BB               	addwf	___flmul@prod+3,f
  5394  0AAA  3008               	movlw	8
  5395  0AAB  00AC               	movwf	??___flmul
  5396  0AAC                     u4035:	
  5397  0AAC  1003               	clrc
  5398  0AAD  0DB2               	rlf	___flmul@grs,f
  5399  0AAE  0DB3               	rlf	___flmul@grs+1,f
  5400  0AAF  0DB4               	rlf	___flmul@grs+2,f
  5401  0AB0  0DB5               	rlf	___flmul@grs+3,f
  5402  0AB1  0BAC               	decfsz	??___flmul,f
  5403  0AB2  2AAC               	goto	u4035
  5404  0AB3  0825               	movf	___flmul@b+1,w
  5405  0AB4  00AC               	movwf	??___flmul
  5406  0AB5  082C               	movf	??___flmul,w
  5407  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  5408  0AB7  0828               	movf	___flmul@a,w
  5409  0AB8  160A  158A  22DA  120A  158A  	fcall	__Umul8_16
  5410  0ABD  0871               	movf	?__Umul8_16+1,w
  5411  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  5412  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  5413  0AC0  00BD               	movwf	___flmul@temp+1
  5414  0AC1  0870               	movf	?__Umul8_16,w
  5415  0AC2  00BC               	movwf	___flmul@temp
  5416  0AC3  083C               	movf	___flmul@temp,w
  5417  0AC4  00AC               	movwf	??___flmul
  5418  0AC5  083D               	movf	___flmul@temp+1,w
  5419  0AC6  00AD               	movwf	??___flmul+1
  5420  0AC7  01AE               	clrf	??___flmul+2
  5421  0AC8  01AF               	clrf	??___flmul+3
  5422  0AC9  082C               	movf	??___flmul,w
  5423  0ACA  07B2               	addwf	___flmul@grs,f
  5424  0ACB  082D               	movf	??___flmul+1,w
  5425  0ACC  1103               	clrz
  5426  0ACD  1803               	skipnc
  5427  0ACE  3E01               	addlw	1
  5428  0ACF  1D03               	btfss	3,2
  5429  0AD0  07B3               	addwf	___flmul@grs+1,f
  5430  0AD1  082E               	movf	??___flmul+2,w
  5431  0AD2  1103               	clrz
  5432  0AD3  1803               	skipnc
  5433  0AD4  3E01               	addlw	1
  5434  0AD5  1D03               	btfss	3,2
  5435  0AD6  07B4               	addwf	___flmul@grs+2,f
  5436  0AD7  082F               	movf	??___flmul+3,w
  5437  0AD8  1103               	clrz
  5438  0AD9  1803               	skipnc
  5439  0ADA  3E01               	addlw	1
  5440  0ADB  1D03               	btfss	3,2
  5441  0ADC  07B5               	addwf	___flmul@grs+3,f
  5442  0ADD  0824               	movf	___flmul@b,w
  5443  0ADE  00AC               	movwf	??___flmul
  5444  0ADF  082C               	movf	??___flmul,w
  5445  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5446  0AE1  0829               	movf	___flmul@a+1,w
  5447  0AE2  160A  158A  22DA  120A  158A  	fcall	__Umul8_16
  5448  0AE7  0871               	movf	?__Umul8_16+1,w
  5449  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5450  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5451  0AEA  00BD               	movwf	___flmul@temp+1
  5452  0AEB  0870               	movf	?__Umul8_16,w
  5453  0AEC  00BC               	movwf	___flmul@temp
  5454  0AED  083C               	movf	___flmul@temp,w
  5455  0AEE  00AC               	movwf	??___flmul
  5456  0AEF  083D               	movf	___flmul@temp+1,w
  5457  0AF0  00AD               	movwf	??___flmul+1
  5458  0AF1  01AE               	clrf	??___flmul+2
  5459  0AF2  01AF               	clrf	??___flmul+3
  5460  0AF3  082C               	movf	??___flmul,w
  5461  0AF4  07B2               	addwf	___flmul@grs,f
  5462  0AF5  082D               	movf	??___flmul+1,w
  5463  0AF6  1103               	clrz
  5464  0AF7  1803               	skipnc
  5465  0AF8  3E01               	addlw	1
  5466  0AF9  1D03               	btfss	3,2
  5467  0AFA  07B3               	addwf	___flmul@grs+1,f
  5468  0AFB  082E               	movf	??___flmul+2,w
  5469  0AFC  1103               	clrz
  5470  0AFD  1803               	skipnc
  5471  0AFE  3E01               	addlw	1
  5472  0AFF  1D03               	btfss	3,2
  5473  0B00  07B4               	addwf	___flmul@grs+2,f
  5474  0B01  082F               	movf	??___flmul+3,w
  5475  0B02  1103               	clrz
  5476  0B03  1803               	skipnc
  5477  0B04  3E01               	addlw	1
  5478  0B05  1D03               	btfss	3,2
  5479  0B06  07B5               	addwf	___flmul@grs+3,f
  5480  0B07  3008               	movlw	8
  5481  0B08  00AC               	movwf	??___flmul
  5482  0B09                     u4065:	
  5483  0B09  1003               	clrc
  5484  0B0A  0DB2               	rlf	___flmul@grs,f
  5485  0B0B  0DB3               	rlf	___flmul@grs+1,f
  5486  0B0C  0DB4               	rlf	___flmul@grs+2,f
  5487  0B0D  0DB5               	rlf	___flmul@grs+3,f
  5488  0B0E  0BAC               	decfsz	??___flmul,f
  5489  0B0F  2B09               	goto	u4065
  5490  0B10  0824               	movf	___flmul@b,w
  5491  0B11  00AC               	movwf	??___flmul
  5492  0B12  082C               	movf	??___flmul,w
  5493  0B13  00F0               	movwf	__Umul8_16@multiplicand
  5494  0B14  0828               	movf	___flmul@a,w
  5495  0B15  160A  158A  22DA  120A  158A  	fcall	__Umul8_16
  5496  0B1A  0871               	movf	?__Umul8_16+1,w
  5497  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5498  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5499  0B1D  00BD               	movwf	___flmul@temp+1
  5500  0B1E  0870               	movf	?__Umul8_16,w
  5501  0B1F  00BC               	movwf	___flmul@temp
  5502  0B20  083C               	movf	___flmul@temp,w
  5503  0B21  00AC               	movwf	??___flmul
  5504  0B22  083D               	movf	___flmul@temp+1,w
  5505  0B23  00AD               	movwf	??___flmul+1
  5506  0B24  01AE               	clrf	??___flmul+2
  5507  0B25  01AF               	clrf	??___flmul+3
  5508  0B26  082C               	movf	??___flmul,w
  5509  0B27  07B2               	addwf	___flmul@grs,f
  5510  0B28  082D               	movf	??___flmul+1,w
  5511  0B29  1103               	clrz
  5512  0B2A  1803               	skipnc
  5513  0B2B  3E01               	addlw	1
  5514  0B2C  1D03               	btfss	3,2
  5515  0B2D  07B3               	addwf	___flmul@grs+1,f
  5516  0B2E  082E               	movf	??___flmul+2,w
  5517  0B2F  1103               	clrz
  5518  0B30  1803               	skipnc
  5519  0B31  3E01               	addlw	1
  5520  0B32  1D03               	btfss	3,2
  5521  0B33  07B4               	addwf	___flmul@grs+2,f
  5522  0B34  082F               	movf	??___flmul+3,w
  5523  0B35  1103               	clrz
  5524  0B36  1803               	skipnc
  5525  0B37  3E01               	addlw	1
  5526  0B38  1D03               	btfss	3,2
  5527  0B39  07B5               	addwf	___flmul@grs+3,f
  5528  0B3A  0825               	movf	___flmul@b+1,w
  5529  0B3B  00AC               	movwf	??___flmul
  5530  0B3C  082C               	movf	??___flmul,w
  5531  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  5532  0B3E  082A               	movf	___flmul@a+2,w
  5533  0B3F  160A  158A  22DA  120A  158A  	fcall	__Umul8_16
  5534  0B44  0871               	movf	?__Umul8_16+1,w
  5535  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5536  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5537  0B47  00BD               	movwf	___flmul@temp+1
  5538  0B48  0870               	movf	?__Umul8_16,w
  5539  0B49  00BC               	movwf	___flmul@temp
  5540  0B4A  083C               	movf	___flmul@temp,w
  5541  0B4B  00AC               	movwf	??___flmul
  5542  0B4C  083D               	movf	___flmul@temp+1,w
  5543  0B4D  00AD               	movwf	??___flmul+1
  5544  0B4E  01AE               	clrf	??___flmul+2
  5545  0B4F  01AF               	clrf	??___flmul+3
  5546  0B50  082C               	movf	??___flmul,w
  5547  0B51  07B8               	addwf	___flmul@prod,f
  5548  0B52  082D               	movf	??___flmul+1,w
  5549  0B53  1103               	clrz
  5550  0B54  1803               	skipnc
  5551  0B55  3E01               	addlw	1
  5552  0B56  1D03               	btfss	3,2
  5553  0B57  07B9               	addwf	___flmul@prod+1,f
  5554  0B58  082E               	movf	??___flmul+2,w
  5555  0B59  1103               	clrz
  5556  0B5A  1803               	skipnc
  5557  0B5B  3E01               	addlw	1
  5558  0B5C  1D03               	btfss	3,2
  5559  0B5D  07BA               	addwf	___flmul@prod+2,f
  5560  0B5E  082F               	movf	??___flmul+3,w
  5561  0B5F  1103               	clrz
  5562  0B60  1803               	skipnc
  5563  0B61  3E01               	addlw	1
  5564  0B62  1D03               	btfss	3,2
  5565  0B63  07BB               	addwf	___flmul@prod+3,f
  5566  0B64  0826               	movf	___flmul@b+2,w
  5567  0B65  00AC               	movwf	??___flmul
  5568  0B66  082C               	movf	??___flmul,w
  5569  0B67  00F0               	movwf	__Umul8_16@multiplicand
  5570  0B68  0829               	movf	___flmul@a+1,w
  5571  0B69  160A  158A  22DA  120A  158A  	fcall	__Umul8_16
  5572  0B6E  0871               	movf	?__Umul8_16+1,w
  5573  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5574  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5575  0B71  00BD               	movwf	___flmul@temp+1
  5576  0B72  0870               	movf	?__Umul8_16,w
  5577  0B73  00BC               	movwf	___flmul@temp
  5578  0B74  083C               	movf	___flmul@temp,w
  5579  0B75  00AC               	movwf	??___flmul
  5580  0B76  083D               	movf	___flmul@temp+1,w
  5581  0B77  00AD               	movwf	??___flmul+1
  5582  0B78  01AE               	clrf	??___flmul+2
  5583  0B79  01AF               	clrf	??___flmul+3
  5584  0B7A  082C               	movf	??___flmul,w
  5585  0B7B  07B8               	addwf	___flmul@prod,f
  5586  0B7C  082D               	movf	??___flmul+1,w
  5587  0B7D  1103               	clrz
  5588  0B7E  1803               	skipnc
  5589  0B7F  3E01               	addlw	1
  5590  0B80  1D03               	btfss	3,2
  5591  0B81  07B9               	addwf	___flmul@prod+1,f
  5592  0B82  082E               	movf	??___flmul+2,w
  5593  0B83  1103               	clrz
  5594  0B84  1803               	skipnc
  5595  0B85  3E01               	addlw	1
  5596  0B86  1D03               	btfss	3,2
  5597  0B87  07BA               	addwf	___flmul@prod+2,f
  5598  0B88  082F               	movf	??___flmul+3,w
  5599  0B89  1103               	clrz
  5600  0B8A  1803               	skipnc
  5601  0B8B  3E01               	addlw	1
  5602  0B8C  1D03               	btfss	3,2
  5603  0B8D  07BB               	addwf	___flmul@prod+3,f
  5604  0B8E  0826               	movf	___flmul@b+2,w
  5605  0B8F  00AC               	movwf	??___flmul
  5606  0B90  082C               	movf	??___flmul,w
  5607  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5608  0B92  082A               	movf	___flmul@a+2,w
  5609  0B93  160A  158A  22DA  120A  158A  	fcall	__Umul8_16
  5610  0B98  0871               	movf	?__Umul8_16+1,w
  5611  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5612  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5613  0B9B  00BD               	movwf	___flmul@temp+1
  5614  0B9C  0870               	movf	?__Umul8_16,w
  5615  0B9D  00BC               	movwf	___flmul@temp
  5616  0B9E  083C               	movf	___flmul@temp,w
  5617  0B9F  00AC               	movwf	??___flmul
  5618  0BA0  083D               	movf	___flmul@temp+1,w
  5619  0BA1  00AD               	movwf	??___flmul+1
  5620  0BA2  01AE               	clrf	??___flmul+2
  5621  0BA3  01AF               	clrf	??___flmul+3
  5622  0BA4  3008               	movlw	8
  5623  0BA5                     u4105:	
  5624  0BA5  1003               	clrc
  5625  0BA6  0DAC               	rlf	??___flmul,f
  5626  0BA7  0DAD               	rlf	??___flmul+1,f
  5627  0BA8  0DAE               	rlf	??___flmul+2,f
  5628  0BA9  0DAF               	rlf	??___flmul+3,f
  5629  0BAA  3EFF               	addlw	-1
  5630  0BAB  1D03               	skipz
  5631  0BAC  2BA5               	goto	u4105
  5632  0BAD  082C               	movf	??___flmul,w
  5633  0BAE  07B8               	addwf	___flmul@prod,f
  5634  0BAF  082D               	movf	??___flmul+1,w
  5635  0BB0  1103               	clrz
  5636  0BB1  1803               	skipnc
  5637  0BB2  3E01               	addlw	1
  5638  0BB3  1D03               	btfss	3,2
  5639  0BB4  07B9               	addwf	___flmul@prod+1,f
  5640  0BB5  082E               	movf	??___flmul+2,w
  5641  0BB6  1103               	clrz
  5642  0BB7  1803               	skipnc
  5643  0BB8  3E01               	addlw	1
  5644  0BB9  1D03               	btfss	3,2
  5645  0BBA  07BA               	addwf	___flmul@prod+2,f
  5646  0BBB  082F               	movf	??___flmul+3,w
  5647  0BBC  1103               	clrz
  5648  0BBD  1803               	skipnc
  5649  0BBE  3E01               	addlw	1
  5650  0BBF  1D03               	btfss	3,2
  5651  0BC0  07BB               	addwf	___flmul@prod+3,f
  5652  0BC1  0832               	movf	___flmul@grs,w
  5653  0BC2  00AC               	movwf	??___flmul
  5654  0BC3  0833               	movf	___flmul@grs+1,w
  5655  0BC4  00AD               	movwf	??___flmul+1
  5656  0BC5  0834               	movf	___flmul@grs+2,w
  5657  0BC6  00AE               	movwf	??___flmul+2
  5658  0BC7  0835               	movf	___flmul@grs+3,w
  5659  0BC8  00AF               	movwf	??___flmul+3
  5660  0BC9  3018               	movlw	24
  5661  0BCA                     u4125:	
  5662  0BCA  1003               	clrc
  5663  0BCB  0CAF               	rrf	??___flmul+3,f
  5664  0BCC  0CAE               	rrf	??___flmul+2,f
  5665  0BCD  0CAD               	rrf	??___flmul+1,f
  5666  0BCE  0CAC               	rrf	??___flmul,f
  5667  0BCF  3EFF               	addlw	-1
  5668  0BD0  1D03               	skipz
  5669  0BD1  2BCA               	goto	u4125
  5670  0BD2  082C               	movf	??___flmul,w
  5671  0BD3  07B8               	addwf	___flmul@prod,f
  5672  0BD4  082D               	movf	??___flmul+1,w
  5673  0BD5  1103               	clrz
  5674  0BD6  1803               	skipnc
  5675  0BD7  3E01               	addlw	1
  5676  0BD8  1D03               	btfss	3,2
  5677  0BD9  07B9               	addwf	___flmul@prod+1,f
  5678  0BDA  082E               	movf	??___flmul+2,w
  5679  0BDB  1103               	clrz
  5680  0BDC  1803               	skipnc
  5681  0BDD  3E01               	addlw	1
  5682  0BDE  1D03               	btfss	3,2
  5683  0BDF  07BA               	addwf	___flmul@prod+2,f
  5684  0BE0  082F               	movf	??___flmul+3,w
  5685  0BE1  1103               	clrz
  5686  0BE2  1803               	skipnc
  5687  0BE3  3E01               	addlw	1
  5688  0BE4  1D03               	btfss	3,2
  5689  0BE5  07BB               	addwf	___flmul@prod+3,f
  5690  0BE6  3008               	movlw	8
  5691  0BE7  00AC               	movwf	??___flmul
  5692  0BE8                     u4145:	
  5693  0BE8  1003               	clrc
  5694  0BE9  0DB2               	rlf	___flmul@grs,f
  5695  0BEA  0DB3               	rlf	___flmul@grs+1,f
  5696  0BEB  0DB4               	rlf	___flmul@grs+2,f
  5697  0BEC  0DB5               	rlf	___flmul@grs+3,f
  5698  0BED  0BAC               	decfsz	??___flmul,f
  5699  0BEE  2BE8               	goto	u4145
  5700  0BEF  0837               	movf	___flmul@bexp,w
  5701  0BF0  0736               	addwf	___flmul@aexp,w
  5702  0BF1  00AC               	movwf	??___flmul
  5703  0BF2  01AD               	clrf	??___flmul+1
  5704  0BF3  0DAD               	rlf	??___flmul+1,f
  5705  0BF4  082C               	movf	??___flmul,w
  5706  0BF5  3E82               	addlw	130
  5707  0BF6  00BC               	movwf	___flmul@temp
  5708  0BF7  082D               	movf	??___flmul+1,w
  5709  0BF8  1803               	skipnc
  5710  0BF9  3E01               	addlw	1
  5711  0BFA  3EFF               	addlw	255
  5712  0BFB  00BD               	movwf	___flmul@temp+1
  5713  0BFC                     l2879:	
  5714  0BFC  1BBA               	btfsc	___flmul@prod+2,7
  5715  0BFD  2C19               	goto	l2881
  5716  0BFE  3001               	movlw	1
  5717  0BFF  00AC               	movwf	??___flmul
  5718  0C00                     u4155:	
  5719  0C00  1003               	clrc
  5720  0C01  0DB8               	rlf	___flmul@prod,f
  5721  0C02  0DB9               	rlf	___flmul@prod+1,f
  5722  0C03  0DBA               	rlf	___flmul@prod+2,f
  5723  0C04  0DBB               	rlf	___flmul@prod+3,f
  5724  0C05  0BAC               	decfsz	??___flmul,f
  5725  0C06  2C00               	goto	u4155
  5726  0C07  1BB5               	btfsc	___flmul@grs+3,7
  5727  0C08  1438               	bsf	___flmul@prod,0
  5728  0C09  3001               	movlw	1
  5729  0C0A  00AC               	movwf	??___flmul
  5730  0C0B                     u4175:	
  5731  0C0B  1003               	clrc
  5732  0C0C  0DB2               	rlf	___flmul@grs,f
  5733  0C0D  0DB3               	rlf	___flmul@grs+1,f
  5734  0C0E  0DB4               	rlf	___flmul@grs+2,f
  5735  0C0F  0DB5               	rlf	___flmul@grs+3,f
  5736  0C10  0BAC               	decfsz	??___flmul,f
  5737  0C11  2C0B               	goto	u4175
  5738  0C12  30FF               	movlw	255
  5739  0C13  07BC               	addwf	___flmul@temp,f
  5740  0C14  1803               	skipnc
  5741  0C15  0ABD               	incf	___flmul@temp+1,f
  5742  0C16  30FF               	movlw	255
  5743  0C17  07BD               	addwf	___flmul@temp+1,f
  5744  0C18  2BFC               	goto	l2879
  5745  0C19                     l2881:	
  5746  0C19  01B6               	clrf	___flmul@aexp
  5747  0C1A  1FB5               	btfss	___flmul@grs+3,7
  5748  0C1B  2C32               	goto	l2891
  5749  0C1C  30FF               	movlw	255
  5750  0C1D  0532               	andwf	___flmul@grs,w
  5751  0C1E  00AC               	movwf	??___flmul
  5752  0C1F  30FF               	movlw	255
  5753  0C20  0533               	andwf	___flmul@grs+1,w
  5754  0C21  00AD               	movwf	??___flmul+1
  5755  0C22  30FF               	movlw	255
  5756  0C23  0534               	andwf	___flmul@grs+2,w
  5757  0C24  00AE               	movwf	??___flmul+2
  5758  0C25  307F               	movlw	127
  5759  0C26  0535               	andwf	___flmul@grs+3,w
  5760  0C27  00AF               	movwf	??___flmul+3
  5761  0C28  082F               	movf	??___flmul+3,w
  5762  0C29  042E               	iorwf	??___flmul+2,w
  5763  0C2A  042D               	iorwf	??___flmul+1,w
  5764  0C2B  042C               	iorwf	??___flmul,w
  5765  0C2C  1903               	skipnz
  5766  0C2D  1838               	btfsc	___flmul@prod,0
  5767  0C2E  2C30               	goto	l2887
  5768  0C2F  2C32               	goto	l2891
  5769  0C30                     l2887:	
  5770  0C30  01B6               	clrf	___flmul@aexp
  5771  0C31  0AB6               	incf	___flmul@aexp,f
  5772  0C32                     l2891:	
  5773  0C32  0836               	movf	___flmul@aexp,w
  5774  0C33  1903               	btfsc	3,2
  5775  0C34  2C64               	goto	l2901
  5776  0C35  3001               	movlw	1
  5777  0C36  07B8               	addwf	___flmul@prod,f
  5778  0C37  3000               	movlw	0
  5779  0C38  1803               	skipnc
  5780  0C39  3001               	movlw	1
  5781  0C3A  07B9               	addwf	___flmul@prod+1,f
  5782  0C3B  3000               	movlw	0
  5783  0C3C  1803               	skipnc
  5784  0C3D  3001               	movlw	1
  5785  0C3E  07BA               	addwf	___flmul@prod+2,f
  5786  0C3F  3000               	movlw	0
  5787  0C40  1803               	skipnc
  5788  0C41  3001               	movlw	1
  5789  0C42  07BB               	addwf	___flmul@prod+3,f
  5790  0C43  1C3B               	btfss	___flmul@prod+3,0
  5791  0C44  2C64               	goto	l2901
  5792  0C45  0838               	movf	___flmul@prod,w
  5793  0C46  00AC               	movwf	??___flmul
  5794  0C47  0839               	movf	___flmul@prod+1,w
  5795  0C48  00AD               	movwf	??___flmul+1
  5796  0C49  083A               	movf	___flmul@prod+2,w
  5797  0C4A  00AE               	movwf	??___flmul+2
  5798  0C4B  083B               	movf	___flmul@prod+3,w
  5799  0C4C  00AF               	movwf	??___flmul+3
  5800  0C4D  3001               	movlw	1
  5801  0C4E  00B0               	movwf	??___flmul+4
  5802  0C4F                     u4245:	
  5803  0C4F  0D2F               	rlf	??___flmul+3,w
  5804  0C50  0CAF               	rrf	??___flmul+3,f
  5805  0C51  0CAE               	rrf	??___flmul+2,f
  5806  0C52  0CAD               	rrf	??___flmul+1,f
  5807  0C53  0CAC               	rrf	??___flmul,f
  5808  0C54  0BB0               	decfsz	??___flmul+4,f
  5809  0C55  2C4F               	goto	u4245
  5810  0C56  082F               	movf	??___flmul+3,w
  5811  0C57  00BB               	movwf	___flmul@prod+3
  5812  0C58  082E               	movf	??___flmul+2,w
  5813  0C59  00BA               	movwf	___flmul@prod+2
  5814  0C5A  082D               	movf	??___flmul+1,w
  5815  0C5B  00B9               	movwf	___flmul@prod+1
  5816  0C5C  082C               	movf	??___flmul,w
  5817  0C5D  00B8               	movwf	___flmul@prod
  5818  0C5E  3001               	movlw	1
  5819  0C5F  07BC               	addwf	___flmul@temp,f
  5820  0C60  1803               	skipnc
  5821  0C61  0ABD               	incf	___flmul@temp+1,f
  5822  0C62  3000               	movlw	0
  5823  0C63  07BD               	addwf	___flmul@temp+1,f
  5824  0C64                     l2901:	
  5825  0C64  083D               	movf	___flmul@temp+1,w
  5826  0C65  3A80               	xorlw	128
  5827  0C66  00FF               	movwf	127
  5828  0C67  3080               	movlw	128
  5829  0C68  027F               	subwf	127,w
  5830  0C69  1D03               	skipz
  5831  0C6A  2C6D               	goto	u4255
  5832  0C6B  30FF               	movlw	255
  5833  0C6C  023C               	subwf	___flmul@temp,w
  5834  0C6D                     u4255:	
  5835  0C6D  1C03               	skipc
  5836  0C6E  2C7A               	goto	l2905
  5837  0C6F  307F               	movlw	127
  5838  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5839  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5840  0C72  00BB               	movwf	___flmul@prod+3
  5841  0C73  3080               	movlw	128
  5842  0C74  00BA               	movwf	___flmul@prod+2
  5843  0C75  3000               	movlw	0
  5844  0C76  00B9               	movwf	___flmul@prod+1
  5845  0C77  3000               	movlw	0
  5846  0C78  00B8               	movwf	___flmul@prod
  5847  0C79  2CAA               	goto	l767
  5848  0C7A                     l2905:	
  5849  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5850  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5851  0C7C  083D               	movf	___flmul@temp+1,w
  5852  0C7D  3A80               	xorlw	128
  5853  0C7E  00FF               	movwf	127
  5854  0C7F  3080               	movlw	128
  5855  0C80  027F               	subwf	127,w
  5856  0C81  1D03               	skipz
  5857  0C82  2C85               	goto	u4265
  5858  0C83  3001               	movlw	1
  5859  0C84  023C               	subwf	___flmul@temp,w
  5860  0C85                     u4265:	
  5861  0C85  1803               	skipnc
  5862  0C86  2C93               	goto	l2911
  5863  0C87  3000               	movlw	0
  5864  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5865  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5866  0C8A  00BB               	movwf	___flmul@prod+3
  5867  0C8B  3000               	movlw	0
  5868  0C8C  00BA               	movwf	___flmul@prod+2
  5869  0C8D  3000               	movlw	0
  5870  0C8E  00B9               	movwf	___flmul@prod+1
  5871  0C8F  3000               	movlw	0
  5872  0C90  00B8               	movwf	___flmul@prod
  5873  0C91  01B1               	clrf	___flmul@sign
  5874  0C92  2CAA               	goto	l767
  5875  0C93                     l2911:	
  5876  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5877  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5878  0C95  083C               	movf	___flmul@temp,w
  5879  0C96  00AC               	movwf	??___flmul
  5880  0C97  082C               	movf	??___flmul,w
  5881  0C98  00B7               	movwf	___flmul@bexp
  5882  0C99  30FF               	movlw	255
  5883  0C9A  05B8               	andwf	___flmul@prod,f
  5884  0C9B  30FF               	movlw	255
  5885  0C9C  05B9               	andwf	___flmul@prod+1,f
  5886  0C9D  307F               	movlw	127
  5887  0C9E  05BA               	andwf	___flmul@prod+2,f
  5888  0C9F  3000               	movlw	0
  5889  0CA0  05BB               	andwf	___flmul@prod+3,f
  5890  0CA1  1837               	btfsc	___flmul@bexp,0
  5891  0CA2  17BA               	bsf	___flmul@prod+2,7
  5892  0CA3  0837               	movf	___flmul@bexp,w
  5893  0CA4  00AC               	movwf	??___flmul
  5894  0CA5  1003               	clrc
  5895  0CA6  0C2C               	rrf	??___flmul,w
  5896  0CA7  00AD               	movwf	??___flmul+1
  5897  0CA8  082D               	movf	??___flmul+1,w
  5898  0CA9  00BB               	movwf	___flmul@prod+3
  5899  0CAA                     l767:	
  5900  0CAA  0831               	movf	___flmul@sign,w
  5901  0CAB  00AC               	movwf	??___flmul
  5902  0CAC  082C               	movf	??___flmul,w
  5903  0CAD  04BB               	iorwf	___flmul@prod+3,f
  5904  0CAE  083B               	movf	___flmul@prod+3,w
  5905  0CAF  00A7               	movwf	?___flmul+3
  5906  0CB0  083A               	movf	___flmul@prod+2,w
  5907  0CB1  00A6               	movwf	?___flmul+2
  5908  0CB2  0839               	movf	___flmul@prod+1,w
  5909  0CB3  00A5               	movwf	?___flmul+1
  5910  0CB4  0838               	movf	___flmul@prod,w
  5911  0CB5  00A4               	movwf	?___flmul
  5912  0CB6  0008               	return
  5913  0CB7                     __end_of___flmul:	
  5914                           
  5915                           	psect	text10
  5916  1ADA                     __ptext10:	
  5917 ;; *************** function __Umul8_16 *****************
  5918 ;; Defined at:
  5919 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  multiplier      1    wreg     unsigned char 
  5922 ;;  multiplicand    1    0[COMMON] unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  multiplier      1    8[COMMON] unsigned char 
  5925 ;;  word_mpld       2    6[COMMON] unsigned int 
  5926 ;;  product         2    4[COMMON] unsigned int 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  2    0[COMMON] unsigned int 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5936 ;;      Params:         2       0       0       0       0
  5937 ;;      Locals:         5       0       0       0       0
  5938 ;;      Temps:          2       0       0       0       0
  5939 ;;      Totals:         9       0       0       0       0
  5940 ;;Total ram usage:        9 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		___flmul
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           
  5950                           ;psect for function __Umul8_16
  5951  1ADA                     __Umul8_16:	
  5952                           
  5953                           ;incstack = 0
  5954                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5955                           ;__Umul8_16@multiplier stored from wreg
  5956  1ADA  00F8               	movwf	__Umul8_16@multiplier
  5957  1ADB  01F4               	clrf	__Umul8_16@product
  5958  1ADC  01F5               	clrf	__Umul8_16@product+1
  5959  1ADD  0870               	movf	__Umul8_16@multiplicand,w
  5960  1ADE  00F2               	movwf	??__Umul8_16
  5961  1ADF  01F3               	clrf	??__Umul8_16+1
  5962  1AE0  0872               	movf	??__Umul8_16,w
  5963  1AE1  00F6               	movwf	__Umul8_16@word_mpld
  5964  1AE2  0873               	movf	??__Umul8_16+1,w
  5965  1AE3  00F7               	movwf	__Umul8_16@word_mpld+1
  5966  1AE4                     l2399:	
  5967  1AE4  1C78               	btfss	__Umul8_16@multiplier,0
  5968  1AE5  2AEC               	goto	l821
  5969  1AE6  0876               	movf	__Umul8_16@word_mpld,w
  5970  1AE7  07F4               	addwf	__Umul8_16@product,f
  5971  1AE8  1803               	skipnc
  5972  1AE9  0AF5               	incf	__Umul8_16@product+1,f
  5973  1AEA  0877               	movf	__Umul8_16@word_mpld+1,w
  5974  1AEB  07F5               	addwf	__Umul8_16@product+1,f
  5975  1AEC                     l821:	
  5976  1AEC  3001               	movlw	1
  5977  1AED                     u3035:	
  5978  1AED  1003               	clrc
  5979  1AEE  0DF6               	rlf	__Umul8_16@word_mpld,f
  5980  1AEF  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5981  1AF0  3EFF               	addlw	-1
  5982  1AF1  1D03               	skipz
  5983  1AF2  2AED               	goto	u3035
  5984  1AF3  1003               	clrc
  5985  1AF4  0CF8               	rrf	__Umul8_16@multiplier,f
  5986  1AF5  0878               	movf	__Umul8_16@multiplier,w
  5987  1AF6  1D03               	btfss	3,2
  5988  1AF7  2AE4               	goto	l2399
  5989  1AF8  0875               	movf	__Umul8_16@product+1,w
  5990  1AF9  00F1               	movwf	?__Umul8_16+1
  5991  1AFA  0874               	movf	__Umul8_16@product,w
  5992  1AFB  00F0               	movwf	?__Umul8_16
  5993  1AFC  0008               	return
  5994  1AFD                     __end_of__Umul8_16:	
  5995                           
  5996                           	psect	text11
  5997  10DA                     __ptext11:	
  5998 ;; *************** function __tdiv_to_l_ *****************
  5999 ;; Defined at:
  6000 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  f1              4    0[COMMON] float 
  6003 ;;  f2              4    4[COMMON] float 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  quot            4    0[BANK0 ] unsigned long 
  6006 ;;  exp1            1    5[BANK0 ] unsigned char 
  6007 ;;  cntr            1    4[BANK0 ] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  4    0[COMMON] unsigned long 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6017 ;;      Params:         8       0       0       0       0
  6018 ;;      Locals:         0       6       0       0       0
  6019 ;;      Temps:          4       0       0       0       0
  6020 ;;      Totals:        12       6       0       0       0
  6021 ;;Total ram usage:       18 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_sprintf
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           
  6031                           ;psect for function __tdiv_to_l_
  6032  10DA                     __tdiv_to_l_:	
  6033                           
  6034                           ;incstack = 0
  6035                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6036  10DA  0870               	movf	__tdiv_to_l_@f1,w
  6037  10DB  00F8               	movwf	??__tdiv_to_l_
  6038  10DC  0871               	movf	__tdiv_to_l_@f1+1,w
  6039  10DD  00F9               	movwf	??__tdiv_to_l_+1
  6040  10DE  0872               	movf	__tdiv_to_l_@f1+2,w
  6041  10DF  00FA               	movwf	??__tdiv_to_l_+2
  6042  10E0  1003               	clrc
  6043  10E1  0D79               	rlf	??__tdiv_to_l_+1,w
  6044  10E2  0D7A               	rlf	??__tdiv_to_l_+2,w
  6045  10E3  00FB               	movwf	??__tdiv_to_l_+3
  6046  10E4  087B               	movf	??__tdiv_to_l_+3,w
  6047  10E5  1283               	bcf	3,5	;RP0=0, select bank0
  6048  10E6  1303               	bcf	3,6	;RP1=0, select bank0
  6049  10E7  00A5               	movwf	__tdiv_to_l_@exp1
  6050  10E8  0825               	movf	__tdiv_to_l_@exp1,w
  6051  10E9  1D03               	btfss	3,2
  6052  10EA  28F4               	goto	l3107
  6053  10EB                     l3103:	
  6054  10EB  3000               	movlw	0
  6055  10EC  00F3               	movwf	?__tdiv_to_l_+3
  6056  10ED  3000               	movlw	0
  6057  10EE  00F2               	movwf	?__tdiv_to_l_+2
  6058  10EF  3000               	movlw	0
  6059  10F0  00F1               	movwf	?__tdiv_to_l_+1
  6060  10F1  3000               	movlw	0
  6061  10F2  00F0               	movwf	?__tdiv_to_l_
  6062  10F3  0008               	return
  6063  10F4                     l3107:	
  6064  10F4  0874               	movf	__tdiv_to_l_@f2,w
  6065  10F5  00F8               	movwf	??__tdiv_to_l_
  6066  10F6  0875               	movf	__tdiv_to_l_@f2+1,w
  6067  10F7  00F9               	movwf	??__tdiv_to_l_+1
  6068  10F8  0876               	movf	__tdiv_to_l_@f2+2,w
  6069  10F9  00FA               	movwf	??__tdiv_to_l_+2
  6070  10FA  1003               	clrc
  6071  10FB  0D79               	rlf	??__tdiv_to_l_+1,w
  6072  10FC  0D7A               	rlf	??__tdiv_to_l_+2,w
  6073  10FD  00FB               	movwf	??__tdiv_to_l_+3
  6074  10FE  087B               	movf	??__tdiv_to_l_+3,w
  6075  10FF  00A4               	movwf	__tdiv_to_l_@cntr
  6076  1100  0824               	movf	__tdiv_to_l_@cntr,w
  6077  1101  1903               	btfsc	3,2
  6078  1102  28EB               	goto	l3103
  6079  1103  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6080  1104  30FF               	movlw	255
  6081  1105  05F0               	andwf	__tdiv_to_l_@f1,f
  6082  1106  30FF               	movlw	255
  6083  1107  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6084  1108  3000               	movlw	0
  6085  1109  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6086  110A  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6087  110B  30FF               	movlw	255
  6088  110C  05F4               	andwf	__tdiv_to_l_@f2,f
  6089  110D  30FF               	movlw	255
  6090  110E  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6091  110F  3000               	movlw	0
  6092  1110  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6093  1111  3000               	movlw	0
  6094  1112  00A3               	movwf	__tdiv_to_l_@quot+3
  6095  1113  3000               	movlw	0
  6096  1114  00A2               	movwf	__tdiv_to_l_@quot+2
  6097  1115  3000               	movlw	0
  6098  1116  00A1               	movwf	__tdiv_to_l_@quot+1
  6099  1117  3000               	movlw	0
  6100  1118  00A0               	movwf	__tdiv_to_l_@quot
  6101  1119  307F               	movlw	127
  6102  111A  02A5               	subwf	__tdiv_to_l_@exp1,f
  6103  111B  3098               	movlw	152
  6104  111C  0724               	addwf	__tdiv_to_l_@cntr,w
  6105  111D  00F8               	movwf	??__tdiv_to_l_
  6106  111E  0878               	movf	??__tdiv_to_l_,w
  6107  111F  02A5               	subwf	__tdiv_to_l_@exp1,f
  6108  1120  3018               	movlw	24
  6109  1121  00F8               	movwf	??__tdiv_to_l_
  6110  1122  0878               	movf	??__tdiv_to_l_,w
  6111  1123  00A4               	movwf	__tdiv_to_l_@cntr
  6112  1124                     l3121:	
  6113  1124  3001               	movlw	1
  6114  1125  00F8               	movwf	??__tdiv_to_l_
  6115  1126                     u4585:	
  6116  1126  1003               	clrc
  6117  1127  0DA0               	rlf	__tdiv_to_l_@quot,f
  6118  1128  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6119  1129  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6120  112A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6121  112B  0BF8               	decfsz	??__tdiv_to_l_,f
  6122  112C  2926               	goto	u4585
  6123  112D  0876               	movf	__tdiv_to_l_@f2+2,w
  6124  112E  0272               	subwf	__tdiv_to_l_@f1+2,w
  6125  112F  1D03               	skipz
  6126  1130  2937               	goto	u4595
  6127  1131  0875               	movf	__tdiv_to_l_@f2+1,w
  6128  1132  0271               	subwf	__tdiv_to_l_@f1+1,w
  6129  1133  1D03               	skipz
  6130  1134  2937               	goto	u4595
  6131  1135  0874               	movf	__tdiv_to_l_@f2,w
  6132  1136  0270               	subwf	__tdiv_to_l_@f1,w
  6133  1137                     u4595:	
  6134  1137  1C03               	skipc
  6135  1138  2944               	goto	l3129
  6136  1139  0874               	movf	__tdiv_to_l_@f2,w
  6137  113A  02F0               	subwf	__tdiv_to_l_@f1,f
  6138  113B  0875               	movf	__tdiv_to_l_@f2+1,w
  6139  113C  1C03               	skipc
  6140  113D  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6141  113E  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6142  113F  0876               	movf	__tdiv_to_l_@f2+2,w
  6143  1140  1C03               	skipc
  6144  1141  0A76               	incf	__tdiv_to_l_@f2+2,w
  6145  1142  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6146  1143  1420               	bsf	__tdiv_to_l_@quot,0
  6147  1144                     l3129:	
  6148  1144  3001               	movlw	1
  6149  1145                     u4605:	
  6150  1145  1003               	clrc
  6151  1146  0DF0               	rlf	__tdiv_to_l_@f1,f
  6152  1147  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6153  1148  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6154  1149  3EFF               	addlw	-1
  6155  114A  1D03               	skipz
  6156  114B  2945               	goto	u4605
  6157  114C  3001               	movlw	1
  6158  114D  02A4               	subwf	__tdiv_to_l_@cntr,f
  6159  114E  1D03               	btfss	3,2
  6160  114F  2924               	goto	l3121
  6161  1150  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6162  1151  2967               	goto	l3141
  6163  1152  0825               	movf	__tdiv_to_l_@exp1,w
  6164  1153  3A80               	xorlw	128
  6165  1154  3E97               	addlw	151
  6166  1155  1C03               	btfss	3,0
  6167  1156  28EB               	goto	l3103
  6168  1157                     l3139:	
  6169  1157  3001               	movlw	1
  6170  1158                     u4645:	
  6171  1158  1003               	clrc
  6172  1159  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6173  115A  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6174  115B  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6175  115C  0CA0               	rrf	__tdiv_to_l_@quot,f
  6176  115D  3EFF               	addlw	-1
  6177  115E  1D03               	skipz
  6178  115F  2958               	goto	u4645
  6179  1160  3001               	movlw	1
  6180  1161  00F8               	movwf	??__tdiv_to_l_
  6181  1162  0878               	movf	??__tdiv_to_l_,w
  6182  1163  07A5               	addwf	__tdiv_to_l_@exp1,f
  6183  1164  1903               	btfsc	3,2
  6184  1165  297A               	goto	l3149
  6185  1166  2957               	goto	l3139
  6186  1167                     l3141:	
  6187  1167  3018               	movlw	24
  6188  1168  0225               	subwf	__tdiv_to_l_@exp1,w
  6189  1169  1803               	btfsc	3,0
  6190  116A  28EB               	goto	l3103
  6191  116B                     l560:	
  6192  116B  0825               	movf	__tdiv_to_l_@exp1,w
  6193  116C  1903               	btfsc	3,2
  6194  116D  297A               	goto	l3149
  6195  116E  3001               	movlw	1
  6196  116F  00F8               	movwf	??__tdiv_to_l_
  6197  1170                     u4675:	
  6198  1170  1003               	clrc
  6199  1171  0DA0               	rlf	__tdiv_to_l_@quot,f
  6200  1172  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6201  1173  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6202  1174  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6203  1175  0BF8               	decfsz	??__tdiv_to_l_,f
  6204  1176  2970               	goto	u4675
  6205  1177  3001               	movlw	1
  6206  1178  02A5               	subwf	__tdiv_to_l_@exp1,f
  6207  1179  296B               	goto	l560
  6208  117A                     l3149:	
  6209  117A  0823               	movf	__tdiv_to_l_@quot+3,w
  6210  117B  00F3               	movwf	?__tdiv_to_l_+3
  6211  117C  0822               	movf	__tdiv_to_l_@quot+2,w
  6212  117D  00F2               	movwf	?__tdiv_to_l_+2
  6213  117E  0821               	movf	__tdiv_to_l_@quot+1,w
  6214  117F  00F1               	movwf	?__tdiv_to_l_+1
  6215  1180  0820               	movf	__tdiv_to_l_@quot,w
  6216  1181  00F0               	movwf	?__tdiv_to_l_
  6217  1182  0008               	return
  6218  1183                     __end_of__tdiv_to_l_:	
  6219                           
  6220                           	psect	text12
  6221  1183                     __ptext12:	
  6222 ;; *************** function __div_to_l_ *****************
  6223 ;; Defined at:
  6224 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  f1              4    0[COMMON] unsigned long 
  6227 ;;  f2              4    4[COMMON] unsigned long 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  quot            4    0[BANK0 ] unsigned long 
  6230 ;;  exp1            1    5[BANK0 ] unsigned char 
  6231 ;;  cntr            1    4[BANK0 ] unsigned char 
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  4    0[COMMON] unsigned long 
  6234 ;; Registers used:
  6235 ;;		wreg, status,2, status,0
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6241 ;;      Params:         8       0       0       0       0
  6242 ;;      Locals:         0       6       0       0       0
  6243 ;;      Temps:          1       0       0       0       0
  6244 ;;      Totals:         9       6       0       0       0
  6245 ;;Total ram usage:       15 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_sprintf
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           
  6255                           ;psect for function __div_to_l_
  6256  1183                     __div_to_l_:	
  6257                           
  6258                           ;incstack = 0
  6259                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6260  1183  1003               	clrc
  6261  1184  0D72               	rlf	__div_to_l_@f1+2,w
  6262  1185  0D73               	rlf	__div_to_l_@f1+3,w
  6263  1186  00F8               	movwf	??__div_to_l_
  6264  1187  0878               	movf	??__div_to_l_,w
  6265  1188  1283               	bcf	3,5	;RP0=0, select bank0
  6266  1189  1303               	bcf	3,6	;RP1=0, select bank0
  6267  118A  00A5               	movwf	__div_to_l_@exp1
  6268  118B  0825               	movf	__div_to_l_@exp1,w
  6269  118C  1D03               	btfss	3,2
  6270  118D  2997               	goto	l3159
  6271  118E                     l3155:	
  6272  118E  3000               	movlw	0
  6273  118F  00F3               	movwf	?__div_to_l_+3
  6274  1190  3000               	movlw	0
  6275  1191  00F2               	movwf	?__div_to_l_+2
  6276  1192  3000               	movlw	0
  6277  1193  00F1               	movwf	?__div_to_l_+1
  6278  1194  3000               	movlw	0
  6279  1195  00F0               	movwf	?__div_to_l_
  6280  1196  0008               	return
  6281  1197                     l3159:	
  6282  1197  1003               	clrc
  6283  1198  0D76               	rlf	__div_to_l_@f2+2,w
  6284  1199  0D77               	rlf	__div_to_l_@f2+3,w
  6285  119A  00F8               	movwf	??__div_to_l_
  6286  119B  0878               	movf	??__div_to_l_,w
  6287  119C  00A4               	movwf	__div_to_l_@cntr
  6288  119D  0824               	movf	__div_to_l_@cntr,w
  6289  119E  1903               	btfsc	3,2
  6290  119F  298E               	goto	l3155
  6291  11A0  17F2               	bsf	__div_to_l_@f1+2,7
  6292  11A1  30FF               	movlw	255
  6293  11A2  05F0               	andwf	__div_to_l_@f1,f
  6294  11A3  30FF               	movlw	255
  6295  11A4  05F1               	andwf	__div_to_l_@f1+1,f
  6296  11A5  30FF               	movlw	255
  6297  11A6  05F2               	andwf	__div_to_l_@f1+2,f
  6298  11A7  3000               	movlw	0
  6299  11A8  05F3               	andwf	__div_to_l_@f1+3,f
  6300  11A9  17F6               	bsf	__div_to_l_@f2+2,7
  6301  11AA  30FF               	movlw	255
  6302  11AB  05F4               	andwf	__div_to_l_@f2,f
  6303  11AC  30FF               	movlw	255
  6304  11AD  05F5               	andwf	__div_to_l_@f2+1,f
  6305  11AE  30FF               	movlw	255
  6306  11AF  05F6               	andwf	__div_to_l_@f2+2,f
  6307  11B0  3000               	movlw	0
  6308  11B1  05F7               	andwf	__div_to_l_@f2+3,f
  6309  11B2  3000               	movlw	0
  6310  11B3  00A3               	movwf	__div_to_l_@quot+3
  6311  11B4  3000               	movlw	0
  6312  11B5  00A2               	movwf	__div_to_l_@quot+2
  6313  11B6  3000               	movlw	0
  6314  11B7  00A1               	movwf	__div_to_l_@quot+1
  6315  11B8  3000               	movlw	0
  6316  11B9  00A0               	movwf	__div_to_l_@quot
  6317  11BA  307F               	movlw	127
  6318  11BB  02A5               	subwf	__div_to_l_@exp1,f
  6319  11BC  30A0               	movlw	160
  6320  11BD  0724               	addwf	__div_to_l_@cntr,w
  6321  11BE  00F8               	movwf	??__div_to_l_
  6322  11BF  0878               	movf	??__div_to_l_,w
  6323  11C0  02A5               	subwf	__div_to_l_@exp1,f
  6324  11C1  3020               	movlw	32
  6325  11C2  00F8               	movwf	??__div_to_l_
  6326  11C3  0878               	movf	??__div_to_l_,w
  6327  11C4  00A4               	movwf	__div_to_l_@cntr
  6328  11C5                     l3173:	
  6329  11C5  3001               	movlw	1
  6330  11C6  00F8               	movwf	??__div_to_l_
  6331  11C7                     u4715:	
  6332  11C7  1003               	clrc
  6333  11C8  0DA0               	rlf	__div_to_l_@quot,f
  6334  11C9  0DA1               	rlf	__div_to_l_@quot+1,f
  6335  11CA  0DA2               	rlf	__div_to_l_@quot+2,f
  6336  11CB  0DA3               	rlf	__div_to_l_@quot+3,f
  6337  11CC  0BF8               	decfsz	??__div_to_l_,f
  6338  11CD  29C7               	goto	u4715
  6339  11CE  0877               	movf	__div_to_l_@f2+3,w
  6340  11CF  0273               	subwf	__div_to_l_@f1+3,w
  6341  11D0  1D03               	skipz
  6342  11D1  29DC               	goto	u4725
  6343  11D2  0876               	movf	__div_to_l_@f2+2,w
  6344  11D3  0272               	subwf	__div_to_l_@f1+2,w
  6345  11D4  1D03               	skipz
  6346  11D5  29DC               	goto	u4725
  6347  11D6  0875               	movf	__div_to_l_@f2+1,w
  6348  11D7  0271               	subwf	__div_to_l_@f1+1,w
  6349  11D8  1D03               	skipz
  6350  11D9  29DC               	goto	u4725
  6351  11DA  0874               	movf	__div_to_l_@f2,w
  6352  11DB  0270               	subwf	__div_to_l_@f1,w
  6353  11DC                     u4725:	
  6354  11DC  1C03               	skipc
  6355  11DD  29ED               	goto	l3181
  6356  11DE  0874               	movf	__div_to_l_@f2,w
  6357  11DF  02F0               	subwf	__div_to_l_@f1,f
  6358  11E0  0875               	movf	__div_to_l_@f2+1,w
  6359  11E1  1C03               	skipc
  6360  11E2  0F75               	incfsz	__div_to_l_@f2+1,w
  6361  11E3  02F1               	subwf	__div_to_l_@f1+1,f
  6362  11E4  0876               	movf	__div_to_l_@f2+2,w
  6363  11E5  1C03               	skipc
  6364  11E6  0F76               	incfsz	__div_to_l_@f2+2,w
  6365  11E7  02F2               	subwf	__div_to_l_@f1+2,f
  6366  11E8  0877               	movf	__div_to_l_@f2+3,w
  6367  11E9  1C03               	skipc
  6368  11EA  0F77               	incfsz	__div_to_l_@f2+3,w
  6369  11EB  02F3               	subwf	__div_to_l_@f1+3,f
  6370  11EC  1420               	bsf	__div_to_l_@quot,0
  6371  11ED                     l3181:	
  6372  11ED  3001               	movlw	1
  6373  11EE  00F8               	movwf	??__div_to_l_
  6374  11EF                     u4735:	
  6375  11EF  1003               	clrc
  6376  11F0  0DF0               	rlf	__div_to_l_@f1,f
  6377  11F1  0DF1               	rlf	__div_to_l_@f1+1,f
  6378  11F2  0DF2               	rlf	__div_to_l_@f1+2,f
  6379  11F3  0DF3               	rlf	__div_to_l_@f1+3,f
  6380  11F4  0BF8               	decfsz	??__div_to_l_,f
  6381  11F5  29EF               	goto	u4735
  6382  11F6  3001               	movlw	1
  6383  11F7  02A4               	subwf	__div_to_l_@cntr,f
  6384  11F8  1D03               	btfss	3,2
  6385  11F9  29C5               	goto	l3173
  6386  11FA  1FA5               	btfss	__div_to_l_@exp1,7
  6387  11FB  2A11               	goto	l3193
  6388  11FC  0825               	movf	__div_to_l_@exp1,w
  6389  11FD  3A80               	xorlw	128
  6390  11FE  3E9F               	addlw	159
  6391  11FF  1C03               	btfss	3,0
  6392  1200  298E               	goto	l3155
  6393  1201                     l3191:	
  6394  1201  3001               	movlw	1
  6395  1202                     u4775:	
  6396  1202  1003               	clrc
  6397  1203  0CA3               	rrf	__div_to_l_@quot+3,f
  6398  1204  0CA2               	rrf	__div_to_l_@quot+2,f
  6399  1205  0CA1               	rrf	__div_to_l_@quot+1,f
  6400  1206  0CA0               	rrf	__div_to_l_@quot,f
  6401  1207  3EFF               	addlw	-1
  6402  1208  1D03               	skipz
  6403  1209  2A02               	goto	u4775
  6404  120A  3001               	movlw	1
  6405  120B  00F8               	movwf	??__div_to_l_
  6406  120C  0878               	movf	??__div_to_l_,w
  6407  120D  07A5               	addwf	__div_to_l_@exp1,f
  6408  120E  1903               	btfsc	3,2
  6409  120F  2A24               	goto	l3201
  6410  1210  2A01               	goto	l3191
  6411  1211                     l3193:	
  6412  1211  3020               	movlw	32
  6413  1212  0225               	subwf	__div_to_l_@exp1,w
  6414  1213  1803               	btfsc	3,0
  6415  1214  298E               	goto	l3155
  6416  1215                     l513:	
  6417  1215  0825               	movf	__div_to_l_@exp1,w
  6418  1216  1903               	btfsc	3,2
  6419  1217  2A24               	goto	l3201
  6420  1218  3001               	movlw	1
  6421  1219  00F8               	movwf	??__div_to_l_
  6422  121A                     u4805:	
  6423  121A  1003               	clrc
  6424  121B  0DA0               	rlf	__div_to_l_@quot,f
  6425  121C  0DA1               	rlf	__div_to_l_@quot+1,f
  6426  121D  0DA2               	rlf	__div_to_l_@quot+2,f
  6427  121E  0DA3               	rlf	__div_to_l_@quot+3,f
  6428  121F  0BF8               	decfsz	??__div_to_l_,f
  6429  1220  2A1A               	goto	u4805
  6430  1221  3001               	movlw	1
  6431  1222  02A5               	subwf	__div_to_l_@exp1,f
  6432  1223  2A15               	goto	l513
  6433  1224                     l3201:	
  6434  1224  0823               	movf	__div_to_l_@quot+3,w
  6435  1225  00F3               	movwf	?__div_to_l_+3
  6436  1226  0822               	movf	__div_to_l_@quot+2,w
  6437  1227  00F2               	movwf	?__div_to_l_+2
  6438  1228  0821               	movf	__div_to_l_@quot+1,w
  6439  1229  00F1               	movwf	?__div_to_l_+1
  6440  122A  0820               	movf	__div_to_l_@quot,w
  6441  122B  00F0               	movwf	?__div_to_l_
  6442  122C  0008               	return
  6443  122D                     __end_of__div_to_l_:	
  6444                           
  6445                           	psect	text13
  6446  1F5D                     __ptext13:	
  6447 ;; *************** function ___xxtofl *****************
  6448 ;; Defined at:
  6449 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  sign            1    wreg     unsigned char 
  6452 ;;  val             4    0[COMMON] long 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  sign            1    8[COMMON] unsigned char 
  6455 ;;  arg             4   10[COMMON] unsigned long 
  6456 ;;  exp             1    9[COMMON] unsigned char 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  4    0[COMMON] unsigned char 
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6466 ;;      Params:         4       0       0       0       0
  6467 ;;      Locals:         6       0       0       0       0
  6468 ;;      Temps:          4       0       0       0       0
  6469 ;;      Totals:        14       0       0       0       0
  6470 ;;Total ram usage:       14 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; This function calls:
  6473 ;;		Nothing
  6474 ;; This function is called by:
  6475 ;;		_main
  6476 ;;		_sprintf
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           
  6481                           ;psect for function ___xxtofl
  6482  1F5D                     ___xxtofl:	
  6483                           
  6484                           ;incstack = 0
  6485                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6486                           ;___xxtofl@sign stored from wreg
  6487  1F5D  00F8               	movwf	___xxtofl@sign
  6488  1F5E  0878               	movf	___xxtofl@sign,w
  6489  1F5F  1D03               	btfss	3,2
  6490  1F60  1FF3               	btfss	___xxtofl@val+3,7
  6491  1F61  2F72               	goto	l3327
  6492  1F62  0970               	comf	___xxtofl@val,w
  6493  1F63  00FA               	movwf	___xxtofl@arg
  6494  1F64  0971               	comf	___xxtofl@val+1,w
  6495  1F65  00FB               	movwf	___xxtofl@arg+1
  6496  1F66  0972               	comf	___xxtofl@val+2,w
  6497  1F67  00FC               	movwf	___xxtofl@arg+2
  6498  1F68  0973               	comf	___xxtofl@val+3,w
  6499  1F69  00FD               	movwf	___xxtofl@arg+3
  6500  1F6A  0AFA               	incf	___xxtofl@arg,f
  6501  1F6B  1903               	skipnz
  6502  1F6C  0AFB               	incf	___xxtofl@arg+1,f
  6503  1F6D  1903               	skipnz
  6504  1F6E  0AFC               	incf	___xxtofl@arg+2,f
  6505  1F6F  1903               	skipnz
  6506  1F70  0AFD               	incf	___xxtofl@arg+3,f
  6507  1F71  2F7A               	goto	l793
  6508  1F72                     l3327:	
  6509  1F72  0873               	movf	___xxtofl@val+3,w
  6510  1F73  00FD               	movwf	___xxtofl@arg+3
  6511  1F74  0872               	movf	___xxtofl@val+2,w
  6512  1F75  00FC               	movwf	___xxtofl@arg+2
  6513  1F76  0871               	movf	___xxtofl@val+1,w
  6514  1F77  00FB               	movwf	___xxtofl@arg+1
  6515  1F78  0870               	movf	___xxtofl@val,w
  6516  1F79  00FA               	movwf	___xxtofl@arg
  6517  1F7A                     l793:	
  6518  1F7A  0873               	movf	___xxtofl@val+3,w
  6519  1F7B  0472               	iorwf	___xxtofl@val+2,w
  6520  1F7C  0471               	iorwf	___xxtofl@val+1,w
  6521  1F7D  0470               	iorwf	___xxtofl@val,w
  6522  1F7E  1D03               	skipz
  6523  1F7F  2F89               	goto	l3333
  6524  1F80  3000               	movlw	0
  6525  1F81  00F3               	movwf	?___xxtofl+3
  6526  1F82  3000               	movlw	0
  6527  1F83  00F2               	movwf	?___xxtofl+2
  6528  1F84  3000               	movlw	0
  6529  1F85  00F1               	movwf	?___xxtofl+1
  6530  1F86  3000               	movlw	0
  6531  1F87  00F0               	movwf	?___xxtofl
  6532  1F88  0008               	return
  6533  1F89                     l3333:	
  6534  1F89  3096               	movlw	150
  6535  1F8A  00F4               	movwf	??___xxtofl
  6536  1F8B  0874               	movf	??___xxtofl,w
  6537  1F8C  00F9               	movwf	___xxtofl@exp
  6538  1F8D                     l3337:	
  6539  1F8D  30FE               	movlw	254
  6540  1F8E  057D               	andwf	___xxtofl@arg+3,w
  6541  1F8F  1903               	btfsc	3,2
  6542  1F90  2FBA               	goto	l799
  6543  1F91  3001               	movlw	1
  6544  1F92  00F4               	movwf	??___xxtofl
  6545  1F93  0874               	movf	??___xxtofl,w
  6546  1F94  07F9               	addwf	___xxtofl@exp,f
  6547  1F95  3001               	movlw	1
  6548  1F96                     u5165:	
  6549  1F96  1003               	clrc
  6550  1F97  0CFD               	rrf	___xxtofl@arg+3,f
  6551  1F98  0CFC               	rrf	___xxtofl@arg+2,f
  6552  1F99  0CFB               	rrf	___xxtofl@arg+1,f
  6553  1F9A  0CFA               	rrf	___xxtofl@arg,f
  6554  1F9B  3EFF               	addlw	-1
  6555  1F9C  1D03               	skipz
  6556  1F9D  2F96               	goto	u5165
  6557  1F9E  2F8D               	goto	l3337
  6558  1F9F                     l3339:	
  6559  1F9F  3001               	movlw	1
  6560  1FA0  00F4               	movwf	??___xxtofl
  6561  1FA1  0874               	movf	??___xxtofl,w
  6562  1FA2  07F9               	addwf	___xxtofl@exp,f
  6563  1FA3  3001               	movlw	1
  6564  1FA4  07FA               	addwf	___xxtofl@arg,f
  6565  1FA5  3000               	movlw	0
  6566  1FA6  1803               	skipnc
  6567  1FA7  3001               	movlw	1
  6568  1FA8  07FB               	addwf	___xxtofl@arg+1,f
  6569  1FA9  3000               	movlw	0
  6570  1FAA  1803               	skipnc
  6571  1FAB  3001               	movlw	1
  6572  1FAC  07FC               	addwf	___xxtofl@arg+2,f
  6573  1FAD  3000               	movlw	0
  6574  1FAE  1803               	skipnc
  6575  1FAF  3001               	movlw	1
  6576  1FB0  07FD               	addwf	___xxtofl@arg+3,f
  6577  1FB1  3001               	movlw	1
  6578  1FB2                     u5185:	
  6579  1FB2  1003               	clrc
  6580  1FB3  0CFD               	rrf	___xxtofl@arg+3,f
  6581  1FB4  0CFC               	rrf	___xxtofl@arg+2,f
  6582  1FB5  0CFB               	rrf	___xxtofl@arg+1,f
  6583  1FB6  0CFA               	rrf	___xxtofl@arg,f
  6584  1FB7  3EFF               	addlw	-1
  6585  1FB8  1D03               	skipz
  6586  1FB9  2FB2               	goto	u5185
  6587  1FBA                     l799:	
  6588  1FBA  30FF               	movlw	255
  6589  1FBB  057D               	andwf	___xxtofl@arg+3,w
  6590  1FBC  1903               	btfsc	3,2
  6591  1FBD  2FCE               	goto	l3347
  6592  1FBE  2F9F               	goto	l3339
  6593  1FBF                     l3349:	
  6594  1FBF  3002               	movlw	2
  6595  1FC0  0279               	subwf	___xxtofl@exp,w
  6596  1FC1  1C03               	btfss	3,0
  6597  1FC2  2FD0               	goto	l806
  6598  1FC3  3001               	movlw	1
  6599  1FC4  02F9               	subwf	___xxtofl@exp,f
  6600  1FC5  3001               	movlw	1
  6601  1FC6  00F4               	movwf	??___xxtofl
  6602  1FC7                     u5205:	
  6603  1FC7  1003               	clrc
  6604  1FC8  0DFA               	rlf	___xxtofl@arg,f
  6605  1FC9  0DFB               	rlf	___xxtofl@arg+1,f
  6606  1FCA  0DFC               	rlf	___xxtofl@arg+2,f
  6607  1FCB  0DFD               	rlf	___xxtofl@arg+3,f
  6608  1FCC  0BF4               	decfsz	??___xxtofl,f
  6609  1FCD  2FC7               	goto	u5205
  6610  1FCE                     l3347:	
  6611  1FCE  1FFC               	btfss	___xxtofl@arg+2,7
  6612  1FCF  2FBF               	goto	l3349
  6613  1FD0                     l806:	
  6614  1FD0  1879               	btfsc	___xxtofl@exp,0
  6615  1FD1  2FDA               	goto	l807
  6616  1FD2  30FF               	movlw	255
  6617  1FD3  05FA               	andwf	___xxtofl@arg,f
  6618  1FD4  30FF               	movlw	255
  6619  1FD5  05FB               	andwf	___xxtofl@arg+1,f
  6620  1FD6  307F               	movlw	127
  6621  1FD7  05FC               	andwf	___xxtofl@arg+2,f
  6622  1FD8  30FF               	movlw	255
  6623  1FD9  05FD               	andwf	___xxtofl@arg+3,f
  6624  1FDA                     l807:	
  6625  1FDA  1003               	clrc
  6626  1FDB  0CF9               	rrf	___xxtofl@exp,f
  6627  1FDC  0879               	movf	___xxtofl@exp,w
  6628  1FDD  00F4               	movwf	??___xxtofl
  6629  1FDE  01F5               	clrf	??___xxtofl+1
  6630  1FDF  01F6               	clrf	??___xxtofl+2
  6631  1FE0  01F7               	clrf	??___xxtofl+3
  6632  1FE1  3018               	movlw	24
  6633  1FE2                     u5245:	
  6634  1FE2  1003               	clrc
  6635  1FE3  0DF4               	rlf	??___xxtofl,f
  6636  1FE4  0DF5               	rlf	??___xxtofl+1,f
  6637  1FE5  0DF6               	rlf	??___xxtofl+2,f
  6638  1FE6  0DF7               	rlf	??___xxtofl+3,f
  6639  1FE7  3EFF               	addlw	-1
  6640  1FE8  1D03               	skipz
  6641  1FE9  2FE2               	goto	u5245
  6642  1FEA  0874               	movf	??___xxtofl,w
  6643  1FEB  04FA               	iorwf	___xxtofl@arg,f
  6644  1FEC  0875               	movf	??___xxtofl+1,w
  6645  1FED  04FB               	iorwf	___xxtofl@arg+1,f
  6646  1FEE  0876               	movf	??___xxtofl+2,w
  6647  1FEF  04FC               	iorwf	___xxtofl@arg+2,f
  6648  1FF0  0877               	movf	??___xxtofl+3,w
  6649  1FF1  04FD               	iorwf	___xxtofl@arg+3,f
  6650  1FF2  0878               	movf	___xxtofl@sign,w
  6651  1FF3  1D03               	btfss	3,2
  6652  1FF4  1FF3               	btfss	___xxtofl@val+3,7
  6653  1FF5  2FF7               	goto	l3361
  6654  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  6655  1FF7                     l3361:	
  6656  1FF7  087D               	movf	___xxtofl@arg+3,w
  6657  1FF8  00F3               	movwf	?___xxtofl+3
  6658  1FF9  087C               	movf	___xxtofl@arg+2,w
  6659  1FFA  00F2               	movwf	?___xxtofl+2
  6660  1FFB  087B               	movf	___xxtofl@arg+1,w
  6661  1FFC  00F1               	movwf	?___xxtofl+1
  6662  1FFD  087A               	movf	___xxtofl@arg,w
  6663  1FFE  00F0               	movwf	?___xxtofl
  6664  1FFF  0008               	return
  6665  2000                     __end_of___xxtofl:	
  6666                           
  6667                           	psect	text14
  6668  1A97                     __ptext14:	
  6669 ;; *************** function ___wmul *****************
  6670 ;; Defined at:
  6671 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  multiplier      2    0[COMMON] unsigned int 
  6674 ;;  multiplicand    2    2[COMMON] unsigned int 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  product         2    4[COMMON] unsigned int 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  2    0[COMMON] unsigned int 
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6686 ;;      Params:         4       0       0       0       0
  6687 ;;      Locals:         2       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0
  6689 ;;      Totals:         6       0       0       0       0
  6690 ;;Total ram usage:        6 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_sprintf
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function ___wmul
  6701  1A97                     ___wmul:	
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6705  1A97  01F4               	clrf	___wmul@product
  6706  1A98  01F5               	clrf	___wmul@product+1
  6707  1A99                     l3207:	
  6708  1A99  1C70               	btfss	___wmul@multiplier,0
  6709  1A9A  2AA1               	goto	l332
  6710  1A9B  0872               	movf	___wmul@multiplicand,w
  6711  1A9C  07F4               	addwf	___wmul@product,f
  6712  1A9D  1803               	skipnc
  6713  1A9E  0AF5               	incf	___wmul@product+1,f
  6714  1A9F  0873               	movf	___wmul@multiplicand+1,w
  6715  1AA0  07F5               	addwf	___wmul@product+1,f
  6716  1AA1                     l332:	
  6717  1AA1  3001               	movlw	1
  6718  1AA2                     u4835:	
  6719  1AA2  1003               	clrc
  6720  1AA3  0DF2               	rlf	___wmul@multiplicand,f
  6721  1AA4  0DF3               	rlf	___wmul@multiplicand+1,f
  6722  1AA5  3EFF               	addlw	-1
  6723  1AA6  1D03               	skipz
  6724  1AA7  2AA2               	goto	u4835
  6725  1AA8  3001               	movlw	1
  6726  1AA9                     u4845:	
  6727  1AA9  1003               	clrc
  6728  1AAA  0CF1               	rrf	___wmul@multiplier+1,f
  6729  1AAB  0CF0               	rrf	___wmul@multiplier,f
  6730  1AAC  3EFF               	addlw	-1
  6731  1AAD  1D03               	skipz
  6732  1AAE  2AA9               	goto	u4845
  6733  1AAF  0870               	movf	___wmul@multiplier,w
  6734  1AB0  0471               	iorwf	___wmul@multiplier+1,w
  6735  1AB1  1D03               	btfss	3,2
  6736  1AB2  2A99               	goto	l3207
  6737  1AB3  0875               	movf	___wmul@product+1,w
  6738  1AB4  00F1               	movwf	?___wmul+1
  6739  1AB5  0874               	movf	___wmul@product,w
  6740  1AB6  00F0               	movwf	?___wmul
  6741  1AB7  0008               	return
  6742  1AB8                     __end_of___wmul:	
  6743                           
  6744                           	psect	text15
  6745  1D60                     __ptext15:	
  6746 ;; *************** function ___llmod *****************
  6747 ;; Defined at:
  6748 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  divisor         4    0[BANK0 ] unsigned long 
  6751 ;;  dividend        4    4[BANK0 ] unsigned long 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;  counter         1    9[BANK0 ] unsigned char 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  4    0[BANK0 ] unsigned long 
  6756 ;; Registers used:
  6757 ;;		wreg, status,2, status,0
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6763 ;;      Params:         0       8       0       0       0
  6764 ;;      Locals:         0       1       0       0       0
  6765 ;;      Temps:          0       1       0       0       0
  6766 ;;      Totals:         0      10       0       0       0
  6767 ;;Total ram usage:       10 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_sprintf
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           
  6777                           ;psect for function ___llmod
  6778  1D60                     ___llmod:	
  6779                           
  6780                           ;incstack = 0
  6781                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6782  1D60  1283               	bcf	3,5	;RP0=0, select bank0
  6783  1D61  1303               	bcf	3,6	;RP1=0, select bank0
  6784  1D62  0823               	movf	___llmod@divisor+3,w
  6785  1D63  0422               	iorwf	___llmod@divisor+2,w
  6786  1D64  0421               	iorwf	___llmod@divisor+1,w
  6787  1D65  0420               	iorwf	___llmod@divisor,w
  6788  1D66  1903               	skipnz
  6789  1D67  2DA5               	goto	l3311
  6790  1D68  01A9               	clrf	___llmod@counter
  6791  1D69  0AA9               	incf	___llmod@counter,f
  6792  1D6A                     l3301:	
  6793  1D6A  1BA3               	btfsc	___llmod@divisor+3,7
  6794  1D6B  2D7A               	goto	l3303
  6795  1D6C  3001               	movlw	1
  6796  1D6D  00A8               	movwf	??___llmod
  6797  1D6E                     u5085:	
  6798  1D6E  1003               	clrc
  6799  1D6F  0DA0               	rlf	___llmod@divisor,f
  6800  1D70  0DA1               	rlf	___llmod@divisor+1,f
  6801  1D71  0DA2               	rlf	___llmod@divisor+2,f
  6802  1D72  0DA3               	rlf	___llmod@divisor+3,f
  6803  1D73  0BA8               	decfsz	??___llmod,f
  6804  1D74  2D6E               	goto	u5085
  6805  1D75  3001               	movlw	1
  6806  1D76  00A8               	movwf	??___llmod
  6807  1D77  0828               	movf	??___llmod,w
  6808  1D78  07A9               	addwf	___llmod@counter,f
  6809  1D79  2D6A               	goto	l3301
  6810  1D7A                     l3303:	
  6811  1D7A  0823               	movf	___llmod@divisor+3,w
  6812  1D7B  0227               	subwf	___llmod@dividend+3,w
  6813  1D7C  1D03               	skipz
  6814  1D7D  2D88               	goto	u5105
  6815  1D7E  0822               	movf	___llmod@divisor+2,w
  6816  1D7F  0226               	subwf	___llmod@dividend+2,w
  6817  1D80  1D03               	skipz
  6818  1D81  2D88               	goto	u5105
  6819  1D82  0821               	movf	___llmod@divisor+1,w
  6820  1D83  0225               	subwf	___llmod@dividend+1,w
  6821  1D84  1D03               	skipz
  6822  1D85  2D88               	goto	u5105
  6823  1D86  0820               	movf	___llmod@divisor,w
  6824  1D87  0224               	subwf	___llmod@dividend,w
  6825  1D88                     u5105:	
  6826  1D88  1C03               	skipc
  6827  1D89  2D98               	goto	l3307
  6828  1D8A  0820               	movf	___llmod@divisor,w
  6829  1D8B  02A4               	subwf	___llmod@dividend,f
  6830  1D8C  0821               	movf	___llmod@divisor+1,w
  6831  1D8D  1C03               	skipc
  6832  1D8E  0F21               	incfsz	___llmod@divisor+1,w
  6833  1D8F  02A5               	subwf	___llmod@dividend+1,f
  6834  1D90  0822               	movf	___llmod@divisor+2,w
  6835  1D91  1C03               	skipc
  6836  1D92  0F22               	incfsz	___llmod@divisor+2,w
  6837  1D93  02A6               	subwf	___llmod@dividend+2,f
  6838  1D94  0823               	movf	___llmod@divisor+3,w
  6839  1D95  1C03               	skipc
  6840  1D96  0F23               	incfsz	___llmod@divisor+3,w
  6841  1D97  02A7               	subwf	___llmod@dividend+3,f
  6842  1D98                     l3307:	
  6843  1D98  3001               	movlw	1
  6844  1D99                     u5115:	
  6845  1D99  1003               	clrc
  6846  1D9A  0CA3               	rrf	___llmod@divisor+3,f
  6847  1D9B  0CA2               	rrf	___llmod@divisor+2,f
  6848  1D9C  0CA1               	rrf	___llmod@divisor+1,f
  6849  1D9D  0CA0               	rrf	___llmod@divisor,f
  6850  1D9E  3EFF               	addlw	-1
  6851  1D9F  1D03               	skipz
  6852  1DA0  2D99               	goto	u5115
  6853  1DA1  3001               	movlw	1
  6854  1DA2  02A9               	subwf	___llmod@counter,f
  6855  1DA3  1D03               	btfss	3,2
  6856  1DA4  2D7A               	goto	l3303
  6857  1DA5                     l3311:	
  6858  1DA5  0827               	movf	___llmod@dividend+3,w
  6859  1DA6  00A3               	movwf	?___llmod+3
  6860  1DA7  0826               	movf	___llmod@dividend+2,w
  6861  1DA8  00A2               	movwf	?___llmod+2
  6862  1DA9  0825               	movf	___llmod@dividend+1,w
  6863  1DAA  00A1               	movwf	?___llmod+1
  6864  1DAB  0824               	movf	___llmod@dividend,w
  6865  1DAC  00A0               	movwf	?___llmod
  6866  1DAD  0008               	return
  6867  1DAE                     __end_of___llmod:	
  6868                           
  6869                           	psect	text16
  6870  1E5D                     __ptext16:	
  6871 ;; *************** function ___fltol *****************
  6872 ;; Defined at:
  6873 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;  f1              4   49[BANK0 ] unsigned long 
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;  exp1            1   59[BANK0 ] unsigned char 
  6878 ;;  sign1           1   58[BANK0 ] unsigned char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  4   49[BANK0 ] long 
  6881 ;; Registers used:
  6882 ;;		wreg, status,2, status,0
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6888 ;;      Params:         0       4       0       0       0
  6889 ;;      Locals:         0       2       0       0       0
  6890 ;;      Temps:          0       5       0       0       0
  6891 ;;      Totals:         0      11       0       0       0
  6892 ;;Total ram usage:       11 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		_sprintf
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           
  6902                           ;psect for function ___fltol
  6903  1E5D                     ___fltol:	
  6904                           
  6905                           ;incstack = 0
  6906                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6907  1E5D  1003               	clrc
  6908  1E5E  1283               	bcf	3,5	;RP0=0, select bank0
  6909  1E5F  1303               	bcf	3,6	;RP1=0, select bank0
  6910  1E60  0D53               	rlf	___fltol@f1+2,w
  6911  1E61  0D54               	rlf	___fltol@f1+3,w
  6912  1E62  00D5               	movwf	??___fltol
  6913  1E63  0855               	movf	??___fltol,w
  6914  1E64  00DB               	movwf	___fltol@exp1
  6915  1E65  085B               	movf	___fltol@exp1,w
  6916  1E66  1D03               	btfss	3,2
  6917  1E67  2E71               	goto	l3265
  6918  1E68                     l3261:	
  6919  1E68  3000               	movlw	0
  6920  1E69  00D4               	movwf	?___fltol+3
  6921  1E6A  3000               	movlw	0
  6922  1E6B  00D3               	movwf	?___fltol+2
  6923  1E6C  3000               	movlw	0
  6924  1E6D  00D2               	movwf	?___fltol+1
  6925  1E6E  3000               	movlw	0
  6926  1E6F  00D1               	movwf	?___fltol
  6927  1E70  0008               	return
  6928  1E71                     l3265:	
  6929  1E71  0851               	movf	___fltol@f1,w
  6930  1E72  00D5               	movwf	??___fltol
  6931  1E73  0852               	movf	___fltol@f1+1,w
  6932  1E74  00D6               	movwf	??___fltol+1
  6933  1E75  0853               	movf	___fltol@f1+2,w
  6934  1E76  00D7               	movwf	??___fltol+2
  6935  1E77  0854               	movf	___fltol@f1+3,w
  6936  1E78  00D8               	movwf	??___fltol+3
  6937  1E79  301F               	movlw	31
  6938  1E7A                     u4985:	
  6939  1E7A  1003               	clrc
  6940  1E7B  0CD8               	rrf	??___fltol+3,f
  6941  1E7C  0CD7               	rrf	??___fltol+2,f
  6942  1E7D  0CD6               	rrf	??___fltol+1,f
  6943  1E7E  0CD5               	rrf	??___fltol,f
  6944  1E7F  3EFF               	addlw	-1
  6945  1E80  1D03               	skipz
  6946  1E81  2E7A               	goto	u4985
  6947  1E82  0855               	movf	??___fltol,w
  6948  1E83  00D9               	movwf	??___fltol+4
  6949  1E84  0859               	movf	??___fltol+4,w
  6950  1E85  00DA               	movwf	___fltol@sign1
  6951  1E86  17D3               	bsf	___fltol@f1+2,7
  6952  1E87  30FF               	movlw	255
  6953  1E88  05D1               	andwf	___fltol@f1,f
  6954  1E89  30FF               	movlw	255
  6955  1E8A  05D2               	andwf	___fltol@f1+1,f
  6956  1E8B  30FF               	movlw	255
  6957  1E8C  05D3               	andwf	___fltol@f1+2,f
  6958  1E8D  3000               	movlw	0
  6959  1E8E  05D4               	andwf	___fltol@f1+3,f
  6960  1E8F  3096               	movlw	150
  6961  1E90  02DB               	subwf	___fltol@exp1,f
  6962  1E91  1FDB               	btfss	___fltol@exp1,7
  6963  1E92  2EA8               	goto	l3283
  6964  1E93  085B               	movf	___fltol@exp1,w
  6965  1E94  3A80               	xorlw	128
  6966  1E95  3E97               	addlw	151
  6967  1E96  1C03               	btfss	3,0
  6968  1E97  2E68               	goto	l3261
  6969  1E98                     l3281:	
  6970  1E98  3001               	movlw	1
  6971  1E99                     u5015:	
  6972  1E99  1003               	clrc
  6973  1E9A  0CD4               	rrf	___fltol@f1+3,f
  6974  1E9B  0CD3               	rrf	___fltol@f1+2,f
  6975  1E9C  0CD2               	rrf	___fltol@f1+1,f
  6976  1E9D  0CD1               	rrf	___fltol@f1,f
  6977  1E9E  3EFF               	addlw	-1
  6978  1E9F  1D03               	skipz
  6979  1EA0  2E99               	goto	u5015
  6980  1EA1  3001               	movlw	1
  6981  1EA2  00D5               	movwf	??___fltol
  6982  1EA3  0855               	movf	??___fltol,w
  6983  1EA4  07DB               	addwf	___fltol@exp1,f
  6984  1EA5  1903               	btfsc	3,2
  6985  1EA6  2EBB               	goto	l3291
  6986  1EA7  2E98               	goto	l3281
  6987  1EA8                     l3283:	
  6988  1EA8  3020               	movlw	32
  6989  1EA9  025B               	subwf	___fltol@exp1,w
  6990  1EAA  1803               	btfsc	3,0
  6991  1EAB  2E68               	goto	l3261
  6992  1EAC                     l542:	
  6993  1EAC  085B               	movf	___fltol@exp1,w
  6994  1EAD  1903               	btfsc	3,2
  6995  1EAE  2EBB               	goto	l3291
  6996  1EAF  3001               	movlw	1
  6997  1EB0  00D5               	movwf	??___fltol
  6998  1EB1                     u5045:	
  6999  1EB1  1003               	clrc
  7000  1EB2  0DD1               	rlf	___fltol@f1,f
  7001  1EB3  0DD2               	rlf	___fltol@f1+1,f
  7002  1EB4  0DD3               	rlf	___fltol@f1+2,f
  7003  1EB5  0DD4               	rlf	___fltol@f1+3,f
  7004  1EB6  0BD5               	decfsz	??___fltol,f
  7005  1EB7  2EB1               	goto	u5045
  7006  1EB8  3001               	movlw	1
  7007  1EB9  02DB               	subwf	___fltol@exp1,f
  7008  1EBA  2EAC               	goto	l542
  7009  1EBB                     l3291:	
  7010  1EBB  085A               	movf	___fltol@sign1,w
  7011  1EBC  1903               	btfsc	3,2
  7012  1EBD  0008               	return
  7013  1EBE  09D1               	comf	___fltol@f1,f
  7014  1EBF  09D2               	comf	___fltol@f1+1,f
  7015  1EC0  09D3               	comf	___fltol@f1+2,f
  7016  1EC1  09D4               	comf	___fltol@f1+3,f
  7017  1EC2  0AD1               	incf	___fltol@f1,f
  7018  1EC3  1903               	skipnz
  7019  1EC4  0AD2               	incf	___fltol@f1+1,f
  7020  1EC5  1903               	skipnz
  7021  1EC6  0AD3               	incf	___fltol@f1+2,f
  7022  1EC7  1903               	skipnz
  7023  1EC8  0AD4               	incf	___fltol@f1+3,f
  7024  1EC9  0008               	return
  7025  1ECA                     __end_of___fltol:	
  7026                           
  7027                           	psect	text17
  7028  1AB8                     __ptext17:	
  7029 ;; *************** function ___flsub *****************
  7030 ;; Defined at:
  7031 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  a               4   70[BANK0 ] long 
  7034 ;;  b               4   74[BANK0 ] long 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  4   70[BANK0 ] long 
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7046 ;;      Params:         0       8       0       0       0
  7047 ;;      Locals:         0       0       0       0       0
  7048 ;;      Temps:          0       0       0       0       0
  7049 ;;      Totals:         0       8       0       0       0
  7050 ;;Total ram usage:        8 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    1
  7053 ;; This function calls:
  7054 ;;		___fladd
  7055 ;; This function is called by:
  7056 ;;		_sprintf
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           
  7061                           ;psect for function ___flsub
  7062  1AB8                     ___flsub:	
  7063                           
  7064                           ;incstack = 0
  7065                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7066  1AB8  3080               	movlw	128
  7067  1AB9  1283               	bcf	3,5	;RP0=0, select bank0
  7068  1ABA  1303               	bcf	3,6	;RP1=0, select bank0
  7069  1ABB  06E9               	xorwf	___flsub@a+3,f
  7070  1ABC  086D               	movf	___flsub@b+3,w
  7071  1ABD  00D5               	movwf	___fladd@b+3
  7072  1ABE  086C               	movf	___flsub@b+2,w
  7073  1ABF  00D4               	movwf	___fladd@b+2
  7074  1AC0  086B               	movf	___flsub@b+1,w
  7075  1AC1  00D3               	movwf	___fladd@b+1
  7076  1AC2  086A               	movf	___flsub@b,w
  7077  1AC3  00D2               	movwf	___fladd@b
  7078  1AC4  0869               	movf	___flsub@a+3,w
  7079  1AC5  00D9               	movwf	___fladd@a+3
  7080  1AC6  0868               	movf	___flsub@a+2,w
  7081  1AC7  00D8               	movwf	___fladd@a+2
  7082  1AC8  0867               	movf	___flsub@a+1,w
  7083  1AC9  00D7               	movwf	___fladd@a+1
  7084  1ACA  0866               	movf	___flsub@a,w
  7085  1ACB  00D6               	movwf	___fladd@a
  7086  1ACC  160A  118A  25D1   	fcall	___fladd
  7087  1ACF  1283               	bcf	3,5	;RP0=0, select bank0
  7088  1AD0  1303               	bcf	3,6	;RP1=0, select bank0
  7089  1AD1  0855               	movf	?___fladd+3,w
  7090  1AD2  00E9               	movwf	?___flsub+3
  7091  1AD3  0854               	movf	?___fladd+2,w
  7092  1AD4  00E8               	movwf	?___flsub+2
  7093  1AD5  0853               	movf	?___fladd+1,w
  7094  1AD6  00E7               	movwf	?___flsub+1
  7095  1AD7  0852               	movf	?___fladd,w
  7096  1AD8  00E6               	movwf	?___flsub
  7097  1AD9  0008               	return
  7098  1ADA                     __end_of___flsub:	
  7099                           
  7100                           	psect	text18
  7101  15D1                     __ptext18:	
  7102 ;; *************** function ___fladd *****************
  7103 ;; Defined at:
  7104 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  b               4   50[BANK0 ] long 
  7107 ;;  a               4   54[BANK0 ] long 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  grs             1   69[BANK0 ] unsigned char 
  7110 ;;  bexp            1   68[BANK0 ] unsigned char 
  7111 ;;  aexp            1   67[BANK0 ] unsigned char 
  7112 ;;  signs           1   66[BANK0 ] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  4   50[BANK0 ] unsigned char 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2, status,0, btemp+1
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7122 ;;      Params:         0       8       0       0       0
  7123 ;;      Locals:         0       4       0       0       0
  7124 ;;      Temps:          0       8       0       0       0
  7125 ;;      Totals:         0      20       0       0       0
  7126 ;;Total ram usage:       20 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_sprintf
  7132 ;;		___flsub
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           
  7137                           ;psect for function ___fladd
  7138  15D1                     ___fladd:	
  7139                           
  7140                           ;incstack = 0
  7141                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7142  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  7143  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  7144  15D3  0855               	movf	___fladd@b+3,w
  7145  15D4  3980               	andlw	128
  7146  15D5  00DA               	movwf	??___fladd
  7147  15D6  085A               	movf	??___fladd,w
  7148  15D7  00E2               	movwf	___fladd@signs
  7149  15D8  0855               	movf	___fladd@b+3,w
  7150  15D9  00DA               	movwf	??___fladd
  7151  15DA  075A               	addwf	??___fladd,w
  7152  15DB  00DB               	movwf	??___fladd+1
  7153  15DC  085B               	movf	??___fladd+1,w
  7154  15DD  00E4               	movwf	___fladd@bexp
  7155  15DE  1BD4               	btfsc	___fladd@b+2,7
  7156  15DF  1464               	bsf	___fladd@bexp,0
  7157  15E0  0864               	movf	___fladd@bexp,w
  7158  15E1  1903               	btfsc	3,2
  7159  15E2  2DF1               	goto	l2607
  7160  15E3  0A64               	incf	___fladd@bexp,w
  7161  15E4  1D03               	btfss	3,2
  7162  15E5  2DEE               	goto	l2603
  7163  15E6  3000               	movlw	0
  7164  15E7  00D5               	movwf	___fladd@b+3
  7165  15E8  3000               	movlw	0
  7166  15E9  00D4               	movwf	___fladd@b+2
  7167  15EA  3000               	movlw	0
  7168  15EB  00D3               	movwf	___fladd@b+1
  7169  15EC  3000               	movlw	0
  7170  15ED  00D2               	movwf	___fladd@b
  7171  15EE                     l2603:	
  7172  15EE  17D4               	bsf	___fladd@b+2,7
  7173  15EF  01D5               	clrf	___fladd@b+3
  7174  15F0  2DF9               	goto	l2609
  7175  15F1                     l2607:	
  7176  15F1  3000               	movlw	0
  7177  15F2  00D5               	movwf	___fladd@b+3
  7178  15F3  3000               	movlw	0
  7179  15F4  00D4               	movwf	___fladd@b+2
  7180  15F5  3000               	movlw	0
  7181  15F6  00D3               	movwf	___fladd@b+1
  7182  15F7  3000               	movlw	0
  7183  15F8  00D2               	movwf	___fladd@b
  7184  15F9                     l2609:	
  7185  15F9  0859               	movf	___fladd@a+3,w
  7186  15FA  3980               	andlw	128
  7187  15FB  00DA               	movwf	??___fladd
  7188  15FC  085A               	movf	??___fladd,w
  7189  15FD  00E3               	movwf	___fladd@aexp
  7190  15FE  0863               	movf	___fladd@aexp,w
  7191  15FF  0662               	xorwf	___fladd@signs,w
  7192  1600  1D03               	btfss	3,2
  7193  1601  1762               	bsf	___fladd@signs,6
  7194  1602  0859               	movf	___fladd@a+3,w
  7195  1603  00DA               	movwf	??___fladd
  7196  1604  075A               	addwf	??___fladd,w
  7197  1605  00DB               	movwf	??___fladd+1
  7198  1606  085B               	movf	??___fladd+1,w
  7199  1607  00E3               	movwf	___fladd@aexp
  7200  1608  1BD8               	btfsc	___fladd@a+2,7
  7201  1609  1463               	bsf	___fladd@aexp,0
  7202  160A  0863               	movf	___fladd@aexp,w
  7203  160B  1903               	btfsc	3,2
  7204  160C  2E1B               	goto	l2631
  7205  160D  0A63               	incf	___fladd@aexp,w
  7206  160E  1D03               	btfss	3,2
  7207  160F  2E18               	goto	l2627
  7208  1610  3000               	movlw	0
  7209  1611  00D9               	movwf	___fladd@a+3
  7210  1612  3000               	movlw	0
  7211  1613  00D8               	movwf	___fladd@a+2
  7212  1614  3000               	movlw	0
  7213  1615  00D7               	movwf	___fladd@a+1
  7214  1616  3000               	movlw	0
  7215  1617  00D6               	movwf	___fladd@a
  7216  1618                     l2627:	
  7217  1618  17D8               	bsf	___fladd@a+2,7
  7218  1619  01D9               	clrf	___fladd@a+3
  7219  161A  2E23               	goto	l659
  7220  161B                     l2631:	
  7221  161B  3000               	movlw	0
  7222  161C  00D9               	movwf	___fladd@a+3
  7223  161D  3000               	movlw	0
  7224  161E  00D8               	movwf	___fladd@a+2
  7225  161F  3000               	movlw	0
  7226  1620  00D7               	movwf	___fladd@a+1
  7227  1621  3000               	movlw	0
  7228  1622  00D6               	movwf	___fladd@a
  7229  1623                     l659:	
  7230  1623  0864               	movf	___fladd@bexp,w
  7231  1624  0263               	subwf	___fladd@aexp,w
  7232  1625  1803               	skipnc
  7233  1626  2E69               	goto	l2667
  7234  1627  1F62               	btfss	___fladd@signs,6
  7235  1628  2E2D               	goto	l2637
  7236  1629  3080               	movlw	128
  7237  162A  00DA               	movwf	??___fladd
  7238  162B  085A               	movf	??___fladd,w
  7239  162C  06E2               	xorwf	___fladd@signs,f
  7240  162D                     l2637:	
  7241  162D  0864               	movf	___fladd@bexp,w
  7242  162E  00DA               	movwf	??___fladd
  7243  162F  085A               	movf	??___fladd,w
  7244  1630  00E5               	movwf	___fladd@grs
  7245  1631  0863               	movf	___fladd@aexp,w
  7246  1632  00DA               	movwf	??___fladd
  7247  1633  085A               	movf	??___fladd,w
  7248  1634  00E4               	movwf	___fladd@bexp
  7249  1635  0865               	movf	___fladd@grs,w
  7250  1636  00DA               	movwf	??___fladd
  7251  1637  085A               	movf	??___fladd,w
  7252  1638  00E3               	movwf	___fladd@aexp
  7253  1639  0852               	movf	___fladd@b,w
  7254  163A  00DA               	movwf	??___fladd
  7255  163B  085A               	movf	??___fladd,w
  7256  163C  00E5               	movwf	___fladd@grs
  7257  163D  0856               	movf	___fladd@a,w
  7258  163E  00DA               	movwf	??___fladd
  7259  163F  085A               	movf	??___fladd,w
  7260  1640  00D2               	movwf	___fladd@b
  7261  1641  0865               	movf	___fladd@grs,w
  7262  1642  00DA               	movwf	??___fladd
  7263  1643  085A               	movf	??___fladd,w
  7264  1644  00D6               	movwf	___fladd@a
  7265  1645  0853               	movf	___fladd@b+1,w
  7266  1646  00DA               	movwf	??___fladd
  7267  1647  085A               	movf	??___fladd,w
  7268  1648  00E5               	movwf	___fladd@grs
  7269  1649  0857               	movf	___fladd@a+1,w
  7270  164A  00DA               	movwf	??___fladd
  7271  164B  085A               	movf	??___fladd,w
  7272  164C  00D3               	movwf	___fladd@b+1
  7273  164D  0865               	movf	___fladd@grs,w
  7274  164E  00DA               	movwf	??___fladd
  7275  164F  085A               	movf	??___fladd,w
  7276  1650  00D7               	movwf	___fladd@a+1
  7277  1651  0854               	movf	___fladd@b+2,w
  7278  1652  00DA               	movwf	??___fladd
  7279  1653  085A               	movf	??___fladd,w
  7280  1654  00E5               	movwf	___fladd@grs
  7281  1655  0858               	movf	___fladd@a+2,w
  7282  1656  00DA               	movwf	??___fladd
  7283  1657  085A               	movf	??___fladd,w
  7284  1658  00D4               	movwf	___fladd@b+2
  7285  1659  0865               	movf	___fladd@grs,w
  7286  165A  00DA               	movwf	??___fladd
  7287  165B  085A               	movf	??___fladd,w
  7288  165C  00D8               	movwf	___fladd@a+2
  7289  165D  0855               	movf	___fladd@b+3,w
  7290  165E  00DA               	movwf	??___fladd
  7291  165F  085A               	movf	??___fladd,w
  7292  1660  00E5               	movwf	___fladd@grs
  7293  1661  0859               	movf	___fladd@a+3,w
  7294  1662  00DA               	movwf	??___fladd
  7295  1663  085A               	movf	??___fladd,w
  7296  1664  00D5               	movwf	___fladd@b+3
  7297  1665  0865               	movf	___fladd@grs,w
  7298  1666  00DA               	movwf	??___fladd
  7299  1667  085A               	movf	??___fladd,w
  7300  1668  00D9               	movwf	___fladd@a+3
  7301  1669                     l2667:	
  7302  1669  01E5               	clrf	___fladd@grs
  7303  166A  0863               	movf	___fladd@aexp,w
  7304  166B  00DA               	movwf	??___fladd
  7305  166C  01DB               	clrf	??___fladd+1
  7306  166D  085B               	movf	??___fladd+1,w
  7307  166E  00DD               	movwf	??___fladd+3
  7308  166F  0864               	movf	___fladd@bexp,w
  7309  1670  025A               	subwf	??___fladd,w
  7310  1671  00DC               	movwf	??___fladd+2
  7311  1672  1C03               	skipc
  7312  1673  03DD               	decf	??___fladd+3,f
  7313  1674  085D               	movf	??___fladd+3,w
  7314  1675  3A80               	xorlw	128
  7315  1676  00FF               	movwf	127
  7316  1677  3080               	movlw	128
  7317  1678  027F               	subwf	127,w
  7318  1679  1D03               	skipz
  7319  167A  2E7D               	goto	u3545
  7320  167B  301A               	movlw	26
  7321  167C  025C               	subwf	??___fladd+2,w
  7322  167D                     u3545:	
  7323  167D  1C03               	skipc
  7324  167E  2EB6               	goto	l2685
  7325  167F  1283               	bcf	3,5	;RP0=0, select bank0
  7326  1680  1303               	bcf	3,6	;RP1=0, select bank0
  7327  1681  0855               	movf	___fladd@b+3,w
  7328  1682  0454               	iorwf	___fladd@b+2,w
  7329  1683  0453               	iorwf	___fladd@b+1,w
  7330  1684  0452               	iorwf	___fladd@b,w
  7331  1685  1903               	btfsc	3,2
  7332  1686  2E89               	goto	u3550
  7333  1687  3001               	movlw	1
  7334  1688  2E8A               	goto	u3560
  7335  1689                     u3550:	
  7336  1689  3000               	movlw	0
  7337  168A                     u3560:	
  7338  168A  00DA               	movwf	??___fladd
  7339  168B  085A               	movf	??___fladd,w
  7340  168C  00E5               	movwf	___fladd@grs
  7341  168D  3000               	movlw	0
  7342  168E  00D5               	movwf	___fladd@b+3
  7343  168F  3000               	movlw	0
  7344  1690  00D4               	movwf	___fladd@b+2
  7345  1691  3000               	movlw	0
  7346  1692  00D3               	movwf	___fladd@b+1
  7347  1693  3000               	movlw	0
  7348  1694  00D2               	movwf	___fladd@b
  7349  1695  0863               	movf	___fladd@aexp,w
  7350  1696  00DA               	movwf	??___fladd
  7351  1697  085A               	movf	??___fladd,w
  7352  1698  00E4               	movwf	___fladd@bexp
  7353  1699  2EBC               	goto	l663
  7354  169A                     l665:	
  7355  169A  1C65               	btfss	___fladd@grs,0
  7356  169B  2EA5               	goto	l2675
  7357  169C  0865               	movf	___fladd@grs,w
  7358  169D  00DA               	movwf	??___fladd
  7359  169E  1003               	clrc
  7360  169F  0C5A               	rrf	??___fladd,w
  7361  16A0  3801               	iorlw	1
  7362  16A1  00DB               	movwf	??___fladd+1
  7363  16A2  085B               	movf	??___fladd+1,w
  7364  16A3  00E5               	movwf	___fladd@grs
  7365  16A4  2EA7               	goto	l2677
  7366  16A5                     l2675:	
  7367  16A5  1003               	clrc
  7368  16A6  0CE5               	rrf	___fladd@grs,f
  7369  16A7                     l2677:	
  7370  16A7  1852               	btfsc	___fladd@b,0
  7371  16A8  17E5               	bsf	___fladd@grs,7
  7372  16A9  3001               	movlw	1
  7373  16AA  00DA               	movwf	??___fladd
  7374  16AB                     u3595:	
  7375  16AB  0D55               	rlf	___fladd@b+3,w
  7376  16AC  0CD5               	rrf	___fladd@b+3,f
  7377  16AD  0CD4               	rrf	___fladd@b+2,f
  7378  16AE  0CD3               	rrf	___fladd@b+1,f
  7379  16AF  0CD2               	rrf	___fladd@b,f
  7380  16B0  0BDA               	decfsz	??___fladd& (0+127),f
  7381  16B1  2EAB               	goto	u3595
  7382  16B2  3001               	movlw	1
  7383  16B3  00DA               	movwf	??___fladd
  7384  16B4  085A               	movf	??___fladd,w
  7385  16B5  07E4               	addwf	___fladd@bexp,f
  7386  16B6                     l2685:	
  7387  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  7388  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  7389  16B8  0863               	movf	___fladd@aexp,w
  7390  16B9  0264               	subwf	___fladd@bexp,w
  7391  16BA  1C03               	skipc
  7392  16BB  2E9A               	goto	l665
  7393  16BC                     l663:	
  7394  16BC  1B62               	btfsc	___fladd@signs,6
  7395  16BD  2EFD               	goto	l2711
  7396  16BE  0864               	movf	___fladd@bexp,w
  7397  16BF  1D03               	btfss	3,2
  7398  16C0  2ECA               	goto	l2693
  7399  16C1  3000               	movlw	0
  7400  16C2  00D5               	movwf	?___fladd+3
  7401  16C3  3000               	movlw	0
  7402  16C4  00D4               	movwf	?___fladd+2
  7403  16C5  3000               	movlw	0
  7404  16C6  00D3               	movwf	?___fladd+1
  7405  16C7  3000               	movlw	0
  7406  16C8  00D2               	movwf	?___fladd
  7407  16C9  0008               	return
  7408  16CA                     l2693:	
  7409  16CA  0856               	movf	___fladd@a,w
  7410  16CB  07D2               	addwf	___fladd@b,f
  7411  16CC  0857               	movf	___fladd@a+1,w
  7412  16CD  1103               	clrz
  7413  16CE  1803               	skipnc
  7414  16CF  3E01               	addlw	1
  7415  16D0  1D03               	btfss	3,2
  7416  16D1  07D3               	addwf	___fladd@b+1,f
  7417  16D2  0858               	movf	___fladd@a+2,w
  7418  16D3  1103               	clrz
  7419  16D4  1803               	skipnc
  7420  16D5  3E01               	addlw	1
  7421  16D6  1D03               	btfss	3,2
  7422  16D7  07D4               	addwf	___fladd@b+2,f
  7423  16D8  0859               	movf	___fladd@a+3,w
  7424  16D9  1103               	clrz
  7425  16DA  1803               	skipnc
  7426  16DB  3E01               	addlw	1
  7427  16DC  1D03               	btfss	3,2
  7428  16DD  07D5               	addwf	___fladd@b+3,f
  7429  16DE  1C55               	btfss	___fladd@b+3,0
  7430  16DF  2F9F               	goto	l2745
  7431  16E0  1C65               	btfss	___fladd@grs,0
  7432  16E1  2EEB               	goto	l2701
  7433  16E2  0865               	movf	___fladd@grs,w
  7434  16E3  00DA               	movwf	??___fladd
  7435  16E4  1003               	clrc
  7436  16E5  0C5A               	rrf	??___fladd,w
  7437  16E6  3801               	iorlw	1
  7438  16E7  00DB               	movwf	??___fladd+1
  7439  16E8  085B               	movf	??___fladd+1,w
  7440  16E9  00E5               	movwf	___fladd@grs
  7441  16EA  2EED               	goto	l2703
  7442  16EB                     l2701:	
  7443  16EB  1003               	clrc
  7444  16EC  0CE5               	rrf	___fladd@grs,f
  7445  16ED                     l2703:	
  7446  16ED  1852               	btfsc	___fladd@b,0
  7447  16EE  17E5               	bsf	___fladd@grs,7
  7448  16EF  3001               	movlw	1
  7449  16F0  00DA               	movwf	??___fladd
  7450  16F1                     u3675:	
  7451  16F1  0D55               	rlf	___fladd@b+3,w
  7452  16F2  0CD5               	rrf	___fladd@b+3,f
  7453  16F3  0CD4               	rrf	___fladd@b+2,f
  7454  16F4  0CD3               	rrf	___fladd@b+1,f
  7455  16F5  0CD2               	rrf	___fladd@b,f
  7456  16F6  0BDA               	decfsz	??___fladd& (0+127),f
  7457  16F7  2EF1               	goto	u3675
  7458  16F8  3001               	movlw	1
  7459  16F9  00DA               	movwf	??___fladd
  7460  16FA  085A               	movf	??___fladd,w
  7461  16FB  07E4               	addwf	___fladd@bexp,f
  7462  16FC  2F9F               	goto	l2745
  7463  16FD                     l2711:	
  7464  16FD  0855               	movf	___fladd@b+3,w
  7465  16FE  3A80               	xorlw	128
  7466  16FF  00FF               	movwf	127
  7467  1700  0859               	movf	___fladd@a+3,w
  7468  1701  3A80               	xorlw	128
  7469  1702  027F               	subwf	127,w
  7470  1703  1D03               	skipz
  7471  1704  2F0F               	goto	u3683
  7472  1705  0858               	movf	___fladd@a+2,w
  7473  1706  0254               	subwf	___fladd@b+2,w
  7474  1707  1D03               	skipz
  7475  1708  2F0F               	goto	u3683
  7476  1709  0857               	movf	___fladd@a+1,w
  7477  170A  0253               	subwf	___fladd@b+1,w
  7478  170B  1D03               	skipz
  7479  170C  2F0F               	goto	u3683
  7480  170D  0856               	movf	___fladd@a,w
  7481  170E  0252               	subwf	___fladd@b,w
  7482  170F                     u3683:	
  7483  170F  1803               	skipnc
  7484  1710  2F67               	goto	l2721
  7485  1711  30FF               	movlw	255
  7486  1712  00DA               	movwf	??___fladd
  7487  1713  30FF               	movlw	255
  7488  1714  00DB               	movwf	??___fladd+1
  7489  1715  30FF               	movlw	255
  7490  1716  00DC               	movwf	??___fladd+2
  7491  1717  30FF               	movlw	255
  7492  1718  00DD               	movwf	??___fladd+3
  7493  1719  0856               	movf	___fladd@a,w
  7494  171A  00DE               	movwf	??___fladd+4
  7495  171B  0857               	movf	___fladd@a+1,w
  7496  171C  00DF               	movwf	??___fladd+5
  7497  171D  0858               	movf	___fladd@a+2,w
  7498  171E  00E0               	movwf	??___fladd+6
  7499  171F  0859               	movf	___fladd@a+3,w
  7500  1720  00E1               	movwf	??___fladd+7
  7501  1721  0852               	movf	___fladd@b,w
  7502  1722  02DE               	subwf	??___fladd+4,f
  7503  1723  0853               	movf	___fladd@b+1,w
  7504  1724  1C03               	skipc
  7505  1725  0F53               	incfsz	___fladd@b+1,w
  7506  1726  2F28               	goto	u3691
  7507  1727  2F29               	goto	u3692
  7508  1728                     u3691:	
  7509  1728  02DF               	subwf	??___fladd+5,f
  7510  1729                     u3692:	
  7511  1729  0854               	movf	___fladd@b+2,w
  7512  172A  1C03               	skipc
  7513  172B  0F54               	incfsz	___fladd@b+2,w
  7514  172C  2F2E               	goto	u3693
  7515  172D  2F2F               	goto	u3694
  7516  172E                     u3693:	
  7517  172E  02E0               	subwf	??___fladd+6,f
  7518  172F                     u3694:	
  7519  172F  0855               	movf	___fladd@b+3,w
  7520  1730  1C03               	skipc
  7521  1731  0F55               	incfsz	___fladd@b+3,w
  7522  1732  2F34               	goto	u3695
  7523  1733  2F35               	goto	u3696
  7524  1734                     u3695:	
  7525  1734  02E1               	subwf	??___fladd+7,f
  7526  1735                     u3696:	
  7527  1735  085E               	movf	??___fladd+4,w
  7528  1736  07DA               	addwf	??___fladd,f
  7529  1737  085F               	movf	??___fladd+5,w
  7530  1738  1803               	skipnc
  7531  1739  0F5F               	incfsz	??___fladd+5,w
  7532  173A  2F3C               	goto	u3700
  7533  173B  2F3D               	goto	u3701
  7534  173C                     u3700:	
  7535  173C  07DB               	addwf	??___fladd+1,f
  7536  173D                     u3701:	
  7537  173D  0860               	movf	??___fladd+6,w
  7538  173E  1803               	skipnc
  7539  173F  0F60               	incfsz	??___fladd+6,w
  7540  1740  2F42               	goto	u3702
  7541  1741  2F43               	goto	u3703
  7542  1742                     u3702:	
  7543  1742  07DC               	addwf	??___fladd+2,f
  7544  1743                     u3703:	
  7545  1743  0861               	movf	??___fladd+7,w
  7546  1744  1803               	skipnc
  7547  1745  0A61               	incf	??___fladd+7,w
  7548  1746  07DD               	addwf	??___fladd+3,f
  7549  1747  085D               	movf	??___fladd+3,w
  7550  1748  00D5               	movwf	___fladd@b+3
  7551  1749  085C               	movf	??___fladd+2,w
  7552  174A  00D4               	movwf	___fladd@b+2
  7553  174B  085B               	movf	??___fladd+1,w
  7554  174C  00D3               	movwf	___fladd@b+1
  7555  174D  085A               	movf	??___fladd,w
  7556  174E  00D2               	movwf	___fladd@b
  7557  174F  3080               	movlw	128
  7558  1750  00DA               	movwf	??___fladd
  7559  1751  085A               	movf	??___fladd,w
  7560  1752  06E2               	xorwf	___fladd@signs,f
  7561  1753  09E5               	comf	___fladd@grs,f
  7562  1754  0AE5               	incf	___fladd@grs,f
  7563  1755  0865               	movf	___fladd@grs,w
  7564  1756  1D03               	btfss	3,2
  7565  1757  2F75               	goto	l680
  7566  1758  3001               	movlw	1
  7567  1759  07D2               	addwf	___fladd@b,f
  7568  175A  3000               	movlw	0
  7569  175B  1803               	skipnc
  7570  175C  3001               	movlw	1
  7571  175D  07D3               	addwf	___fladd@b+1,f
  7572  175E  3000               	movlw	0
  7573  175F  1803               	skipnc
  7574  1760  3001               	movlw	1
  7575  1761  07D4               	addwf	___fladd@b+2,f
  7576  1762  3000               	movlw	0
  7577  1763  1803               	skipnc
  7578  1764  3001               	movlw	1
  7579  1765  07D5               	addwf	___fladd@b+3,f
  7580  1766  2F75               	goto	l680
  7581  1767                     l2721:	
  7582  1767  0856               	movf	___fladd@a,w
  7583  1768  02D2               	subwf	___fladd@b,f
  7584  1769  0857               	movf	___fladd@a+1,w
  7585  176A  1C03               	skipc
  7586  176B  0F57               	incfsz	___fladd@a+1,w
  7587  176C  02D3               	subwf	___fladd@b+1,f
  7588  176D  0858               	movf	___fladd@a+2,w
  7589  176E  1C03               	skipc
  7590  176F  0F58               	incfsz	___fladd@a+2,w
  7591  1770  02D4               	subwf	___fladd@b+2,f
  7592  1771  0859               	movf	___fladd@a+3,w
  7593  1772  1C03               	skipc
  7594  1773  0F59               	incfsz	___fladd@a+3,w
  7595  1774  02D5               	subwf	___fladd@b+3,f
  7596  1775                     l680:	
  7597  1775  0855               	movf	___fladd@b+3,w
  7598  1776  0454               	iorwf	___fladd@b+2,w
  7599  1777  0453               	iorwf	___fladd@b+1,w
  7600  1778  0452               	iorwf	___fladd@b,w
  7601  1779  1D03               	skipz
  7602  177A  2F9D               	goto	l2743
  7603  177B  0865               	movf	___fladd@grs,w
  7604  177C  1D03               	btfss	3,2
  7605  177D  2F9D               	goto	l2743
  7606  177E  3000               	movlw	0
  7607  177F  00D5               	movwf	?___fladd+3
  7608  1780  3000               	movlw	0
  7609  1781  00D4               	movwf	?___fladd+2
  7610  1782  3000               	movlw	0
  7611  1783  00D3               	movwf	?___fladd+1
  7612  1784  3000               	movlw	0
  7613  1785  00D2               	movwf	?___fladd
  7614  1786  0008               	return
  7615  1787                     l2729:	
  7616  1787  3001               	movlw	1
  7617  1788  00DA               	movwf	??___fladd
  7618  1789                     u3745:	
  7619  1789  1003               	clrc
  7620  178A  0DD2               	rlf	___fladd@b,f
  7621  178B  0DD3               	rlf	___fladd@b+1,f
  7622  178C  0DD4               	rlf	___fladd@b+2,f
  7623  178D  0DD5               	rlf	___fladd@b+3,f
  7624  178E  0BDA               	decfsz	??___fladd,f
  7625  178F  2F89               	goto	u3745
  7626  1790  1BE5               	btfsc	___fladd@grs,7
  7627  1791  1452               	bsf	___fladd@b,0
  7628  1792  1C65               	btfss	___fladd@grs,0
  7629  1793  2F96               	goto	l2737
  7630  1794  1403               	setc
  7631  1795  2F97               	goto	L7
  7632  1796                     l2737:	
  7633  1796  1003               	clrc
  7634  1797                     L7:	
  7635  1797  0DE5               	rlf	___fladd@grs,f
  7636  1798  0864               	movf	___fladd@bexp,w
  7637  1799  1903               	btfsc	3,2
  7638  179A  2F9D               	goto	l2743
  7639  179B  3001               	movlw	1
  7640  179C  02E4               	subwf	___fladd@bexp,f
  7641  179D                     l2743:	
  7642  179D  1FD4               	btfss	___fladd@b+2,7
  7643  179E  2F87               	goto	l2729
  7644  179F                     l2745:	
  7645  179F  01E3               	clrf	___fladd@aexp
  7646  17A0  1FE5               	btfss	___fladd@grs,7
  7647  17A1  2FAA               	goto	l2755
  7648  17A2  0865               	movf	___fladd@grs,w
  7649  17A3  397F               	andlw	127
  7650  17A4  1903               	btfsc	3,2
  7651  17A5  1852               	btfsc	___fladd@b,0
  7652  17A6  2FA8               	goto	l2751
  7653  17A7  2FAA               	goto	l2755
  7654  17A8                     l2751:	
  7655  17A8  01E3               	clrf	___fladd@aexp
  7656  17A9  0AE3               	incf	___fladd@aexp,f
  7657  17AA                     l2755:	
  7658  17AA  0863               	movf	___fladd@aexp,w
  7659  17AB  1903               	btfsc	3,2
  7660  17AC  2FDD               	goto	l693
  7661  17AD  3001               	movlw	1
  7662  17AE  07D2               	addwf	___fladd@b,f
  7663  17AF  3000               	movlw	0
  7664  17B0  1803               	skipnc
  7665  17B1  3001               	movlw	1
  7666  17B2  07D3               	addwf	___fladd@b+1,f
  7667  17B3  3000               	movlw	0
  7668  17B4  1803               	skipnc
  7669  17B5  3001               	movlw	1
  7670  17B6  07D4               	addwf	___fladd@b+2,f
  7671  17B7  3000               	movlw	0
  7672  17B8  1803               	skipnc
  7673  17B9  3001               	movlw	1
  7674  17BA  07D5               	addwf	___fladd@b+3,f
  7675  17BB  1C55               	btfss	___fladd@b+3,0
  7676  17BC  2FDD               	goto	l693
  7677  17BD  0852               	movf	___fladd@b,w
  7678  17BE  00DA               	movwf	??___fladd
  7679  17BF  0853               	movf	___fladd@b+1,w
  7680  17C0  00DB               	movwf	??___fladd+1
  7681  17C1  0854               	movf	___fladd@b+2,w
  7682  17C2  00DC               	movwf	??___fladd+2
  7683  17C3  0855               	movf	___fladd@b+3,w
  7684  17C4  00DD               	movwf	??___fladd+3
  7685  17C5  3001               	movlw	1
  7686  17C6  00DE               	movwf	??___fladd+4
  7687  17C7                     u3845:	
  7688  17C7  0D5D               	rlf	??___fladd+3,w
  7689  17C8  0CDD               	rrf	??___fladd+3,f
  7690  17C9  0CDC               	rrf	??___fladd+2,f
  7691  17CA  0CDB               	rrf	??___fladd+1,f
  7692  17CB  0CDA               	rrf	??___fladd,f
  7693  17CC  0BDE               	decfsz	??___fladd+4,f
  7694  17CD  2FC7               	goto	u3845
  7695  17CE  085D               	movf	??___fladd+3,w
  7696  17CF  00D5               	movwf	___fladd@b+3
  7697  17D0  085C               	movf	??___fladd+2,w
  7698  17D1  00D4               	movwf	___fladd@b+2
  7699  17D2  085B               	movf	??___fladd+1,w
  7700  17D3  00D3               	movwf	___fladd@b+1
  7701  17D4  085A               	movf	??___fladd,w
  7702  17D5  00D2               	movwf	___fladd@b
  7703  17D6  0A64               	incf	___fladd@bexp,w
  7704  17D7  1903               	btfsc	3,2
  7705  17D8  2FDD               	goto	l693
  7706  17D9  3001               	movlw	1
  7707  17DA  00DA               	movwf	??___fladd
  7708  17DB  085A               	movf	??___fladd,w
  7709  17DC  07E4               	addwf	___fladd@bexp,f
  7710  17DD                     l693:	
  7711  17DD  0A64               	incf	___fladd@bexp,w
  7712  17DE  1D03               	btfss	3,2
  7713  17DF  0864               	movf	___fladd@bexp,w
  7714  17E0  1D03               	btfss	3,2
  7715  17E1  2FED               	goto	l2773
  7716  17E2  3000               	movlw	0
  7717  17E3  00D5               	movwf	___fladd@b+3
  7718  17E4  3000               	movlw	0
  7719  17E5  00D4               	movwf	___fladd@b+2
  7720  17E6  3000               	movlw	0
  7721  17E7  00D3               	movwf	___fladd@b+1
  7722  17E8  3000               	movlw	0
  7723  17E9  00D2               	movwf	___fladd@b
  7724  17EA  0864               	movf	___fladd@bexp,w
  7725  17EB  1903               	btfsc	3,2
  7726  17EC  01E2               	clrf	___fladd@signs
  7727  17ED                     l2773:	
  7728  17ED  1C64               	btfss	___fladd@bexp,0
  7729  17EE  2FF1               	goto	l2777
  7730  17EF  17D4               	bsf	___fladd@b+2,7
  7731  17F0  2FF5               	goto	l701
  7732  17F1                     l2777:	
  7733  17F1  307F               	movlw	127
  7734  17F2  00DA               	movwf	??___fladd
  7735  17F3  085A               	movf	??___fladd,w
  7736  17F4  05D4               	andwf	___fladd@b+2,f
  7737  17F5                     l701:	
  7738  17F5  0864               	movf	___fladd@bexp,w
  7739  17F6  00DA               	movwf	??___fladd
  7740  17F7  1003               	clrc
  7741  17F8  0C5A               	rrf	??___fladd,w
  7742  17F9  00DB               	movwf	??___fladd+1
  7743  17FA  085B               	movf	??___fladd+1,w
  7744  17FB  00D5               	movwf	___fladd@b+3
  7745  17FC  1FE2               	btfss	___fladd@signs,7
  7746  17FD  0008               	return
  7747  17FE  17D5               	bsf	___fladd@b+3,7
  7748  17FF  0008               	return
  7749  1800                     __end_of___fladd:	
  7750                           
  7751                           	psect	text19
  7752  0800                     __ptext19:	
  7753 ;; *************** function ___flneg *****************
  7754 ;; Defined at:
  7755 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;  f1              4    0[COMMON] unsigned char 
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  4    0[COMMON] unsigned char 
  7762 ;; Registers used:
  7763 ;;		wreg
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7769 ;;      Params:         4       0       0       0       0
  7770 ;;      Locals:         0       0       0       0       0
  7771 ;;      Temps:          0       0       0       0       0
  7772 ;;      Totals:         4       0       0       0       0
  7773 ;;Total ram usage:        4 bytes
  7774 ;; Hardware stack levels used:    1
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_sprintf
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           
  7783                           ;psect for function ___flneg
  7784  0800                     ___flneg:	
  7785                           
  7786                           ;incstack = 0
  7787                           ; Regs used in ___flneg: [wreg]
  7788  0800  0873               	movf	___flneg@f1+3,w
  7789  0801  0472               	iorwf	___flneg@f1+2,w
  7790  0802  0471               	iorwf	___flneg@f1+1,w
  7791  0803  0470               	iorwf	___flneg@f1,w
  7792  0804  1903               	skipnz
  7793  0805  0008               	return
  7794  0806  3080               	movlw	128
  7795  0807  06F3               	xorwf	___flneg@f1+3,f
  7796  0808  0008               	return
  7797  0809                     __end_of___flneg:	
  7798                           
  7799                           	psect	text20
  7800  1ECA                     __ptext20:	
  7801 ;; *************** function ___flge *****************
  7802 ;; Defined at:
  7803 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  ff1             4    0[COMMON] unsigned char 
  7806 ;;  ff2             4    4[COMMON] unsigned char 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;		None
  7809 ;; Return value:  Size  Location     Type
  7810 ;;		None               void
  7811 ;; Registers used:
  7812 ;;		wreg, status,2, status,0
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7818 ;;      Params:         8       0       0       0       0
  7819 ;;      Locals:         0       0       0       0       0
  7820 ;;      Temps:          4       0       0       0       0
  7821 ;;      Totals:        12       0       0       0       0
  7822 ;;Total ram usage:       12 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_sprintf
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           
  7832                           ;psect for function ___flge
  7833  1ECA                     ___flge:	
  7834                           
  7835                           ;incstack = 0
  7836                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7837  1ECA  3000               	movlw	0
  7838  1ECB  0570               	andwf	___flge@ff1,w
  7839  1ECC  00F8               	movwf	??___flge
  7840  1ECD  3000               	movlw	0
  7841  1ECE  0571               	andwf	___flge@ff1+1,w
  7842  1ECF  00F9               	movwf	??___flge+1
  7843  1ED0  3080               	movlw	128
  7844  1ED1  0572               	andwf	___flge@ff1+2,w
  7845  1ED2  00FA               	movwf	??___flge+2
  7846  1ED3  307F               	movlw	127
  7847  1ED4  0573               	andwf	___flge@ff1+3,w
  7848  1ED5  00FB               	movwf	??___flge+3
  7849  1ED6  087B               	movf	??___flge+3,w
  7850  1ED7  047A               	iorwf	??___flge+2,w
  7851  1ED8  0479               	iorwf	??___flge+1,w
  7852  1ED9  0478               	iorwf	??___flge,w
  7853  1EDA  1D03               	skipz
  7854  1EDB  2EE4               	goto	l523
  7855  1EDC  3000               	movlw	0
  7856  1EDD  00F3               	movwf	___flge@ff1+3
  7857  1EDE  3000               	movlw	0
  7858  1EDF  00F2               	movwf	___flge@ff1+2
  7859  1EE0  3000               	movlw	0
  7860  1EE1  00F1               	movwf	___flge@ff1+1
  7861  1EE2  3000               	movlw	0
  7862  1EE3  00F0               	movwf	___flge@ff1
  7863  1EE4                     l523:	
  7864  1EE4  3000               	movlw	0
  7865  1EE5  0574               	andwf	___flge@ff2,w
  7866  1EE6  00F8               	movwf	??___flge
  7867  1EE7  3000               	movlw	0
  7868  1EE8  0575               	andwf	___flge@ff2+1,w
  7869  1EE9  00F9               	movwf	??___flge+1
  7870  1EEA  3080               	movlw	128
  7871  1EEB  0576               	andwf	___flge@ff2+2,w
  7872  1EEC  00FA               	movwf	??___flge+2
  7873  1EED  307F               	movlw	127
  7874  1EEE  0577               	andwf	___flge@ff2+3,w
  7875  1EEF  00FB               	movwf	??___flge+3
  7876  1EF0  087B               	movf	??___flge+3,w
  7877  1EF1  047A               	iorwf	??___flge+2,w
  7878  1EF2  0479               	iorwf	??___flge+1,w
  7879  1EF3  0478               	iorwf	??___flge,w
  7880  1EF4  1D03               	skipz
  7881  1EF5  2EFE               	goto	l3237
  7882  1EF6  3000               	movlw	0
  7883  1EF7  00F7               	movwf	___flge@ff2+3
  7884  1EF8  3000               	movlw	0
  7885  1EF9  00F6               	movwf	___flge@ff2+2
  7886  1EFA  3000               	movlw	0
  7887  1EFB  00F5               	movwf	___flge@ff2+1
  7888  1EFC  3000               	movlw	0
  7889  1EFD  00F4               	movwf	___flge@ff2
  7890  1EFE                     l3237:	
  7891  1EFE  1FF3               	btfss	___flge@ff1+3,7
  7892  1EFF  2F24               	goto	l3241
  7893  1F00  3000               	movlw	0
  7894  1F01  00F8               	movwf	??___flge
  7895  1F02  3000               	movlw	0
  7896  1F03  00F9               	movwf	??___flge+1
  7897  1F04  3000               	movlw	0
  7898  1F05  00FA               	movwf	??___flge+2
  7899  1F06  3080               	movlw	128
  7900  1F07  00FB               	movwf	??___flge+3
  7901  1F08  0870               	movf	___flge@ff1,w
  7902  1F09  02F8               	subwf	??___flge,f
  7903  1F0A  0871               	movf	___flge@ff1+1,w
  7904  1F0B  1C03               	skipc
  7905  1F0C  0F71               	incfsz	___flge@ff1+1,w
  7906  1F0D  2F0F               	goto	u4921
  7907  1F0E  2F10               	goto	u4922
  7908  1F0F                     u4921:	
  7909  1F0F  02F9               	subwf	??___flge+1,f
  7910  1F10                     u4922:	
  7911  1F10  0872               	movf	___flge@ff1+2,w
  7912  1F11  1C03               	skipc
  7913  1F12  0F72               	incfsz	___flge@ff1+2,w
  7914  1F13  2F15               	goto	u4923
  7915  1F14  2F16               	goto	u4924
  7916  1F15                     u4923:	
  7917  1F15  02FA               	subwf	??___flge+2,f
  7918  1F16                     u4924:	
  7919  1F16  0873               	movf	___flge@ff1+3,w
  7920  1F17  1C03               	skipc
  7921  1F18  0F73               	incfsz	___flge@ff1+3,w
  7922  1F19  2F1B               	goto	u4925
  7923  1F1A  2F1C               	goto	u4926
  7924  1F1B                     u4925:	
  7925  1F1B  02FB               	subwf	??___flge+3,f
  7926  1F1C                     u4926:	
  7927  1F1C  087B               	movf	??___flge+3,w
  7928  1F1D  00F3               	movwf	___flge@ff1+3
  7929  1F1E  087A               	movf	??___flge+2,w
  7930  1F1F  00F2               	movwf	___flge@ff1+2
  7931  1F20  0879               	movf	??___flge+1,w
  7932  1F21  00F1               	movwf	___flge@ff1+1
  7933  1F22  0878               	movf	??___flge,w
  7934  1F23  00F0               	movwf	___flge@ff1
  7935  1F24                     l3241:	
  7936  1F24  1FF7               	btfss	___flge@ff2+3,7
  7937  1F25  2F4A               	goto	l526
  7938  1F26  3000               	movlw	0
  7939  1F27  00F8               	movwf	??___flge
  7940  1F28  3000               	movlw	0
  7941  1F29  00F9               	movwf	??___flge+1
  7942  1F2A  3000               	movlw	0
  7943  1F2B  00FA               	movwf	??___flge+2
  7944  1F2C  3080               	movlw	128
  7945  1F2D  00FB               	movwf	??___flge+3
  7946  1F2E  0874               	movf	___flge@ff2,w
  7947  1F2F  02F8               	subwf	??___flge,f
  7948  1F30  0875               	movf	___flge@ff2+1,w
  7949  1F31  1C03               	skipc
  7950  1F32  0F75               	incfsz	___flge@ff2+1,w
  7951  1F33  2F35               	goto	u4941
  7952  1F34  2F36               	goto	u4942
  7953  1F35                     u4941:	
  7954  1F35  02F9               	subwf	??___flge+1,f
  7955  1F36                     u4942:	
  7956  1F36  0876               	movf	___flge@ff2+2,w
  7957  1F37  1C03               	skipc
  7958  1F38  0F76               	incfsz	___flge@ff2+2,w
  7959  1F39  2F3B               	goto	u4943
  7960  1F3A  2F3C               	goto	u4944
  7961  1F3B                     u4943:	
  7962  1F3B  02FA               	subwf	??___flge+2,f
  7963  1F3C                     u4944:	
  7964  1F3C  0877               	movf	___flge@ff2+3,w
  7965  1F3D  1C03               	skipc
  7966  1F3E  0F77               	incfsz	___flge@ff2+3,w
  7967  1F3F  2F41               	goto	u4945
  7968  1F40  2F42               	goto	u4946
  7969  1F41                     u4945:	
  7970  1F41  02FB               	subwf	??___flge+3,f
  7971  1F42                     u4946:	
  7972  1F42  087B               	movf	??___flge+3,w
  7973  1F43  00F7               	movwf	___flge@ff2+3
  7974  1F44  087A               	movf	??___flge+2,w
  7975  1F45  00F6               	movwf	___flge@ff2+2
  7976  1F46  0879               	movf	??___flge+1,w
  7977  1F47  00F5               	movwf	___flge@ff2+1
  7978  1F48  0878               	movf	??___flge,w
  7979  1F49  00F4               	movwf	___flge@ff2
  7980  1F4A                     l526:	
  7981  1F4A  3080               	movlw	128
  7982  1F4B  06F3               	xorwf	___flge@ff1+3,f
  7983  1F4C  3080               	movlw	128
  7984  1F4D  06F7               	xorwf	___flge@ff2+3,f
  7985  1F4E  0877               	movf	___flge@ff2+3,w
  7986  1F4F  0273               	subwf	___flge@ff1+3,w
  7987  1F50  1D03               	skipz
  7988  1F51  0008               	return
  7989  1F52  0876               	movf	___flge@ff2+2,w
  7990  1F53  0272               	subwf	___flge@ff1+2,w
  7991  1F54  1D03               	skipz
  7992  1F55  0008               	return
  7993  1F56  0875               	movf	___flge@ff2+1,w
  7994  1F57  0271               	subwf	___flge@ff1+1,w
  7995  1F58  1D03               	skipz
  7996  1F59  0008               	return
  7997  1F5A  0874               	movf	___flge@ff2,w
  7998  1F5B  0270               	subwf	___flge@ff1,w
  7999  1F5C  0008               	return
  8000  1F5D                     __end_of___flge:	
  8001                           
  8002                           	psect	text21
  8003  1C80                     __ptext21:	
  8004 ;; *************** function ___fleq *****************
  8005 ;; Defined at:
  8006 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  ff1             4    0[COMMON] unsigned char 
  8009 ;;  ff2             4    4[COMMON] unsigned char 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;		None
  8012 ;; Return value:  Size  Location     Type
  8013 ;;		None               void
  8014 ;; Registers used:
  8015 ;;		wreg, status,2, status,0
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8021 ;;      Params:         8       0       0       0       0
  8022 ;;      Locals:         0       0       0       0       0
  8023 ;;      Temps:          4       0       0       0       0
  8024 ;;      Totals:        12       0       0       0       0
  8025 ;;Total ram usage:       12 bytes
  8026 ;; Hardware stack levels used:    1
  8027 ;; This function calls:
  8028 ;;		Nothing
  8029 ;; This function is called by:
  8030 ;;		_sprintf
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           
  8035                           ;psect for function ___fleq
  8036  1C80                     ___fleq:	
  8037                           
  8038                           ;incstack = 0
  8039                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8040  1C80  3000               	movlw	0
  8041  1C81  0570               	andwf	___fleq@ff1,w
  8042  1C82  00F8               	movwf	??___fleq
  8043  1C83  3000               	movlw	0
  8044  1C84  0571               	andwf	___fleq@ff1+1,w
  8045  1C85  00F9               	movwf	??___fleq+1
  8046  1C86  3080               	movlw	128
  8047  1C87  0572               	andwf	___fleq@ff1+2,w
  8048  1C88  00FA               	movwf	??___fleq+2
  8049  1C89  307F               	movlw	127
  8050  1C8A  0573               	andwf	___fleq@ff1+3,w
  8051  1C8B  00FB               	movwf	??___fleq+3
  8052  1C8C  087B               	movf	??___fleq+3,w
  8053  1C8D  047A               	iorwf	??___fleq+2,w
  8054  1C8E  0479               	iorwf	??___fleq+1,w
  8055  1C8F  0478               	iorwf	??___fleq,w
  8056  1C90  1D03               	skipz
  8057  1C91  2C9A               	goto	l518
  8058  1C92  3000               	movlw	0
  8059  1C93  00F3               	movwf	___fleq@ff1+3
  8060  1C94  3000               	movlw	0
  8061  1C95  00F2               	movwf	___fleq@ff1+2
  8062  1C96  3000               	movlw	0
  8063  1C97  00F1               	movwf	___fleq@ff1+1
  8064  1C98  3000               	movlw	0
  8065  1C99  00F0               	movwf	___fleq@ff1
  8066  1C9A                     l518:	
  8067  1C9A  3000               	movlw	0
  8068  1C9B  0574               	andwf	___fleq@ff2,w
  8069  1C9C  00F8               	movwf	??___fleq
  8070  1C9D  3000               	movlw	0
  8071  1C9E  0575               	andwf	___fleq@ff2+1,w
  8072  1C9F  00F9               	movwf	??___fleq+1
  8073  1CA0  3080               	movlw	128
  8074  1CA1  0576               	andwf	___fleq@ff2+2,w
  8075  1CA2  00FA               	movwf	??___fleq+2
  8076  1CA3  307F               	movlw	127
  8077  1CA4  0577               	andwf	___fleq@ff2+3,w
  8078  1CA5  00FB               	movwf	??___fleq+3
  8079  1CA6  087B               	movf	??___fleq+3,w
  8080  1CA7  047A               	iorwf	??___fleq+2,w
  8081  1CA8  0479               	iorwf	??___fleq+1,w
  8082  1CA9  0478               	iorwf	??___fleq,w
  8083  1CAA  1D03               	skipz
  8084  1CAB  2CB4               	goto	l519
  8085  1CAC  3000               	movlw	0
  8086  1CAD  00F7               	movwf	___fleq@ff2+3
  8087  1CAE  3000               	movlw	0
  8088  1CAF  00F6               	movwf	___fleq@ff2+2
  8089  1CB0  3000               	movlw	0
  8090  1CB1  00F5               	movwf	___fleq@ff2+1
  8091  1CB2  3000               	movlw	0
  8092  1CB3  00F4               	movwf	___fleq@ff2
  8093  1CB4                     l519:	
  8094  1CB4  0877               	movf	___fleq@ff2+3,w
  8095  1CB5  0673               	xorwf	___fleq@ff1+3,w
  8096  1CB6  1D03               	skipz
  8097  1CB7  2CC2               	goto	u4885
  8098  1CB8  0876               	movf	___fleq@ff2+2,w
  8099  1CB9  0672               	xorwf	___fleq@ff1+2,w
  8100  1CBA  1D03               	skipz
  8101  1CBB  2CC2               	goto	u4885
  8102  1CBC  0875               	movf	___fleq@ff2+1,w
  8103  1CBD  0671               	xorwf	___fleq@ff1+1,w
  8104  1CBE  1D03               	skipz
  8105  1CBF  2CC2               	goto	u4885
  8106  1CC0  0874               	movf	___fleq@ff2,w
  8107  1CC1  0670               	xorwf	___fleq@ff1,w
  8108  1CC2                     u4885:	
  8109  1CC2  1903               	skipnz
  8110  1CC3  2CC6               	goto	l3227
  8111  1CC4  1003               	clrc
  8112  1CC5  0008               	return
  8113  1CC6                     l3227:	
  8114  1CC6  1403               	setc
  8115  1CC7  0008               	return
  8116  1CC8                     __end_of___fleq:	
  8117                           
  8118                           	psect	text22
  8119  1B7E                     __ptext22:	
  8120 ;; *************** function _setup *****************
  8121 ;; Defined at:
  8122 ;;		line 119 in file "Master_main.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;		None
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2, status,0, pclath, cstack
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8136 ;;      Params:         0       0       0       0       0
  8137 ;;      Locals:         0       0       0       0       0
  8138 ;;      Temps:          0       0       0       0       0
  8139 ;;      Totals:         0       0       0       0       0
  8140 ;;Total ram usage:        0 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:    3
  8143 ;; This function calls:
  8144 ;;		_I2C_Master_Init
  8145 ;;		_LCD8_begin
  8146 ;;		_mpu_begin
  8147 ;;		_oscilator_begin
  8148 ;; This function is called by:
  8149 ;;		_main
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           
  8154                           ;psect for function _setup
  8155  1B7E                     _setup:	
  8156                           
  8157                           ;Master_main.c: 120:     oscilator_begin(7);
  8158                           
  8159                           ;incstack = 0
  8160                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  8161  1B7E  3007               	movlw	7
  8162  1B7F  160A  158A  2265  160A  158A  	fcall	_oscilator_begin
  8163                           
  8164                           ;Master_main.c: 121:     TRISA = 0;
  8165  1B84  1683               	bsf	3,5	;RP0=1, select bank1
  8166  1B85  1303               	bcf	3,6	;RP1=0, select bank1
  8167  1B86  0185               	clrf	5	;volatile
  8168                           
  8169                           ;Master_main.c: 122:     TRISB = 0;
  8170  1B87  0186               	clrf	6	;volatile
  8171                           
  8172                           ;Master_main.c: 123:     ANSEL = 0;
  8173  1B88  1683               	bsf	3,5	;RP0=1, select bank3
  8174  1B89  1703               	bsf	3,6	;RP1=1, select bank3
  8175  1B8A  0188               	clrf	8	;volatile
  8176                           
  8177                           ;Master_main.c: 124:     ANSELH = 0;
  8178  1B8B  0189               	clrf	9	;volatile
  8179                           
  8180                           ;Master_main.c: 125:     PORTA = 0;
  8181  1B8C  1283               	bcf	3,5	;RP0=0, select bank0
  8182  1B8D  1303               	bcf	3,6	;RP1=0, select bank0
  8183  1B8E  0185               	clrf	5	;volatile
  8184                           
  8185                           ;Master_main.c: 126:     LCD8_begin();
  8186  1B8F  160A  158A  25AE  160A  158A  	fcall	_LCD8_begin
  8187                           
  8188                           ;Master_main.c: 127:     I2C_Master_Init(100000);
  8189  1B94  3000               	movlw	0
  8190  1B95  1283               	bcf	3,5	;RP0=0, select bank0
  8191  1B96  1303               	bcf	3,6	;RP1=0, select bank0
  8192  1B97  00A3               	movwf	I2C_Master_Init@c+3
  8193  1B98  3001               	movlw	1
  8194  1B99  00A2               	movwf	I2C_Master_Init@c+2
  8195  1B9A  3086               	movlw	134
  8196  1B9B  00A1               	movwf	I2C_Master_Init@c+1
  8197  1B9C  30A0               	movlw	160
  8198  1B9D  00A0               	movwf	I2C_Master_Init@c
  8199  1B9E  160A  158A  240E  160A  158A  	fcall	_I2C_Master_Init
  8200                           
  8201                           ;Master_main.c: 128:     mpu_begin();
  8202  1BA3  120A  118A  2011   	fcall	_mpu_begin
  8203                           
  8204                           ;Master_main.c: 129:     counter_read= 0;
  8205  1BA6  1683               	bsf	3,5	;RP0=1, select bank1
  8206  1BA7  1303               	bcf	3,6	;RP1=0, select bank1
  8207  1BA8  01D6               	clrf	_counter_read^(0+128)
  8208  1BA9  01D7               	clrf	(_counter_read+1)^(0+128)
  8209  1BAA  0008               	return
  8210  1BAB                     __end_of_setup:	
  8211                           
  8212                           	psect	text23
  8213  1A65                     __ptext23:	
  8214 ;; *************** function _oscilator_begin *****************
  8215 ;; Defined at:
  8216 ;;		line 9 in file "./OsciladorLibs.h"
  8217 ;; Parameters:    Size  Location     Type
  8218 ;;  freq            1    wreg     unsigned char 
  8219 ;; Auto vars:     Size  Location     Type
  8220 ;;  freq            1    1[COMMON] unsigned char 
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  1    wreg      void 
  8223 ;; Registers used:
  8224 ;;		wreg, status,2, status,0
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8230 ;;      Params:         0       0       0       0       0
  8231 ;;      Locals:         1       0       0       0       0
  8232 ;;      Temps:          1       0       0       0       0
  8233 ;;      Totals:         2       0       0       0       0
  8234 ;;Total ram usage:        2 bytes
  8235 ;; Hardware stack levels used:    1
  8236 ;; This function calls:
  8237 ;;		Nothing
  8238 ;; This function is called by:
  8239 ;;		_setup
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           
  8244                           ;psect for function _oscilator_begin
  8245  1A65                     _oscilator_begin:	
  8246                           
  8247                           ;incstack = 0
  8248                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
  8249                           ;oscilator_begin@freq stored from wreg
  8250  1A65  00F1               	movwf	oscilator_begin@freq
  8251                           
  8252                           ;./OsciladorLibs.h: 10:     OSCCONbits.IRCF = freq;
  8253  1A66  0871               	movf	oscilator_begin@freq,w
  8254  1A67  00F0               	movwf	??_oscilator_begin
  8255  1A68  0EF0               	swapf	??_oscilator_begin,f
  8256  1A69  1683               	bsf	3,5	;RP0=1, select bank1
  8257  1A6A  1303               	bcf	3,6	;RP1=0, select bank1
  8258  1A6B  080F               	movf	15,w	;volatile
  8259  1A6C  0670               	xorwf	??_oscilator_begin,w
  8260  1A6D  398F               	andlw	-113
  8261  1A6E  0670               	xorwf	??_oscilator_begin,w
  8262  1A6F  008F               	movwf	15	;volatile
  8263                           
  8264                           ;./OsciladorLibs.h: 11:     OSCCONbits.SCS = 1;
  8265  1A70  140F               	bsf	15,0	;volatile
  8266                           
  8267                           ;./OsciladorLibs.h: 12:     OSCCONbits.OSTS = 0;
  8268  1A71  118F               	bcf	15,3	;volatile
  8269  1A72  0008               	return
  8270  1A73                     __end_of_oscilator_begin:	
  8271                           
  8272                           	psect	text24
  8273  0011                     __ptext24:	
  8274 ;; *************** function _mpu_begin *****************
  8275 ;; Defined at:
  8276 ;;		line 62 in file "Master_main.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;		None
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;		None
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      void 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0, pclath, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8290 ;;      Params:         0       0       0       0       0
  8291 ;;      Locals:         0       0       0       0       0
  8292 ;;      Temps:          3       0       0       0       0
  8293 ;;      Totals:         3       0       0       0       0
  8294 ;;Total ram usage:        3 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    2
  8297 ;; This function calls:
  8298 ;;		_I2C_Master_Start
  8299 ;;		_I2C_Master_Stop
  8300 ;;		_I2C_Master_Write
  8301 ;; This function is called by:
  8302 ;;		_setup
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           
  8307                           ;psect for function _mpu_begin
  8308  0011                     _mpu_begin:	
  8309                           
  8310                           ;Master_main.c: 63:     _delay((unsigned long)((150)*(8000000/4000.0)));
  8311                           
  8312                           ;incstack = 0
  8313                           ; Regs used in _mpu_begin: [wreg+status,2+status,0+pclath+cstack]
  8314  0011  3002               	movlw	2
  8315  0012  00F4               	movwf	??_mpu_begin+2
  8316  0013  3086               	movlw	134
  8317  0014  00F3               	movwf	??_mpu_begin+1
  8318  0015  3099               	movlw	153
  8319  0016  00F2               	movwf	??_mpu_begin
  8320  0017                     u6007:	
  8321  0017  0BF2               	decfsz	??_mpu_begin,f
  8322  0018  2817               	goto	u6007
  8323  0019  0BF3               	decfsz	??_mpu_begin+1,f
  8324  001A  2817               	goto	u6007
  8325  001B  0BF4               	decfsz	??_mpu_begin+2,f
  8326  001C  2817               	goto	u6007
  8327                           
  8328                           ;Master_main.c: 64:     I2C_Master_Start();
  8329  001D  160A  158A  2233  120A  118A  	fcall	_I2C_Master_Start
  8330                           
  8331                           ;Master_main.c: 65:     I2C_Master_Write(0xD0);
  8332  0022  30D0               	movlw	208
  8333  0023  00F0               	movwf	I2C_Master_Write@d
  8334  0024  3000               	movlw	0
  8335  0025  00F1               	movwf	I2C_Master_Write@d+1
  8336  0026  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8337                           
  8338                           ;Master_main.c: 66:     I2C_Master_Write(0x19);
  8339  002B  3019               	movlw	25
  8340  002C  00F0               	movwf	I2C_Master_Write@d
  8341  002D  3000               	movlw	0
  8342  002E  00F1               	movwf	I2C_Master_Write@d+1
  8343  002F  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8344                           
  8345                           ;Master_main.c: 67:  I2C_Master_Write(7);
  8346  0034  3007               	movlw	7
  8347  0035  00F0               	movwf	I2C_Master_Write@d
  8348  0036  3000               	movlw	0
  8349  0037  00F1               	movwf	I2C_Master_Write@d+1
  8350  0038  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8351                           
  8352                           ;Master_main.c: 68:  I2C_Master_Stop();
  8353  003D  160A  158A  223A  120A  118A  	fcall	_I2C_Master_Stop
  8354                           
  8355                           ;Master_main.c: 70:     I2C_Master_Start();
  8356  0042  160A  158A  2233  120A  118A  	fcall	_I2C_Master_Start
  8357                           
  8358                           ;Master_main.c: 71:     I2C_Master_Write(0xD0);
  8359  0047  30D0               	movlw	208
  8360  0048  00F0               	movwf	I2C_Master_Write@d
  8361  0049  3000               	movlw	0
  8362  004A  00F1               	movwf	I2C_Master_Write@d+1
  8363  004B  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8364                           
  8365                           ;Master_main.c: 72:     I2C_Master_Write(0x6B);
  8366  0050  306B               	movlw	107
  8367  0051  00F0               	movwf	I2C_Master_Write@d
  8368  0052  3000               	movlw	0
  8369  0053  00F1               	movwf	I2C_Master_Write@d+1
  8370  0054  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8371                           
  8372                           ;Master_main.c: 73:  I2C_Master_Write(1);
  8373  0059  3001               	movlw	1
  8374  005A  00F0               	movwf	I2C_Master_Write@d
  8375  005B  3000               	movlw	0
  8376  005C  00F1               	movwf	I2C_Master_Write@d+1
  8377  005D  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8378                           
  8379                           ;Master_main.c: 74:  I2C_Master_Stop();
  8380  0062  160A  158A  223A  120A  118A  	fcall	_I2C_Master_Stop
  8381                           
  8382                           ;Master_main.c: 76:     I2C_Master_Start();
  8383  0067  160A  158A  2233  120A  118A  	fcall	_I2C_Master_Start
  8384                           
  8385                           ;Master_main.c: 77:     I2C_Master_Write(0xD0);
  8386  006C  30D0               	movlw	208
  8387  006D  00F0               	movwf	I2C_Master_Write@d
  8388  006E  3000               	movlw	0
  8389  006F  00F1               	movwf	I2C_Master_Write@d+1
  8390  0070  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8391                           
  8392                           ;Master_main.c: 78:     I2C_Master_Write(0x1A);
  8393  0075  301A               	movlw	26
  8394  0076  00F0               	movwf	I2C_Master_Write@d
  8395  0077  3000               	movlw	0
  8396  0078  00F1               	movwf	I2C_Master_Write@d+1
  8397  0079  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8398                           
  8399                           ;Master_main.c: 79:  I2C_Master_Write(0);
  8400  007E  3000               	movlw	0
  8401  007F  00F0               	movwf	I2C_Master_Write@d
  8402  0080  00F1               	movwf	I2C_Master_Write@d+1
  8403  0081  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8404                           
  8405                           ;Master_main.c: 80:  I2C_Master_Stop();
  8406  0086  160A  158A  223A  120A  118A  	fcall	_I2C_Master_Stop
  8407                           
  8408                           ;Master_main.c: 82:     I2C_Master_Start();
  8409  008B  160A  158A  2233  120A  118A  	fcall	_I2C_Master_Start
  8410                           
  8411                           ;Master_main.c: 83:     I2C_Master_Write(0xD0);
  8412  0090  30D0               	movlw	208
  8413  0091  00F0               	movwf	I2C_Master_Write@d
  8414  0092  3000               	movlw	0
  8415  0093  00F1               	movwf	I2C_Master_Write@d+1
  8416  0094  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8417                           
  8418                           ;Master_main.c: 84:     I2C_Master_Write(0x1B);
  8419  0099  301B               	movlw	27
  8420  009A  00F0               	movwf	I2C_Master_Write@d
  8421  009B  3000               	movlw	0
  8422  009C  00F1               	movwf	I2C_Master_Write@d+1
  8423  009D  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8424                           
  8425                           ;Master_main.c: 85:  I2C_Master_Write(0x18);
  8426  00A2  3018               	movlw	24
  8427  00A3  00F0               	movwf	I2C_Master_Write@d
  8428  00A4  3000               	movlw	0
  8429  00A5  00F1               	movwf	I2C_Master_Write@d+1
  8430  00A6  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8431                           
  8432                           ;Master_main.c: 86:  I2C_Master_Stop();
  8433  00AB  160A  158A  223A  120A  118A  	fcall	_I2C_Master_Stop
  8434                           
  8435                           ;Master_main.c: 88:     I2C_Master_Start();
  8436  00B0  160A  158A  2233  120A  118A  	fcall	_I2C_Master_Start
  8437                           
  8438                           ;Master_main.c: 89:     I2C_Master_Write(0xD0);
  8439  00B5  30D0               	movlw	208
  8440  00B6  00F0               	movwf	I2C_Master_Write@d
  8441  00B7  3000               	movlw	0
  8442  00B8  00F1               	movwf	I2C_Master_Write@d+1
  8443  00B9  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8444                           
  8445                           ;Master_main.c: 90:     I2C_Master_Write(0x38);
  8446  00BE  3038               	movlw	56
  8447  00BF  00F0               	movwf	I2C_Master_Write@d
  8448  00C0  3000               	movlw	0
  8449  00C1  00F1               	movwf	I2C_Master_Write@d+1
  8450  00C2  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8451                           
  8452                           ;Master_main.c: 91:  I2C_Master_Write(1);
  8453  00C7  3001               	movlw	1
  8454  00C8  00F0               	movwf	I2C_Master_Write@d
  8455  00C9  3000               	movlw	0
  8456  00CA  00F1               	movwf	I2C_Master_Write@d+1
  8457  00CB  160A  158A  2241  120A  118A  	fcall	_I2C_Master_Write
  8458                           
  8459                           ;Master_main.c: 92:  I2C_Master_Stop();
  8460  00D0  160A  158A  223A   	fcall	_I2C_Master_Stop
  8461  00D3  0008               	return
  8462  00D4                     __end_of_mpu_begin:	
  8463                           
  8464                           	psect	text25
  8465  1DAE                     __ptext25:	
  8466 ;; *************** function _LCD8_begin *****************
  8467 ;; Defined at:
  8468 ;;		line 37 in file "./LCD8bit.h"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;		None
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;		None
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  1    wreg      void 
  8475 ;; Registers used:
  8476 ;;		wreg, status,2, status,0, pclath, cstack
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8482 ;;      Params:         0       0       0       0       0
  8483 ;;      Locals:         0       0       0       0       0
  8484 ;;      Temps:          2       0       0       0       0
  8485 ;;      Totals:         2       0       0       0       0
  8486 ;;Total ram usage:        2 bytes
  8487 ;; Hardware stack levels used:    1
  8488 ;; Hardware stack levels required when called:    1
  8489 ;; This function calls:
  8490 ;;		_LCD8_cmd
  8491 ;; This function is called by:
  8492 ;;		_setup
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           
  8497                           ;psect for function _LCD8_begin
  8498  1DAE                     _LCD8_begin:	
  8499                           
  8500                           ;./LCD8bit.h: 38:     PORTB = 0;
  8501                           
  8502                           ;incstack = 0
  8503                           ; Regs used in _LCD8_begin: [wreg+status,2+status,0+pclath+cstack]
  8504  1DAE  1283               	bcf	3,5	;RP0=0, select bank0
  8505  1DAF  1303               	bcf	3,6	;RP1=0, select bank0
  8506  1DB0  0186               	clrf	6	;volatile
  8507                           
  8508                           ;./LCD8bit.h: 39:     _delay((unsigned long)((20)*(8000000/4000.0)));
  8509  1DB1  3034               	movlw	52
  8510  1DB2  00F4               	movwf	??_LCD8_begin+1
  8511  1DB3  30F1               	movlw	241
  8512  1DB4  00F3               	movwf	??_LCD8_begin
  8513  1DB5                     u6017:	
  8514  1DB5  0BF3               	decfsz	??_LCD8_begin,f
  8515  1DB6  2DB5               	goto	u6017
  8516  1DB7  0BF4               	decfsz	??_LCD8_begin+1,f
  8517  1DB8  2DB5               	goto	u6017
  8518  1DB9  2DBA               	nop2
  8519                           
  8520                           ;./LCD8bit.h: 40:     LCD8_cmd(48);
  8521  1DBA  3030               	movlw	48
  8522  1DBB  160A  158A  2283  160A  158A  	fcall	_LCD8_cmd
  8523                           
  8524                           ;./LCD8bit.h: 41:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8525  1DC0  300D               	movlw	13
  8526  1DC1  00F4               	movwf	??_LCD8_begin+1
  8527  1DC2  30FB               	movlw	251
  8528  1DC3  00F3               	movwf	??_LCD8_begin
  8529  1DC4                     u6027:	
  8530  1DC4  0BF3               	decfsz	??_LCD8_begin,f
  8531  1DC5  2DC4               	goto	u6027
  8532  1DC6  0BF4               	decfsz	??_LCD8_begin+1,f
  8533  1DC7  2DC4               	goto	u6027
  8534  1DC8  2DC9               	nop2
  8535                           
  8536                           ;./LCD8bit.h: 42:     LCD8_cmd(48);
  8537  1DC9  3030               	movlw	48
  8538  1DCA  160A  158A  2283  160A  158A  	fcall	_LCD8_cmd
  8539                           
  8540                           ;./LCD8bit.h: 43:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  8541  1DCF  306D               	movlw	109
  8542  1DD0  00F3               	movwf	??_LCD8_begin
  8543  1DD1                     u6037:	
  8544  1DD1  0BF3               	decfsz	??_LCD8_begin,f
  8545  1DD2  2DD1               	goto	u6037
  8546  1DD3  2DD4               	nop2
  8547                           
  8548                           ;./LCD8bit.h: 44:     LCD8_cmd(48);
  8549  1DD4  3030               	movlw	48
  8550  1DD5  160A  158A  2283  160A  158A  	fcall	_LCD8_cmd
  8551                           
  8552                           ;./LCD8bit.h: 45:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  8553  1DDA  306D               	movlw	109
  8554  1DDB  00F3               	movwf	??_LCD8_begin
  8555  1DDC                     u6047:	
  8556  1DDC  0BF3               	decfsz	??_LCD8_begin,f
  8557  1DDD  2DDC               	goto	u6047
  8558  1DDE  2DDF               	nop2
  8559                           
  8560                           ;./LCD8bit.h: 47:     LCD8_cmd(0b111000);
  8561  1DDF  3038               	movlw	56
  8562  1DE0  160A  158A  2283  160A  158A  	fcall	_LCD8_cmd
  8563                           
  8564                           ;./LCD8bit.h: 48:     LCD8_cmd(0b10100);
  8565  1DE5  3014               	movlw	20
  8566  1DE6  160A  158A  2283  160A  158A  	fcall	_LCD8_cmd
  8567                           
  8568                           ;./LCD8bit.h: 49:     LCD8_cmd(1);
  8569  1DEB  3001               	movlw	1
  8570  1DEC  160A  158A  2283  160A  158A  	fcall	_LCD8_cmd
  8571                           
  8572                           ;./LCD8bit.h: 50:     LCD8_cmd(0b110);
  8573  1DF1  3006               	movlw	6
  8574  1DF2  160A  158A  2283  160A  158A  	fcall	_LCD8_cmd
  8575                           
  8576                           ;./LCD8bit.h: 51:     LCD8_cmd(0b1100);
  8577  1DF7  300C               	movlw	12
  8578  1DF8  160A  158A  2283  160A  158A  	fcall	_LCD8_cmd
  8579                           
  8580                           ;./LCD8bit.h: 52:     LCD8_cmd(0b10);
  8581  1DFD  3002               	movlw	2
  8582  1DFE  160A  158A  2283   	fcall	_LCD8_cmd
  8583  1E01  0008               	return
  8584  1E02                     __end_of_LCD8_begin:	
  8585                           
  8586                           	psect	text26
  8587  1C0E                     __ptext26:	
  8588 ;; *************** function _I2C_Master_Init *****************
  8589 ;; Defined at:
  8590 ;;		line 15 in file "./I2C.h"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  c               4    0[BANK0 ] const unsigned long 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;		None
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0, pclath, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8604 ;;      Params:         0       4       0       0       0
  8605 ;;      Locals:         0       0       0       0       0
  8606 ;;      Temps:          0       4       0       0       0
  8607 ;;      Totals:         0       8       0       0       0
  8608 ;;Total ram usage:        8 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    1
  8611 ;; This function calls:
  8612 ;;		___lldiv
  8613 ;; This function is called by:
  8614 ;;		_setup
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           
  8619                           ;psect for function _I2C_Master_Init
  8620  1C0E                     _I2C_Master_Init:	
  8621                           
  8622                           ;./I2C.h: 15: void I2C_Master_Init(const unsigned long c);./I2C.h: 16: {;./I2C.h: 17:   
      +                            SSPCON = 0b00101000;
  8623                           
  8624                           ;incstack = 0
  8625                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  8626  1C0E  3028               	movlw	40
  8627  1C0F  1283               	bcf	3,5	;RP0=0, select bank0
  8628  1C10  1303               	bcf	3,6	;RP1=0, select bank0
  8629  1C11  0094               	movwf	20	;volatile
  8630                           
  8631                           ;./I2C.h: 18:     SSPCON2 = 0;
  8632  1C12  1683               	bsf	3,5	;RP0=1, select bank1
  8633  1C13  1303               	bcf	3,6	;RP1=0, select bank1
  8634  1C14  0191               	clrf	17	;volatile
  8635                           
  8636                           ;./I2C.h: 19:     SSPADD = (8000000/(4*c))-1;
  8637  1C15  1283               	bcf	3,5	;RP0=0, select bank0
  8638  1C16  1303               	bcf	3,6	;RP1=0, select bank0
  8639  1C17  0820               	movf	I2C_Master_Init@c,w
  8640  1C18  00A4               	movwf	??_I2C_Master_Init
  8641  1C19  0821               	movf	I2C_Master_Init@c+1,w
  8642  1C1A  00A5               	movwf	??_I2C_Master_Init+1
  8643  1C1B  0822               	movf	I2C_Master_Init@c+2,w
  8644  1C1C  00A6               	movwf	??_I2C_Master_Init+2
  8645  1C1D  0823               	movf	I2C_Master_Init@c+3,w
  8646  1C1E  00A7               	movwf	??_I2C_Master_Init+3
  8647  1C1F  3002               	movlw	2
  8648  1C20                     u4285:	
  8649  1C20  1003               	clrc
  8650  1C21  0DA4               	rlf	??_I2C_Master_Init,f
  8651  1C22  0DA5               	rlf	??_I2C_Master_Init+1,f
  8652  1C23  0DA6               	rlf	??_I2C_Master_Init+2,f
  8653  1C24  0DA7               	rlf	??_I2C_Master_Init+3,f
  8654  1C25  3EFF               	addlw	-1
  8655  1C26  1D03               	skipz
  8656  1C27  2C20               	goto	u4285
  8657  1C28  0827               	movf	??_I2C_Master_Init+3,w
  8658  1C29  00F3               	movwf	___lldiv@divisor+3
  8659  1C2A  0826               	movf	??_I2C_Master_Init+2,w
  8660  1C2B  00F2               	movwf	___lldiv@divisor+2
  8661  1C2C  0825               	movf	??_I2C_Master_Init+1,w
  8662  1C2D  00F1               	movwf	___lldiv@divisor+1
  8663  1C2E  0824               	movf	??_I2C_Master_Init,w
  8664  1C2F  00F0               	movwf	___lldiv@divisor
  8665  1C30  3000               	movlw	0
  8666  1C31  00F7               	movwf	___lldiv@dividend+3
  8667  1C32  307A               	movlw	122
  8668  1C33  00F6               	movwf	___lldiv@dividend+2
  8669  1C34  3012               	movlw	18
  8670  1C35  00F5               	movwf	___lldiv@dividend+1
  8671  1C36  3000               	movlw	0
  8672  1C37  00F4               	movwf	___lldiv@dividend
  8673  1C38  120A  158A  2009   	fcall	___lldiv
  8674  1C3B  0870               	movf	?___lldiv,w
  8675  1C3C  3EFF               	addlw	255
  8676  1C3D  1683               	bsf	3,5	;RP0=1, select bank1
  8677  1C3E  1303               	bcf	3,6	;RP1=0, select bank1
  8678  1C3F  0093               	movwf	19	;volatile
  8679                           
  8680                           ;./I2C.h: 20:     SSPSTAT = 0;
  8681  1C40  0194               	clrf	20	;volatile
  8682                           
  8683                           ;./I2C.h: 21:     TRISC3 = 1;
  8684  1C41  1587               	bsf	7,3	;volatile
  8685                           
  8686                           ;./I2C.h: 22:     TRISC4 = 1;
  8687  1C42  1607               	bsf	7,4	;volatile
  8688  1C43  0008               	return
  8689  1C44                     __end_of_I2C_Master_Init:	
  8690                           
  8691                           	psect	text27
  8692  0809                     __ptext27:	
  8693 ;; *************** function ___lldiv *****************
  8694 ;; Defined at:
  8695 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  divisor         4    0[COMMON] unsigned long 
  8698 ;;  dividend        4    4[COMMON] unsigned long 
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  quotient        4    9[COMMON] unsigned long 
  8701 ;;  counter         1   13[COMMON] unsigned char 
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  4    0[COMMON] unsigned long 
  8704 ;; Registers used:
  8705 ;;		wreg, status,2, status,0
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8711 ;;      Params:         8       0       0       0       0
  8712 ;;      Locals:         5       0       0       0       0
  8713 ;;      Temps:          1       0       0       0       0
  8714 ;;      Totals:        14       0       0       0       0
  8715 ;;Total ram usage:       14 bytes
  8716 ;; Hardware stack levels used:    1
  8717 ;; This function calls:
  8718 ;;		Nothing
  8719 ;; This function is called by:
  8720 ;;		_I2C_Master_Init
  8721 ;;		_sprintf
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           
  8726                           ;psect for function ___lldiv
  8727  0809                     ___lldiv:	
  8728                           
  8729                           ;incstack = 0
  8730                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8731  0809  3000               	movlw	0
  8732  080A  00FC               	movwf	___lldiv@quotient+3
  8733  080B  3000               	movlw	0
  8734  080C  00FB               	movwf	___lldiv@quotient+2
  8735  080D  3000               	movlw	0
  8736  080E  00FA               	movwf	___lldiv@quotient+1
  8737  080F  3000               	movlw	0
  8738  0810  00F9               	movwf	___lldiv@quotient
  8739  0811  0873               	movf	___lldiv@divisor+3,w
  8740  0812  0472               	iorwf	___lldiv@divisor+2,w
  8741  0813  0471               	iorwf	___lldiv@divisor+1,w
  8742  0814  0470               	iorwf	___lldiv@divisor,w
  8743  0815  1903               	skipnz
  8744  0816  285E               	goto	l2455
  8745  0817  01FD               	clrf	___lldiv@counter
  8746  0818  0AFD               	incf	___lldiv@counter,f
  8747  0819                     l2441:	
  8748  0819  1BF3               	btfsc	___lldiv@divisor+3,7
  8749  081A  2829               	goto	l2443
  8750  081B  3001               	movlw	1
  8751  081C  00F8               	movwf	??___lldiv
  8752  081D                     u3075:	
  8753  081D  1003               	clrc
  8754  081E  0DF0               	rlf	___lldiv@divisor,f
  8755  081F  0DF1               	rlf	___lldiv@divisor+1,f
  8756  0820  0DF2               	rlf	___lldiv@divisor+2,f
  8757  0821  0DF3               	rlf	___lldiv@divisor+3,f
  8758  0822  0BF8               	decfsz	??___lldiv,f
  8759  0823  281D               	goto	u3075
  8760  0824  3001               	movlw	1
  8761  0825  00F8               	movwf	??___lldiv
  8762  0826  0878               	movf	??___lldiv,w
  8763  0827  07FD               	addwf	___lldiv@counter,f
  8764  0828  2819               	goto	l2441
  8765  0829                     l2443:	
  8766  0829  3001               	movlw	1
  8767  082A  00F8               	movwf	??___lldiv
  8768  082B                     u3095:	
  8769  082B  1003               	clrc
  8770  082C  0DF9               	rlf	___lldiv@quotient,f
  8771  082D  0DFA               	rlf	___lldiv@quotient+1,f
  8772  082E  0DFB               	rlf	___lldiv@quotient+2,f
  8773  082F  0DFC               	rlf	___lldiv@quotient+3,f
  8774  0830  0BF8               	decfsz	??___lldiv,f
  8775  0831  282B               	goto	u3095
  8776  0832  0873               	movf	___lldiv@divisor+3,w
  8777  0833  0277               	subwf	___lldiv@dividend+3,w
  8778  0834  1D03               	skipz
  8779  0835  2840               	goto	u3105
  8780  0836  0872               	movf	___lldiv@divisor+2,w
  8781  0837  0276               	subwf	___lldiv@dividend+2,w
  8782  0838  1D03               	skipz
  8783  0839  2840               	goto	u3105
  8784  083A  0871               	movf	___lldiv@divisor+1,w
  8785  083B  0275               	subwf	___lldiv@dividend+1,w
  8786  083C  1D03               	skipz
  8787  083D  2840               	goto	u3105
  8788  083E  0870               	movf	___lldiv@divisor,w
  8789  083F  0274               	subwf	___lldiv@dividend,w
  8790  0840                     u3105:	
  8791  0840  1C03               	skipc
  8792  0841  2851               	goto	l2451
  8793  0842  0870               	movf	___lldiv@divisor,w
  8794  0843  02F4               	subwf	___lldiv@dividend,f
  8795  0844  0871               	movf	___lldiv@divisor+1,w
  8796  0845  1C03               	skipc
  8797  0846  0F71               	incfsz	___lldiv@divisor+1,w
  8798  0847  02F5               	subwf	___lldiv@dividend+1,f
  8799  0848  0872               	movf	___lldiv@divisor+2,w
  8800  0849  1C03               	skipc
  8801  084A  0F72               	incfsz	___lldiv@divisor+2,w
  8802  084B  02F6               	subwf	___lldiv@dividend+2,f
  8803  084C  0873               	movf	___lldiv@divisor+3,w
  8804  084D  1C03               	skipc
  8805  084E  0F73               	incfsz	___lldiv@divisor+3,w
  8806  084F  02F7               	subwf	___lldiv@dividend+3,f
  8807  0850  1479               	bsf	___lldiv@quotient,0
  8808  0851                     l2451:	
  8809  0851  3001               	movlw	1
  8810  0852                     u3115:	
  8811  0852  1003               	clrc
  8812  0853  0CF3               	rrf	___lldiv@divisor+3,f
  8813  0854  0CF2               	rrf	___lldiv@divisor+2,f
  8814  0855  0CF1               	rrf	___lldiv@divisor+1,f
  8815  0856  0CF0               	rrf	___lldiv@divisor,f
  8816  0857  3EFF               	addlw	-1
  8817  0858  1D03               	skipz
  8818  0859  2852               	goto	u3115
  8819  085A  3001               	movlw	1
  8820  085B  02FD               	subwf	___lldiv@counter,f
  8821  085C  1D03               	btfss	3,2
  8822  085D  2829               	goto	l2443
  8823  085E                     l2455:	
  8824  085E  087C               	movf	___lldiv@quotient+3,w
  8825  085F  00F3               	movwf	?___lldiv+3
  8826  0860  087B               	movf	___lldiv@quotient+2,w
  8827  0861  00F2               	movwf	?___lldiv+2
  8828  0862  087A               	movf	___lldiv@quotient+1,w
  8829  0863  00F1               	movwf	?___lldiv+1
  8830  0864  0879               	movf	___lldiv@quotient,w
  8831  0865  00F0               	movwf	?___lldiv
  8832  0866  0008               	return
  8833  0867                     __end_of___lldiv:	
  8834                           
  8835                           	psect	text28
  8836  1D13                     __ptext28:	
  8837 ;; *************** function _read_data *****************
  8838 ;; Defined at:
  8839 ;;		line 132 in file "Master_main.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;  counter_slav    1    wreg     unsigned char 
  8842 ;;  adc_slave       1    6[COMMON] unsigned char 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;  counter_slav    1    9[COMMON] unsigned char 
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  1    wreg      void 
  8847 ;; Registers used:
  8848 ;;		wreg, status,2, status,0, pclath, cstack
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8854 ;;      Params:         1       0       0       0       0
  8855 ;;      Locals:         1       0       0       0       0
  8856 ;;      Temps:          2       0       0       0       0
  8857 ;;      Totals:         4       0       0       0       0
  8858 ;;Total ram usage:        4 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; Hardware stack levels required when called:    4
  8861 ;; This function calls:
  8862 ;;		_I2C_Master_Read
  8863 ;;		_I2C_Master_Start
  8864 ;;		_I2C_Master_Stop
  8865 ;;		_I2C_Master_Write
  8866 ;;		_mpu_data_read
  8867 ;; This function is called by:
  8868 ;;		_main
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           
  8873                           ;psect for function _read_data
  8874  1D13                     _read_data:	
  8875                           
  8876                           ;incstack = 0
  8877                           ; Regs used in _read_data: [wreg+status,2+status,0+pclath+cstack]
  8878                           ;read_data@counter_slave stored from wreg
  8879  1D13  00F9               	movwf	read_data@counter_slave
  8880                           
  8881                           ;Master_main.c: 133:     I2C_Master_Start();
  8882  1D14  160A  158A  2233  160A  158A  	fcall	_I2C_Master_Start
  8883                           
  8884                           ;Master_main.c: 134:     I2C_Master_Write(adc_slave);
  8885  1D19  0876               	movf	read_data@adc_slave,w
  8886  1D1A  00F7               	movwf	??_read_data
  8887  1D1B  01F8               	clrf	??_read_data+1
  8888  1D1C  0877               	movf	??_read_data,w
  8889  1D1D  00F0               	movwf	I2C_Master_Write@d
  8890  1D1E  0878               	movf	??_read_data+1,w
  8891  1D1F  00F1               	movwf	I2C_Master_Write@d+1
  8892  1D20  160A  158A  2241  160A  158A  	fcall	_I2C_Master_Write
  8893                           
  8894                           ;Master_main.c: 135:     adc_read = I2C_Master_Read(0);
  8895  1D25  3000               	movlw	0
  8896  1D26  00F0               	movwf	I2C_Master_Read@a
  8897  1D27  00F1               	movwf	I2C_Master_Read@a+1
  8898  1D28  160A  158A  2325  160A  158A  	fcall	_I2C_Master_Read
  8899  1D2D  0871               	movf	?_I2C_Master_Read+1,w
  8900  1D2E  1683               	bsf	3,5	;RP0=1, select bank1
  8901  1D2F  1303               	bcf	3,6	;RP1=0, select bank1
  8902  1D30  00CF               	movwf	(_adc_read+1)^(0+128)
  8903  1D31  0870               	movf	?_I2C_Master_Read,w
  8904  1D32  00CE               	movwf	_adc_read^(0+128)
  8905                           
  8906                           ;Master_main.c: 136:     I2C_Master_Stop();
  8907  1D33  160A  158A  223A  160A  158A  	fcall	_I2C_Master_Stop
  8908                           
  8909                           ;Master_main.c: 140:     I2C_Master_Start();
  8910  1D38  160A  158A  2233  160A  158A  	fcall	_I2C_Master_Start
  8911                           
  8912                           ;Master_main.c: 141:     I2C_Master_Write(counter_slave);
  8913  1D3D  0879               	movf	read_data@counter_slave,w
  8914  1D3E  00F7               	movwf	??_read_data
  8915  1D3F  01F8               	clrf	??_read_data+1
  8916  1D40  0877               	movf	??_read_data,w
  8917  1D41  00F0               	movwf	I2C_Master_Write@d
  8918  1D42  0878               	movf	??_read_data+1,w
  8919  1D43  00F1               	movwf	I2C_Master_Write@d+1
  8920  1D44  160A  158A  2241  160A  158A  	fcall	_I2C_Master_Write
  8921                           
  8922                           ;Master_main.c: 142:     counter_read = I2C_Master_Read(0);
  8923  1D49  3000               	movlw	0
  8924  1D4A  00F0               	movwf	I2C_Master_Read@a
  8925  1D4B  00F1               	movwf	I2C_Master_Read@a+1
  8926  1D4C  160A  158A  2325  160A  158A  	fcall	_I2C_Master_Read
  8927  1D51  0871               	movf	?_I2C_Master_Read+1,w
  8928  1D52  1683               	bsf	3,5	;RP0=1, select bank1
  8929  1D53  1303               	bcf	3,6	;RP1=0, select bank1
  8930  1D54  00D7               	movwf	(_counter_read+1)^(0+128)
  8931  1D55  0870               	movf	?_I2C_Master_Read,w
  8932  1D56  00D6               	movwf	_counter_read^(0+128)
  8933                           
  8934                           ;Master_main.c: 143:     I2C_Master_Stop();
  8935  1D57  160A  158A  223A  160A  158A  	fcall	_I2C_Master_Stop
  8936                           
  8937                           ;Master_main.c: 149:     mpu_data_read();
  8938  1D5C  160A  158A  23AB   	fcall	_mpu_data_read
  8939  1D5F  0008               	return
  8940  1D60                     __end_of_read_data:	
  8941                           
  8942                           	psect	text29
  8943  1BAB                     __ptext29:	
  8944 ;; *************** function _mpu_data_read *****************
  8945 ;; Defined at:
  8946 ;;		line 107 in file "Master_main.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;		None
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;		None
  8951 ;; Return value:  Size  Location     Type
  8952 ;;                  1    wreg      void 
  8953 ;; Registers used:
  8954 ;;		wreg, status,2, status,0, pclath, cstack
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8960 ;;      Params:         0       0       0       0       0
  8961 ;;      Locals:         0       0       0       0       0
  8962 ;;      Temps:          0       0       0       0       0
  8963 ;;      Totals:         0       0       0       0       0
  8964 ;;Total ram usage:        0 bytes
  8965 ;; Hardware stack levels used:    1
  8966 ;; Hardware stack levels required when called:    3
  8967 ;; This function calls:
  8968 ;;		_I2C_Master_Read
  8969 ;;		_I2C_Master_Stop
  8970 ;;		_mpu_start
  8971 ;; This function is called by:
  8972 ;;		_read_data
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           
  8977                           ;psect for function _mpu_data_read
  8978  1BAB                     _mpu_data_read:	
  8979                           
  8980                           ;Master_main.c: 108:         mpu_start(0x43);
  8981                           
  8982                           ;incstack = 0
  8983                           ; Regs used in _mpu_data_read: [wreg+status,2+status,0+pclath+cstack]
  8984  1BAB  3043               	movlw	67
  8985  1BAC  160A  158A  2351  160A  158A  	fcall	_mpu_start
  8986                           
  8987                           ;Master_main.c: 112:   mpu1 = I2C_Master_Read(0);
  8988  1BB1  3000               	movlw	0
  8989  1BB2  00F0               	movwf	I2C_Master_Read@a
  8990  1BB3  00F1               	movwf	I2C_Master_Read@a+1
  8991  1BB4  160A  158A  2325  160A  158A  	fcall	_I2C_Master_Read
  8992  1BB9  0871               	movf	?_I2C_Master_Read+1,w
  8993  1BBA  1683               	bsf	3,5	;RP0=1, select bank1
  8994  1BBB  1303               	bcf	3,6	;RP1=0, select bank1
  8995  1BBC  00D5               	movwf	(_mpu1+1)^(0+128)
  8996  1BBD  0870               	movf	?_I2C_Master_Read,w
  8997  1BBE  00D4               	movwf	_mpu1^(0+128)
  8998                           
  8999                           ;Master_main.c: 113:   I2C_Master_Stop();
  9000  1BBF  160A  158A  223A  160A  158A  	fcall	_I2C_Master_Stop
  9001                           
  9002                           ;Master_main.c: 115:         mpu_start(0x44);
  9003  1BC4  3044               	movlw	68
  9004  1BC5  160A  158A  2351  160A  158A  	fcall	_mpu_start
  9005                           
  9006                           ;Master_main.c: 116:         mpu2 = I2C_Master_Read(0);
  9007  1BCA  3000               	movlw	0
  9008  1BCB  00F0               	movwf	I2C_Master_Read@a
  9009  1BCC  00F1               	movwf	I2C_Master_Read@a+1
  9010  1BCD  160A  158A  2325  160A  158A  	fcall	_I2C_Master_Read
  9011  1BD2  0871               	movf	?_I2C_Master_Read+1,w
  9012  1BD3  1683               	bsf	3,5	;RP0=1, select bank1
  9013  1BD4  1303               	bcf	3,6	;RP1=0, select bank1
  9014  1BD5  00D3               	movwf	(_mpu2+1)^(0+128)
  9015  1BD6  0870               	movf	?_I2C_Master_Read,w
  9016  1BD7  00D2               	movwf	_mpu2^(0+128)
  9017                           
  9018                           ;Master_main.c: 117:         I2C_Master_Stop();
  9019  1BD8  160A  158A  223A   	fcall	_I2C_Master_Stop
  9020  1BDB  0008               	return
  9021  1BDC                     __end_of_mpu_data_read:	
  9022                           
  9023                           	psect	text30
  9024  1B51                     __ptext30:	
  9025 ;; *************** function _mpu_start *****************
  9026 ;; Defined at:
  9027 ;;		line 96 in file "Master_main.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;  mpu_register    1    wreg     unsigned char 
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;  mpu_register    1    4[COMMON] unsigned char 
  9032 ;; Return value:  Size  Location     Type
  9033 ;;                  1    wreg      void 
  9034 ;; Registers used:
  9035 ;;		wreg, status,2, status,0, pclath, cstack
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 0/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9041 ;;      Params:         0       0       0       0       0
  9042 ;;      Locals:         1       0       0       0       0
  9043 ;;      Temps:          2       0       0       0       0
  9044 ;;      Totals:         3       0       0       0       0
  9045 ;;Total ram usage:        3 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; Hardware stack levels required when called:    2
  9048 ;; This function calls:
  9049 ;;		_I2C_Master_Start
  9050 ;;		_I2C_Master_Stop
  9051 ;;		_I2C_Master_Write
  9052 ;; This function is called by:
  9053 ;;		_mpu_data_read
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           
  9058                           ;psect for function _mpu_start
  9059  1B51                     _mpu_start:	
  9060                           
  9061                           ;incstack = 0
  9062                           ; Regs used in _mpu_start: [wreg+status,2+status,0+pclath+cstack]
  9063                           ;mpu_start@mpu_register stored from wreg
  9064  1B51  00F4               	movwf	mpu_start@mpu_register
  9065                           
  9066                           ;Master_main.c: 97:     I2C_Master_Start();
  9067  1B52  160A  158A  2233  160A  158A  	fcall	_I2C_Master_Start
  9068                           
  9069                           ;Master_main.c: 98:     I2C_Master_Write(0xD0);
  9070  1B57  30D0               	movlw	208
  9071  1B58  00F0               	movwf	I2C_Master_Write@d
  9072  1B59  3000               	movlw	0
  9073  1B5A  00F1               	movwf	I2C_Master_Write@d+1
  9074  1B5B  160A  158A  2241  160A  158A  	fcall	_I2C_Master_Write
  9075                           
  9076                           ;Master_main.c: 100:     I2C_Master_Write(mpu_register);
  9077  1B60  0874               	movf	mpu_start@mpu_register,w
  9078  1B61  00F2               	movwf	??_mpu_start
  9079  1B62  01F3               	clrf	??_mpu_start+1
  9080  1B63  0872               	movf	??_mpu_start,w
  9081  1B64  00F0               	movwf	I2C_Master_Write@d
  9082  1B65  0873               	movf	??_mpu_start+1,w
  9083  1B66  00F1               	movwf	I2C_Master_Write@d+1
  9084  1B67  160A  158A  2241  160A  158A  	fcall	_I2C_Master_Write
  9085                           
  9086                           ;Master_main.c: 101:     I2C_Master_Stop();
  9087  1B6C  160A  158A  223A  160A  158A  	fcall	_I2C_Master_Stop
  9088                           
  9089                           ;Master_main.c: 102:     I2C_Master_Start();
  9090  1B71  160A  158A  2233  160A  158A  	fcall	_I2C_Master_Start
  9091                           
  9092                           ;Master_main.c: 103:     I2C_Master_Write(0xD1);
  9093  1B76  30D1               	movlw	209
  9094  1B77  00F0               	movwf	I2C_Master_Write@d
  9095  1B78  3000               	movlw	0
  9096  1B79  00F1               	movwf	I2C_Master_Write@d+1
  9097  1B7A  160A  158A  2241   	fcall	_I2C_Master_Write
  9098  1B7D  0008               	return
  9099  1B7E                     __end_of_mpu_start:	
  9100                           
  9101                           	psect	text31
  9102  1A41                     __ptext31:	
  9103 ;; *************** function _I2C_Master_Write *****************
  9104 ;; Defined at:
  9105 ;;		line 64 in file "./I2C.h"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  d               2    0[COMMON] unsigned int 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1    wreg      void 
  9112 ;; Registers used:
  9113 ;;		wreg, status,2, status,0, pclath, cstack
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9119 ;;      Params:         2       0       0       0       0
  9120 ;;      Locals:         0       0       0       0       0
  9121 ;;      Temps:          0       0       0       0       0
  9122 ;;      Totals:         2       0       0       0       0
  9123 ;;Total ram usage:        2 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    1
  9126 ;; This function calls:
  9127 ;;		_I2C_Master_Wait
  9128 ;; This function is called by:
  9129 ;;		_mpu_begin
  9130 ;;		_mpu_start
  9131 ;;		_read_data
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           
  9136                           ;psect for function _I2C_Master_Write
  9137  1A41                     _I2C_Master_Write:	
  9138                           
  9139                           ;./I2C.h: 64: void I2C_Master_Write(unsigned d);./I2C.h: 65: {;./I2C.h: 66:     I2C_Mast
      +                          er_Wait();
  9140                           
  9141                           ;incstack = 0
  9142                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  9143  1A41  160A  158A  2251   	fcall	_I2C_Master_Wait
  9144                           
  9145                           ;./I2C.h: 67:     SSPBUF = d;
  9146  1A44  0870               	movf	I2C_Master_Write@d,w
  9147  1A45  1283               	bcf	3,5	;RP0=0, select bank0
  9148  1A46  1303               	bcf	3,6	;RP1=0, select bank0
  9149  1A47  0093               	movwf	19	;volatile
  9150  1A48  0008               	return
  9151  1A49                     __end_of_I2C_Master_Write:	
  9152                           
  9153                           	psect	text32
  9154  1A3A                     __ptext32:	
  9155 ;; *************** function _I2C_Master_Stop *****************
  9156 ;; Defined at:
  9157 ;;		line 54 in file "./I2C.h"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;		None
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      void 
  9164 ;; Registers used:
  9165 ;;		wreg, status,2, status,0, pclath, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9171 ;;      Params:         0       0       0       0       0
  9172 ;;      Locals:         0       0       0       0       0
  9173 ;;      Temps:          0       0       0       0       0
  9174 ;;      Totals:         0       0       0       0       0
  9175 ;;Total ram usage:        0 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; Hardware stack levels required when called:    1
  9178 ;; This function calls:
  9179 ;;		_I2C_Master_Wait
  9180 ;; This function is called by:
  9181 ;;		_mpu_begin
  9182 ;;		_mpu_start
  9183 ;;		_mpu_data_read
  9184 ;;		_read_data
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           
  9189                           ;psect for function _I2C_Master_Stop
  9190  1A3A                     _I2C_Master_Stop:	
  9191                           
  9192                           ;./I2C.h: 56:     I2C_Master_Wait();
  9193                           
  9194                           ;incstack = 0
  9195                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9196  1A3A  160A  158A  2251   	fcall	_I2C_Master_Wait
  9197                           
  9198                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
  9199  1A3D  1683               	bsf	3,5	;RP0=1, select bank1
  9200  1A3E  1303               	bcf	3,6	;RP1=0, select bank1
  9201  1A3F  1511               	bsf	17,2	;volatile
  9202  1A40  0008               	return
  9203  1A41                     __end_of_I2C_Master_Stop:	
  9204                           
  9205                           	psect	text33
  9206  1A33                     __ptext33:	
  9207 ;; *************** function _I2C_Master_Start *****************
  9208 ;; Defined at:
  9209 ;;		line 38 in file "./I2C.h"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;		None
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;		None
  9214 ;; Return value:  Size  Location     Type
  9215 ;;                  1    wreg      void 
  9216 ;; Registers used:
  9217 ;;		wreg, status,2, status,0, pclath, cstack
  9218 ;; Tracked objects:
  9219 ;;		On entry : 0/0
  9220 ;;		On exit  : 0/0
  9221 ;;		Unchanged: 0/0
  9222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9223 ;;      Params:         0       0       0       0       0
  9224 ;;      Locals:         0       0       0       0       0
  9225 ;;      Temps:          0       0       0       0       0
  9226 ;;      Totals:         0       0       0       0       0
  9227 ;;Total ram usage:        0 bytes
  9228 ;; Hardware stack levels used:    1
  9229 ;; Hardware stack levels required when called:    1
  9230 ;; This function calls:
  9231 ;;		_I2C_Master_Wait
  9232 ;; This function is called by:
  9233 ;;		_mpu_begin
  9234 ;;		_mpu_start
  9235 ;;		_read_data
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           
  9240                           ;psect for function _I2C_Master_Start
  9241  1A33                     _I2C_Master_Start:	
  9242                           
  9243                           ;./I2C.h: 40:     I2C_Master_Wait();
  9244                           
  9245                           ;incstack = 0
  9246                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9247  1A33  160A  158A  2251   	fcall	_I2C_Master_Wait
  9248                           
  9249                           ;./I2C.h: 41:     SSPCON2bits.SEN = 1;
  9250  1A36  1683               	bsf	3,5	;RP0=1, select bank1
  9251  1A37  1303               	bcf	3,6	;RP1=0, select bank1
  9252  1A38  1411               	bsf	17,0	;volatile
  9253  1A39  0008               	return
  9254  1A3A                     __end_of_I2C_Master_Start:	
  9255                           
  9256                           	psect	text34
  9257  1B25                     __ptext34:	
  9258 ;; *************** function _I2C_Master_Read *****************
  9259 ;; Defined at:
  9260 ;;		line 73 in file "./I2C.h"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;  a               2    0[COMMON] unsigned short 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  temp            2    4[COMMON] unsigned short 
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  2    0[COMMON] unsigned short 
  9267 ;; Registers used:
  9268 ;;		wreg, status,2, status,0, pclath, cstack
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9274 ;;      Params:         2       0       0       0       0
  9275 ;;      Locals:         2       0       0       0       0
  9276 ;;      Temps:          2       0       0       0       0
  9277 ;;      Totals:         6       0       0       0       0
  9278 ;;Total ram usage:        6 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:    1
  9281 ;; This function calls:
  9282 ;;		_I2C_Master_Wait
  9283 ;; This function is called by:
  9284 ;;		_mpu_data_read
  9285 ;;		_read_data
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           
  9290                           ;psect for function _I2C_Master_Read
  9291  1B25                     _I2C_Master_Read:	
  9292                           
  9293                           ;./I2C.h: 73: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 74: {;./I2C.h: 7
      +                          5:     unsigned short temp;;./I2C.h: 76:     I2C_Master_Wait();
  9294                           
  9295                           ;incstack = 0
  9296                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9297  1B25  160A  158A  2251  160A  158A  	fcall	_I2C_Master_Wait
  9298                           
  9299                           ;./I2C.h: 77:     RCEN = 1;
  9300  1B2A  1683               	bsf	3,5	;RP0=1, select bank1
  9301  1B2B  1303               	bcf	3,6	;RP1=0, select bank1
  9302  1B2C  1591               	bsf	17,3	;volatile
  9303                           
  9304                           ;./I2C.h: 78:     I2C_Master_Wait();
  9305  1B2D  160A  158A  2251  160A  158A  	fcall	_I2C_Master_Wait
  9306                           
  9307                           ;./I2C.h: 79:     temp = SSPBUF;
  9308  1B32  1283               	bcf	3,5	;RP0=0, select bank0
  9309  1B33  1303               	bcf	3,6	;RP1=0, select bank0
  9310  1B34  0813               	movf	19,w	;volatile
  9311  1B35  00F2               	movwf	??_I2C_Master_Read
  9312  1B36  01F3               	clrf	??_I2C_Master_Read+1
  9313  1B37  0872               	movf	??_I2C_Master_Read,w
  9314  1B38  00F4               	movwf	I2C_Master_Read@temp
  9315  1B39  0873               	movf	??_I2C_Master_Read+1,w
  9316  1B3A  00F5               	movwf	I2C_Master_Read@temp+1
  9317                           
  9318                           ;./I2C.h: 80:     I2C_Master_Wait();
  9319  1B3B  160A  158A  2251  160A  158A  	fcall	_I2C_Master_Wait
  9320                           
  9321                           ;./I2C.h: 82:     if(a == 1){
  9322  1B40  0370               	decf	I2C_Master_Read@a,w
  9323  1B41  0471               	iorwf	I2C_Master_Read@a+1,w
  9324  1B42  1D03               	btfss	3,2
  9325  1B43  2B48               	goto	l72
  9326                           
  9327                           ;./I2C.h: 83:         SSPCON2bits.ACKDT = 0;
  9328  1B44  1683               	bsf	3,5	;RP0=1, select bank1
  9329  1B45  1303               	bcf	3,6	;RP1=0, select bank1
  9330  1B46  1291               	bcf	17,5	;volatile
  9331                           
  9332                           ;./I2C.h: 84:     }else{
  9333  1B47  2B4B               	goto	l73
  9334  1B48                     l72:	
  9335                           
  9336                           ;./I2C.h: 85:         SSPCON2bits.ACKDT = 1;
  9337  1B48  1683               	bsf	3,5	;RP0=1, select bank1
  9338  1B49  1303               	bcf	3,6	;RP1=0, select bank1
  9339  1B4A  1691               	bsf	17,5	;volatile
  9340  1B4B                     l73:	
  9341                           ;./I2C.h: 86:     }
  9342                           
  9343                           
  9344                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  9345  1B4B  1611               	bsf	17,4	;volatile
  9346                           
  9347                           ;./I2C.h: 88:     return temp;
  9348  1B4C  0875               	movf	I2C_Master_Read@temp+1,w
  9349  1B4D  00F1               	movwf	?_I2C_Master_Read+1
  9350  1B4E  0874               	movf	I2C_Master_Read@temp,w
  9351  1B4F  00F0               	movwf	?_I2C_Master_Read
  9352  1B50  0008               	return
  9353  1B51                     __end_of_I2C_Master_Read:	
  9354                           
  9355                           	psect	text35
  9356  1A51                     __ptext35:	
  9357 ;; *************** function _I2C_Master_Wait *****************
  9358 ;; Defined at:
  9359 ;;		line 31 in file "./I2C.h"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;		None
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;		None
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  1    wreg      void 
  9366 ;; Registers used:
  9367 ;;		wreg, status,2
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9373 ;;      Params:         0       0       0       0       0
  9374 ;;      Locals:         0       0       0       0       0
  9375 ;;      Temps:          0       0       0       0       0
  9376 ;;      Totals:         0       0       0       0       0
  9377 ;;Total ram usage:        0 bytes
  9378 ;; Hardware stack levels used:    1
  9379 ;; This function calls:
  9380 ;;		Nothing
  9381 ;; This function is called by:
  9382 ;;		_I2C_Master_Start
  9383 ;;		_I2C_Master_Stop
  9384 ;;		_I2C_Master_Write
  9385 ;;		_I2C_Master_Read
  9386 ;;		_I2C_Master_RepeatedStart
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           
  9391                           ;psect for function _I2C_Master_Wait
  9392  1A51                     _I2C_Master_Wait:	
  9393  1A51                     l54:	
  9394                           ;./I2C.h: 33:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9395                           
  9396                           ;incstack = 0
  9397                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9398                           
  9399  1A51  1683               	bsf	3,5	;RP0=1, select bank1
  9400  1A52  1303               	bcf	3,6	;RP1=0, select bank1
  9401  1A53  1914               	btfsc	20,2	;volatile
  9402  1A54  2A51               	goto	l54
  9403  1A55  0811               	movf	17,w	;volatile
  9404  1A56  391F               	andlw	31
  9405  1A57  1903               	btfsc	3,2
  9406  1A58  0008               	return
  9407  1A59  2A51               	goto	l54
  9408  1A5A                     __end_of_I2C_Master_Wait:	
  9409                           
  9410                           	psect	text36
  9411  122D                     __ptext36:	
  9412 ;; *************** function ___fldiv *****************
  9413 ;; Defined at:
  9414 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  a               4    0[BANK0 ] void 
  9417 ;;  b               4    4[BANK0 ] void 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  grs             4   20[BANK0 ] unsigned long 
  9420 ;;  rem             4   13[BANK0 ] unsigned long 
  9421 ;;  new_exp         2   18[BANK0 ] int 
  9422 ;;  aexp            1   25[BANK0 ] unsigned char 
  9423 ;;  bexp            1   24[BANK0 ] unsigned char 
  9424 ;;  sign            1   17[BANK0 ] unsigned char 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  4    0[BANK0 ] unsigned char 
  9427 ;; Registers used:
  9428 ;;		wreg, status,2, status,0, btemp+1
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9434 ;;      Params:         0       8       0       0       0
  9435 ;;      Locals:         0      13       0       0       0
  9436 ;;      Temps:          0       5       0       0       0
  9437 ;;      Totals:         0      26       0       0       0
  9438 ;;Total ram usage:       26 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; This function calls:
  9441 ;;		Nothing
  9442 ;; This function is called by:
  9443 ;;		_main
  9444 ;; This function uses a non-reentrant model
  9445 ;;
  9446                           
  9447                           
  9448                           ;psect for function ___fldiv
  9449  122D                     ___fldiv:	
  9450                           
  9451                           ;incstack = 0
  9452                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9453  122D  1283               	bcf	3,5	;RP0=0, select bank0
  9454  122E  1303               	bcf	3,6	;RP1=0, select bank0
  9455  122F  0827               	movf	___fldiv@b+3,w
  9456  1230  3980               	andlw	128
  9457  1231  00A8               	movwf	??___fldiv
  9458  1232  0828               	movf	??___fldiv,w
  9459  1233  00B1               	movwf	___fldiv@sign
  9460  1234  0827               	movf	___fldiv@b+3,w
  9461  1235  00A8               	movwf	??___fldiv
  9462  1236  0728               	addwf	??___fldiv,w
  9463  1237  00A9               	movwf	??___fldiv+1
  9464  1238  0829               	movf	??___fldiv+1,w
  9465  1239  00B8               	movwf	___fldiv@bexp
  9466  123A  1BA6               	btfsc	___fldiv@b+2,7
  9467  123B  1438               	bsf	___fldiv@bexp,0
  9468  123C  0838               	movf	___fldiv@bexp,w
  9469  123D  1903               	btfsc	3,2
  9470  123E  2A4D               	goto	l3653
  9471  123F  0A38               	incf	___fldiv@bexp,w
  9472  1240  1D03               	btfss	3,2
  9473  1241  2A4A               	goto	l3649
  9474  1242  3000               	movlw	0
  9475  1243  00A7               	movwf	___fldiv@b+3
  9476  1244  3000               	movlw	0
  9477  1245  00A6               	movwf	___fldiv@b+2
  9478  1246  3000               	movlw	0
  9479  1247  00A5               	movwf	___fldiv@b+1
  9480  1248  3000               	movlw	0
  9481  1249  00A4               	movwf	___fldiv@b
  9482  124A                     l3649:	
  9483  124A  17A6               	bsf	___fldiv@b+2,7
  9484  124B  01A7               	clrf	___fldiv@b+3
  9485  124C  2A55               	goto	l3655
  9486  124D                     l3653:	
  9487  124D  3000               	movlw	0
  9488  124E  00A7               	movwf	___fldiv@b+3
  9489  124F  3000               	movlw	0
  9490  1250  00A6               	movwf	___fldiv@b+2
  9491  1251  3000               	movlw	0
  9492  1252  00A5               	movwf	___fldiv@b+1
  9493  1253  3000               	movlw	0
  9494  1254  00A4               	movwf	___fldiv@b
  9495  1255                     l3655:	
  9496  1255  0823               	movf	___fldiv@a+3,w
  9497  1256  3980               	andlw	128
  9498  1257  00A8               	movwf	??___fldiv
  9499  1258  0828               	movf	??___fldiv,w
  9500  1259  06B1               	xorwf	___fldiv@sign,f
  9501  125A  0823               	movf	___fldiv@a+3,w
  9502  125B  00A8               	movwf	??___fldiv
  9503  125C  0728               	addwf	??___fldiv,w
  9504  125D  00A9               	movwf	??___fldiv+1
  9505  125E  0829               	movf	??___fldiv+1,w
  9506  125F  00B9               	movwf	___fldiv@aexp
  9507  1260  1BA2               	btfsc	___fldiv@a+2,7
  9508  1261  1439               	bsf	___fldiv@aexp,0
  9509  1262  0839               	movf	___fldiv@aexp,w
  9510  1263  1903               	btfsc	3,2
  9511  1264  2A73               	goto	l3673
  9512  1265  0A39               	incf	___fldiv@aexp,w
  9513  1266  1D03               	btfss	3,2
  9514  1267  2A70               	goto	l3669
  9515  1268  3000               	movlw	0
  9516  1269  00A3               	movwf	___fldiv@a+3
  9517  126A  3000               	movlw	0
  9518  126B  00A2               	movwf	___fldiv@a+2
  9519  126C  3000               	movlw	0
  9520  126D  00A1               	movwf	___fldiv@a+1
  9521  126E  3000               	movlw	0
  9522  126F  00A0               	movwf	___fldiv@a
  9523  1270                     l3669:	
  9524  1270  17A2               	bsf	___fldiv@a+2,7
  9525  1271  01A3               	clrf	___fldiv@a+3
  9526  1272  2A7B               	goto	l715
  9527  1273                     l3673:	
  9528  1273  3000               	movlw	0
  9529  1274  00A3               	movwf	___fldiv@a+3
  9530  1275  3000               	movlw	0
  9531  1276  00A2               	movwf	___fldiv@a+2
  9532  1277  3000               	movlw	0
  9533  1278  00A1               	movwf	___fldiv@a+1
  9534  1279  3000               	movlw	0
  9535  127A  00A0               	movwf	___fldiv@a
  9536  127B                     l715:	
  9537  127B  0823               	movf	___fldiv@a+3,w
  9538  127C  0422               	iorwf	___fldiv@a+2,w
  9539  127D  0421               	iorwf	___fldiv@a+1,w
  9540  127E  0420               	iorwf	___fldiv@a,w
  9541  127F  1D03               	skipz
  9542  1280  2A9A               	goto	l3683
  9543  1281  3000               	movlw	0
  9544  1282  00A7               	movwf	___fldiv@b+3
  9545  1283  3000               	movlw	0
  9546  1284  00A6               	movwf	___fldiv@b+2
  9547  1285  3000               	movlw	0
  9548  1286  00A5               	movwf	___fldiv@b+1
  9549  1287  3000               	movlw	0
  9550  1288  00A4               	movwf	___fldiv@b
  9551  1289  3080               	movlw	128
  9552  128A  04A6               	iorwf	___fldiv@b+2,f
  9553  128B  307F               	movlw	127
  9554  128C  04A7               	iorwf	___fldiv@b+3,f
  9555  128D                     L9:	
  9556  128D  0831               	movf	___fldiv@sign,w
  9557  128E  00A8               	movwf	??___fldiv
  9558  128F  0828               	movf	??___fldiv,w
  9559  1290  04A7               	iorwf	___fldiv@b+3,f
  9560  1291  0827               	movf	___fldiv@b+3,w
  9561  1292  00A3               	movwf	?___fldiv+3
  9562  1293  0826               	movf	___fldiv@b+2,w
  9563  1294  00A2               	movwf	?___fldiv+2
  9564  1295  0825               	movf	___fldiv@b+1,w
  9565  1296  00A1               	movwf	?___fldiv+1
  9566  1297  0824               	movf	___fldiv@b,w
  9567  1298  00A0               	movwf	?___fldiv
  9568  1299  0008               	return
  9569  129A                     l3683:	
  9570  129A  0838               	movf	___fldiv@bexp,w
  9571  129B  1D03               	btfss	3,2
  9572  129C  2AA6               	goto	l3689
  9573  129D  3000               	movlw	0
  9574  129E  00A3               	movwf	?___fldiv+3
  9575  129F  3000               	movlw	0
  9576  12A0  00A2               	movwf	?___fldiv+2
  9577  12A1  3000               	movlw	0
  9578  12A2  00A1               	movwf	?___fldiv+1
  9579  12A3  3000               	movlw	0
  9580  12A4  00A0               	movwf	?___fldiv
  9581  12A5  0008               	return
  9582  12A6                     l3689:	
  9583  12A6  0838               	movf	___fldiv@bexp,w
  9584  12A7  00A8               	movwf	??___fldiv
  9585  12A8  01A9               	clrf	??___fldiv+1
  9586  12A9  0829               	movf	??___fldiv+1,w
  9587  12AA  00AB               	movwf	??___fldiv+3
  9588  12AB  0839               	movf	___fldiv@aexp,w
  9589  12AC  0228               	subwf	??___fldiv,w
  9590  12AD  00AA               	movwf	??___fldiv+2
  9591  12AE  1C03               	skipc
  9592  12AF  03AB               	decf	??___fldiv+3,f
  9593  12B0  082A               	movf	??___fldiv+2,w
  9594  12B1  3E7F               	addlw	127
  9595  12B2  00B2               	movwf	___fldiv@new_exp
  9596  12B3  082B               	movf	??___fldiv+3,w
  9597  12B4  1803               	skipnc
  9598  12B5  3E01               	addlw	1
  9599  12B6  3E00               	addlw	0
  9600  12B7  00B3               	movwf	___fldiv@new_exp+1
  9601  12B8  0827               	movf	___fldiv@b+3,w
  9602  12B9  00B0               	movwf	___fldiv@rem+3
  9603  12BA  0826               	movf	___fldiv@b+2,w
  9604  12BB  00AF               	movwf	___fldiv@rem+2
  9605  12BC  0825               	movf	___fldiv@b+1,w
  9606  12BD  00AE               	movwf	___fldiv@rem+1
  9607  12BE  0824               	movf	___fldiv@b,w
  9608  12BF  00AD               	movwf	___fldiv@rem
  9609  12C0  3000               	movlw	0
  9610  12C1  00A7               	movwf	___fldiv@b+3
  9611  12C2  3000               	movlw	0
  9612  12C3  00A6               	movwf	___fldiv@b+2
  9613  12C4  3000               	movlw	0
  9614  12C5  00A5               	movwf	___fldiv@b+1
  9615  12C6  3000               	movlw	0
  9616  12C7  00A4               	movwf	___fldiv@b
  9617  12C8  3000               	movlw	0
  9618  12C9  00B7               	movwf	___fldiv@grs+3
  9619  12CA  3000               	movlw	0
  9620  12CB  00B6               	movwf	___fldiv@grs+2
  9621  12CC  3000               	movlw	0
  9622  12CD  00B5               	movwf	___fldiv@grs+1
  9623  12CE  3000               	movlw	0
  9624  12CF  00B4               	movwf	___fldiv@grs
  9625  12D0  01B9               	clrf	___fldiv@aexp
  9626  12D1                     l3717:	
  9627  12D1  301A               	movlw	26
  9628  12D2  0239               	subwf	___fldiv@aexp,w
  9629  12D3  1803               	btfsc	3,0
  9630  12D4  2B19               	goto	l3719
  9631  12D5  0839               	movf	___fldiv@aexp,w
  9632  12D6  1903               	btfsc	3,2
  9633  12D7  2AF5               	goto	l3709
  9634  12D8  3001               	movlw	1
  9635  12D9  00A8               	movwf	??___fldiv
  9636  12DA                     u5795:	
  9637  12DA  1003               	clrc
  9638  12DB  0DAD               	rlf	___fldiv@rem,f
  9639  12DC  0DAE               	rlf	___fldiv@rem+1,f
  9640  12DD  0DAF               	rlf	___fldiv@rem+2,f
  9641  12DE  0DB0               	rlf	___fldiv@rem+3,f
  9642  12DF  0BA8               	decfsz	??___fldiv,f
  9643  12E0  2ADA               	goto	u5795
  9644  12E1  3001               	movlw	1
  9645  12E2  00A8               	movwf	??___fldiv
  9646  12E3                     u5805:	
  9647  12E3  1003               	clrc
  9648  12E4  0DA4               	rlf	___fldiv@b,f
  9649  12E5  0DA5               	rlf	___fldiv@b+1,f
  9650  12E6  0DA6               	rlf	___fldiv@b+2,f
  9651  12E7  0DA7               	rlf	___fldiv@b+3,f
  9652  12E8  0BA8               	decfsz	??___fldiv,f
  9653  12E9  2AE3               	goto	u5805
  9654  12EA  1BB7               	btfsc	___fldiv@grs+3,7
  9655  12EB  1424               	bsf	___fldiv@b,0
  9656  12EC  3001               	movlw	1
  9657  12ED  00A8               	movwf	??___fldiv
  9658  12EE                     u5825:	
  9659  12EE  1003               	clrc
  9660  12EF  0DB4               	rlf	___fldiv@grs,f
  9661  12F0  0DB5               	rlf	___fldiv@grs+1,f
  9662  12F1  0DB6               	rlf	___fldiv@grs+2,f
  9663  12F2  0DB7               	rlf	___fldiv@grs+3,f
  9664  12F3  0BA8               	decfsz	??___fldiv,f
  9665  12F4  2AEE               	goto	u5825
  9666  12F5                     l3709:	
  9667  12F5  0823               	movf	___fldiv@a+3,w
  9668  12F6  0230               	subwf	___fldiv@rem+3,w
  9669  12F7  1D03               	skipz
  9670  12F8  2B03               	goto	u5835
  9671  12F9  0822               	movf	___fldiv@a+2,w
  9672  12FA  022F               	subwf	___fldiv@rem+2,w
  9673  12FB  1D03               	skipz
  9674  12FC  2B03               	goto	u5835
  9675  12FD  0821               	movf	___fldiv@a+1,w
  9676  12FE  022E               	subwf	___fldiv@rem+1,w
  9677  12FF  1D03               	skipz
  9678  1300  2B03               	goto	u5835
  9679  1301  0820               	movf	___fldiv@a,w
  9680  1302  022D               	subwf	___fldiv@rem,w
  9681  1303                     u5835:	
  9682  1303  1C03               	skipc
  9683  1304  2B14               	goto	l3715
  9684  1305  1737               	bsf	___fldiv@grs+3,6
  9685  1306  0820               	movf	___fldiv@a,w
  9686  1307  02AD               	subwf	___fldiv@rem,f
  9687  1308  0821               	movf	___fldiv@a+1,w
  9688  1309  1C03               	skipc
  9689  130A  0F21               	incfsz	___fldiv@a+1,w
  9690  130B  02AE               	subwf	___fldiv@rem+1,f
  9691  130C  0822               	movf	___fldiv@a+2,w
  9692  130D  1C03               	skipc
  9693  130E  0F22               	incfsz	___fldiv@a+2,w
  9694  130F  02AF               	subwf	___fldiv@rem+2,f
  9695  1310  0823               	movf	___fldiv@a+3,w
  9696  1311  1C03               	skipc
  9697  1312  0F23               	incfsz	___fldiv@a+3,w
  9698  1313  02B0               	subwf	___fldiv@rem+3,f
  9699  1314                     l3715:	
  9700  1314  3001               	movlw	1
  9701  1315  00A8               	movwf	??___fldiv
  9702  1316  0828               	movf	??___fldiv,w
  9703  1317  07B9               	addwf	___fldiv@aexp,f
  9704  1318  2AD1               	goto	l3717
  9705  1319                     l3719:	
  9706  1319  0830               	movf	___fldiv@rem+3,w
  9707  131A  042F               	iorwf	___fldiv@rem+2,w
  9708  131B  042E               	iorwf	___fldiv@rem+1,w
  9709  131C  042D               	iorwf	___fldiv@rem,w
  9710  131D  1D03               	btfss	3,2
  9711  131E  1434               	bsf	___fldiv@grs,0
  9712  131F                     l3733:	
  9713  131F  1BA6               	btfsc	___fldiv@b+2,7
  9714  1320  2B3C               	goto	l3735
  9715  1321  3001               	movlw	1
  9716  1322  00A8               	movwf	??___fldiv
  9717  1323                     u5865:	
  9718  1323  1003               	clrc
  9719  1324  0DA4               	rlf	___fldiv@b,f
  9720  1325  0DA5               	rlf	___fldiv@b+1,f
  9721  1326  0DA6               	rlf	___fldiv@b+2,f
  9722  1327  0DA7               	rlf	___fldiv@b+3,f
  9723  1328  0BA8               	decfsz	??___fldiv,f
  9724  1329  2B23               	goto	u5865
  9725  132A  1BB7               	btfsc	___fldiv@grs+3,7
  9726  132B  1424               	bsf	___fldiv@b,0
  9727  132C  3001               	movlw	1
  9728  132D  00A8               	movwf	??___fldiv
  9729  132E                     u5885:	
  9730  132E  1003               	clrc
  9731  132F  0DB4               	rlf	___fldiv@grs,f
  9732  1330  0DB5               	rlf	___fldiv@grs+1,f
  9733  1331  0DB6               	rlf	___fldiv@grs+2,f
  9734  1332  0DB7               	rlf	___fldiv@grs+3,f
  9735  1333  0BA8               	decfsz	??___fldiv,f
  9736  1334  2B2E               	goto	u5885
  9737  1335  30FF               	movlw	255
  9738  1336  07B2               	addwf	___fldiv@new_exp,f
  9739  1337  1803               	skipnc
  9740  1338  0AB3               	incf	___fldiv@new_exp+1,f
  9741  1339  30FF               	movlw	255
  9742  133A  07B3               	addwf	___fldiv@new_exp+1,f
  9743  133B  2B1F               	goto	l3733
  9744  133C                     l3735:	
  9745  133C  01B9               	clrf	___fldiv@aexp
  9746  133D  1FB7               	btfss	___fldiv@grs+3,7
  9747  133E  2B55               	goto	l3745
  9748  133F  30FF               	movlw	255
  9749  1340  0534               	andwf	___fldiv@grs,w
  9750  1341  00A8               	movwf	??___fldiv
  9751  1342  30FF               	movlw	255
  9752  1343  0535               	andwf	___fldiv@grs+1,w
  9753  1344  00A9               	movwf	??___fldiv+1
  9754  1345  30FF               	movlw	255
  9755  1346  0536               	andwf	___fldiv@grs+2,w
  9756  1347  00AA               	movwf	??___fldiv+2
  9757  1348  307F               	movlw	127
  9758  1349  0537               	andwf	___fldiv@grs+3,w
  9759  134A  00AB               	movwf	??___fldiv+3
  9760  134B  082B               	movf	??___fldiv+3,w
  9761  134C  042A               	iorwf	??___fldiv+2,w
  9762  134D  0429               	iorwf	??___fldiv+1,w
  9763  134E  0428               	iorwf	??___fldiv,w
  9764  134F  1903               	skipnz
  9765  1350  1824               	btfsc	___fldiv@b,0
  9766  1351  2B53               	goto	l3741
  9767  1352  2B55               	goto	l3745
  9768  1353                     l3741:	
  9769  1353  01B9               	clrf	___fldiv@aexp
  9770  1354  0AB9               	incf	___fldiv@aexp,f
  9771  1355                     l3745:	
  9772  1355  0839               	movf	___fldiv@aexp,w
  9773  1356  1903               	btfsc	3,2
  9774  1357  2B87               	goto	l3755
  9775  1358  3001               	movlw	1
  9776  1359  07A4               	addwf	___fldiv@b,f
  9777  135A  3000               	movlw	0
  9778  135B  1803               	skipnc
  9779  135C  3001               	movlw	1
  9780  135D  07A5               	addwf	___fldiv@b+1,f
  9781  135E  3000               	movlw	0
  9782  135F  1803               	skipnc
  9783  1360  3001               	movlw	1
  9784  1361  07A6               	addwf	___fldiv@b+2,f
  9785  1362  3000               	movlw	0
  9786  1363  1803               	skipnc
  9787  1364  3001               	movlw	1
  9788  1365  07A7               	addwf	___fldiv@b+3,f
  9789  1366  1C27               	btfss	___fldiv@b+3,0
  9790  1367  2B87               	goto	l3755
  9791  1368  0824               	movf	___fldiv@b,w
  9792  1369  00A8               	movwf	??___fldiv
  9793  136A  0825               	movf	___fldiv@b+1,w
  9794  136B  00A9               	movwf	??___fldiv+1
  9795  136C  0826               	movf	___fldiv@b+2,w
  9796  136D  00AA               	movwf	??___fldiv+2
  9797  136E  0827               	movf	___fldiv@b+3,w
  9798  136F  00AB               	movwf	??___fldiv+3
  9799  1370  3001               	movlw	1
  9800  1371  00AC               	movwf	??___fldiv+4
  9801  1372                     u5955:	
  9802  1372  0D2B               	rlf	??___fldiv+3,w
  9803  1373  0CAB               	rrf	??___fldiv+3,f
  9804  1374  0CAA               	rrf	??___fldiv+2,f
  9805  1375  0CA9               	rrf	??___fldiv+1,f
  9806  1376  0CA8               	rrf	??___fldiv,f
  9807  1377  0BAC               	decfsz	??___fldiv+4,f
  9808  1378  2B72               	goto	u5955
  9809  1379  082B               	movf	??___fldiv+3,w
  9810  137A  00A7               	movwf	___fldiv@b+3
  9811  137B  082A               	movf	??___fldiv+2,w
  9812  137C  00A6               	movwf	___fldiv@b+2
  9813  137D  0829               	movf	??___fldiv+1,w
  9814  137E  00A5               	movwf	___fldiv@b+1
  9815  137F  0828               	movf	??___fldiv,w
  9816  1380  00A4               	movwf	___fldiv@b
  9817  1381  3001               	movlw	1
  9818  1382  07B2               	addwf	___fldiv@new_exp,f
  9819  1383  1803               	skipnc
  9820  1384  0AB3               	incf	___fldiv@new_exp+1,f
  9821  1385  3000               	movlw	0
  9822  1386  07B3               	addwf	___fldiv@new_exp+1,f
  9823  1387                     l3755:	
  9824  1387  0833               	movf	___fldiv@new_exp+1,w
  9825  1388  3A80               	xorlw	128
  9826  1389  00FF               	movwf	127
  9827  138A  3080               	movlw	128
  9828  138B  027F               	subwf	127,w
  9829  138C  1D03               	skipz
  9830  138D  2B90               	goto	u5965
  9831  138E  30FF               	movlw	255
  9832  138F  0232               	subwf	___fldiv@new_exp,w
  9833  1390                     u5965:	
  9834  1390  1C03               	skipc
  9835  1391  2BA0               	goto	l3759
  9836  1392  30FF               	movlw	255
  9837  1393  1283               	bcf	3,5	;RP0=0, select bank0
  9838  1394  1303               	bcf	3,6	;RP1=0, select bank0
  9839  1395  00B2               	movwf	___fldiv@new_exp
  9840  1396  3000               	movlw	0
  9841  1397  00B3               	movwf	___fldiv@new_exp+1
  9842  1398  3000               	movlw	0
  9843  1399  00A7               	movwf	___fldiv@b+3
  9844  139A  3000               	movlw	0
  9845  139B  00A6               	movwf	___fldiv@b+2
  9846  139C  3000               	movlw	0
  9847  139D  00A5               	movwf	___fldiv@b+1
  9848  139E  3000               	movlw	0
  9849  139F  00A4               	movwf	___fldiv@b
  9850  13A0                     l3759:	
  9851  13A0  1283               	bcf	3,5	;RP0=0, select bank0
  9852  13A1  1303               	bcf	3,6	;RP1=0, select bank0
  9853  13A2  0833               	movf	___fldiv@new_exp+1,w
  9854  13A3  3A80               	xorlw	128
  9855  13A4  00FF               	movwf	127
  9856  13A5  3080               	movlw	128
  9857  13A6  027F               	subwf	127,w
  9858  13A7  1D03               	skipz
  9859  13A8  2BAB               	goto	u5975
  9860  13A9  3001               	movlw	1
  9861  13AA  0232               	subwf	___fldiv@new_exp,w
  9862  13AB                     u5975:	
  9863  13AB  1803               	skipnc
  9864  13AC  2BBA               	goto	l737
  9865  13AD  1283               	bcf	3,5	;RP0=0, select bank0
  9866  13AE  1303               	bcf	3,6	;RP1=0, select bank0
  9867  13AF  01B2               	clrf	___fldiv@new_exp
  9868  13B0  01B3               	clrf	___fldiv@new_exp+1
  9869  13B1  3000               	movlw	0
  9870  13B2  00A7               	movwf	___fldiv@b+3
  9871  13B3  3000               	movlw	0
  9872  13B4  00A6               	movwf	___fldiv@b+2
  9873  13B5  3000               	movlw	0
  9874  13B6  00A5               	movwf	___fldiv@b+1
  9875  13B7  3000               	movlw	0
  9876  13B8  00A4               	movwf	___fldiv@b
  9877  13B9  01B1               	clrf	___fldiv@sign
  9878  13BA                     l737:	
  9879  13BA  1283               	bcf	3,5	;RP0=0, select bank0
  9880  13BB  1303               	bcf	3,6	;RP1=0, select bank0
  9881  13BC  0832               	movf	___fldiv@new_exp,w
  9882  13BD  00A8               	movwf	??___fldiv
  9883  13BE  0828               	movf	??___fldiv,w
  9884  13BF  00B8               	movwf	___fldiv@bexp
  9885  13C0  1C38               	btfss	___fldiv@bexp,0
  9886  13C1  2BC4               	goto	l3771
  9887  13C2  17A6               	bsf	___fldiv@b+2,7
  9888  13C3  2BC8               	goto	l739
  9889  13C4                     l3771:	
  9890  13C4  307F               	movlw	127
  9891  13C5  00A8               	movwf	??___fldiv
  9892  13C6  0828               	movf	??___fldiv,w
  9893  13C7  05A6               	andwf	___fldiv@b+2,f
  9894  13C8                     l739:	
  9895  13C8  0838               	movf	___fldiv@bexp,w
  9896  13C9  00A8               	movwf	??___fldiv
  9897  13CA  1003               	clrc
  9898  13CB  0C28               	rrf	??___fldiv,w
  9899  13CC  00A9               	movwf	??___fldiv+1
  9900  13CD  0829               	movf	??___fldiv+1,w
  9901  13CE  00A7               	movwf	___fldiv@b+3
  9902  13CF  2A8D               	goto	L9
  9903  13D0                     __end_of___fldiv:	
  9904                           
  9905                           	psect	text37
  9906  1AFD                     __ptext37:	
  9907 ;; *************** function _LCD8_strWrite *****************
  9908 ;; Defined at:
  9909 ;;		line 55 in file "./LCD8bit.h"
  9910 ;; Parameters:    Size  Location     Type
  9911 ;;  data            2    2[COMMON] PTR unsigned char 
  9912 ;;		 -> STR_4(15), sensor(10), counter(4), voltage(5), 
  9913 ;; Auto vars:     Size  Location     Type
  9914 ;;  i               1    5[COMMON] unsigned char 
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  1    wreg      void 
  9917 ;; Registers used:
  9918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9924 ;;      Params:         2       0       0       0       0
  9925 ;;      Locals:         1       0       0       0       0
  9926 ;;      Temps:          1       0       0       0       0
  9927 ;;      Totals:         4       0       0       0       0
  9928 ;;Total ram usage:        4 bytes
  9929 ;; Hardware stack levels used:    1
  9930 ;; Hardware stack levels required when called:    1
  9931 ;; This function calls:
  9932 ;;		_LCD8_write
  9933 ;; This function is called by:
  9934 ;;		_main
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           
  9939                           ;psect for function _LCD8_strWrite
  9940  1AFD                     _LCD8_strWrite:	
  9941                           
  9942                           ;./LCD8bit.h: 56:     char i;;./LCD8bit.h: 57:         for(i=0; data[i] !='\0';i++ )
  9943                           
  9944                           ;incstack = 0
  9945                           ; Regs used in _LCD8_strWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9946  1AFD  01F5               	clrf	LCD8_strWrite@i
  9947  1AFE                     l3381:	
  9948  1AFE  0875               	movf	LCD8_strWrite@i,w
  9949  1AFF  0772               	addwf	LCD8_strWrite@data,w
  9950  1B00  0084               	movwf	4
  9951  1B01  0873               	movf	LCD8_strWrite@data+1,w
  9952  1B02  1803               	skipnc
  9953  1B03  0A73               	incf	LCD8_strWrite@data+1,w
  9954  1B04  1283               	bcf	3,5	;RP0=0, select bank0
  9955  1B05  1303               	bcf	3,6	;RP1=0, select bank0
  9956  1B06  00FF               	movwf	127
  9957  1B07  160A  118A  2000  160A  158A  	fcall	stringtab
  9958  1B0C  3A00               	xorlw	0
  9959  1B0D  1903               	btfsc	3,2
  9960  1B0E  0008               	return
  9961                           
  9962                           ;./LCD8bit.h: 58:             LCD8_write(data[i]);
  9963  1B0F  0875               	movf	LCD8_strWrite@i,w
  9964  1B10  0772               	addwf	LCD8_strWrite@data,w
  9965  1B11  0084               	movwf	4
  9966  1B12  0873               	movf	LCD8_strWrite@data+1,w
  9967  1B13  1803               	skipnc
  9968  1B14  0A73               	incf	LCD8_strWrite@data+1,w
  9969  1B15  00FF               	movwf	127
  9970  1B16  160A  118A  2000  160A  158A  	fcall	stringtab
  9971  1B1B  160A  158A  2273  160A  158A  	fcall	_LCD8_write
  9972  1B20  3001               	movlw	1
  9973  1B21  00F4               	movwf	??_LCD8_strWrite
  9974  1B22  0874               	movf	??_LCD8_strWrite,w
  9975  1B23  07F5               	addwf	LCD8_strWrite@i,f
  9976  1B24  2AFE               	goto	l3381
  9977  1B25                     __end_of_LCD8_strWrite:	
  9978                           
  9979                           	psect	text38
  9980  1A73                     __ptext38:	
  9981 ;; *************** function _LCD8_write *****************
  9982 ;; Defined at:
  9983 ;;		line 4 in file "./LCD8bit.h"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  data            1    wreg     unsigned char 
  9986 ;; Auto vars:     Size  Location     Type
  9987 ;;  data            1    1[COMMON] unsigned char 
  9988 ;; Return value:  Size  Location     Type
  9989 ;;                  1    wreg      void 
  9990 ;; Registers used:
  9991 ;;		wreg
  9992 ;; Tracked objects:
  9993 ;;		On entry : 0/0
  9994 ;;		On exit  : 0/0
  9995 ;;		Unchanged: 0/0
  9996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9997 ;;      Params:         0       0       0       0       0
  9998 ;;      Locals:         1       0       0       0       0
  9999 ;;      Temps:          1       0       0       0       0
 10000 ;;      Totals:         2       0       0       0       0
 10001 ;;Total ram usage:        2 bytes
 10002 ;; Hardware stack levels used:    1
 10003 ;; This function calls:
 10004 ;;		Nothing
 10005 ;; This function is called by:
 10006 ;;		_LCD8_strWrite
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           
 10011                           ;psect for function _LCD8_write
 10012  1A73                     _LCD8_write:	
 10013                           
 10014                           ;incstack = 0
 10015                           ; Regs used in _LCD8_write: [wreg]
 10016                           ;LCD8_write@data stored from wreg
 10017  1A73  00F1               	movwf	LCD8_write@data
 10018                           
 10019                           ;./LCD8bit.h: 5:     RA1 = 1;
 10020  1A74  1283               	bcf	3,5	;RP0=0, select bank0
 10021  1A75  1303               	bcf	3,6	;RP1=0, select bank0
 10022  1A76  1485               	bsf	5,1	;volatile
 10023                           
 10024                           ;./LCD8bit.h: 6:     PORTB = data;
 10025  1A77  0871               	movf	LCD8_write@data,w
 10026  1A78  0086               	movwf	6	;volatile
 10027                           
 10028                           ;./LCD8bit.h: 7:     RA0 = 1;
 10029  1A79  1405               	bsf	5,0	;volatile
 10030                           
 10031                           ;./LCD8bit.h: 8:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10032  1A7A  301A               	movlw	26
 10033  1A7B  00F0               	movwf	??_LCD8_write
 10034  1A7C                     u6057:	
 10035  1A7C  0BF0               	decfsz	??_LCD8_write,f
 10036  1A7D  2A7C               	goto	u6057
 10037  1A7E  0000               	nop
 10038                           
 10039                           ;./LCD8bit.h: 9:     RA0 = 0;
 10040  1A7F  1283               	bcf	3,5	;RP0=0, select bank0
 10041  1A80  1303               	bcf	3,6	;RP1=0, select bank0
 10042  1A81  1005               	bcf	5,0	;volatile
 10043  1A82  0008               	return
 10044  1A83                     __end_of_LCD8_write:	
 10045                           
 10046                           	psect	text39
 10047  10C3                     __ptext39:	
 10048 ;; *************** function _LCD8_set_cursor *****************
 10049 ;; Defined at:
 10050 ;;		line 21 in file "./LCD8bit.h"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  row             1    wreg     unsigned char 
 10053 ;;  column          1    3[COMMON] unsigned char 
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;  row             1    6[COMMON] unsigned char 
 10056 ;;  cursor          1    5[COMMON] unsigned char 
 10057 ;; Return value:  Size  Location     Type
 10058 ;;                  1    wreg      void 
 10059 ;; Registers used:
 10060 ;;		wreg, status,2, status,0, pclath, cstack
 10061 ;; Tracked objects:
 10062 ;;		On entry : 0/0
 10063 ;;		On exit  : 0/0
 10064 ;;		Unchanged: 0/0
 10065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10066 ;;      Params:         1       0       0       0       0
 10067 ;;      Locals:         2       0       0       0       0
 10068 ;;      Temps:          1       0       0       0       0
 10069 ;;      Totals:         4       0       0       0       0
 10070 ;;Total ram usage:        4 bytes
 10071 ;; Hardware stack levels used:    1
 10072 ;; Hardware stack levels required when called:    1
 10073 ;; This function calls:
 10074 ;;		_LCD8_cmd
 10075 ;; This function is called by:
 10076 ;;		_main
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           
 10080                           
 10081                           ;psect for function _LCD8_set_cursor
 10082  10C3                     _LCD8_set_cursor:	
 10083                           
 10084                           ;incstack = 0
 10085                           ; Regs used in _LCD8_set_cursor: [wreg+status,2+status,0+pclath+cstack]
 10086                           ;LCD8_set_cursor@row stored from wreg
 10087  10C3  00F6               	movwf	LCD8_set_cursor@row
 10088                           
 10089                           ;./LCD8bit.h: 22:     char cursor;;./LCD8bit.h: 24:         if(row==1)
 10090  10C4  0376               	decf	LCD8_set_cursor@row,w
 10091  10C5  1D03               	btfss	3,2
 10092  10C6  28CC               	goto	l86
 10093                           
 10094                           ;./LCD8bit.h: 25:             cursor = 128 + column -1;
 10095  10C7  0873               	movf	LCD8_set_cursor@column,w
 10096  10C8  3E7F               	addlw	127
 10097  10C9  00F4               	movwf	??_LCD8_set_cursor
 10098  10CA  0874               	movf	??_LCD8_set_cursor,w
 10099  10CB  00F5               	movwf	LCD8_set_cursor@cursor
 10100  10CC                     l86:	
 10101                           
 10102                           ;./LCD8bit.h: 26:         if (row==2)
 10103  10CC  3002               	movlw	2
 10104  10CD  0676               	xorwf	LCD8_set_cursor@row,w
 10105  10CE  1D03               	btfss	3,2
 10106  10CF  28D5               	goto	l3371
 10107                           
 10108                           ;./LCD8bit.h: 27:             cursor = 192 + column -1;
 10109  10D0  0873               	movf	LCD8_set_cursor@column,w
 10110  10D1  3EBF               	addlw	191
 10111  10D2  00F4               	movwf	??_LCD8_set_cursor
 10112  10D3  0874               	movf	??_LCD8_set_cursor,w
 10113  10D4  00F5               	movwf	LCD8_set_cursor@cursor
 10114  10D5                     l3371:	
 10115                           
 10116                           ;./LCD8bit.h: 29:         LCD8_cmd(cursor);
 10117  10D5  0875               	movf	LCD8_set_cursor@cursor,w
 10118  10D6  160A  158A  2283   	fcall	_LCD8_cmd
 10119  10D9  0008               	return
 10120  10DA                     __end_of_LCD8_set_cursor:	
 10121                           
 10122                           	psect	text40
 10123  1A5A                     __ptext40:	
 10124 ;; *************** function _LCD8_clear *****************
 10125 ;; Defined at:
 10126 ;;		line 32 in file "./LCD8bit.h"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;		None
 10129 ;; Auto vars:     Size  Location     Type
 10130 ;;		None
 10131 ;; Return value:  Size  Location     Type
 10132 ;;                  1    wreg      void 
 10133 ;; Registers used:
 10134 ;;		wreg, status,2, status,0, pclath, cstack
 10135 ;; Tracked objects:
 10136 ;;		On entry : 0/0
 10137 ;;		On exit  : 0/0
 10138 ;;		Unchanged: 0/0
 10139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10140 ;;      Params:         0       0       0       0       0
 10141 ;;      Locals:         0       0       0       0       0
 10142 ;;      Temps:          0       0       0       0       0
 10143 ;;      Totals:         0       0       0       0       0
 10144 ;;Total ram usage:        0 bytes
 10145 ;; Hardware stack levels used:    1
 10146 ;; Hardware stack levels required when called:    1
 10147 ;; This function calls:
 10148 ;;		_LCD8_cmd
 10149 ;; This function is called by:
 10150 ;;		_main
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           
 10155                           ;psect for function _LCD8_clear
 10156  1A5A                     _LCD8_clear:	
 10157                           
 10158                           ;./LCD8bit.h: 33:     LCD8_cmd(0);
 10159                           
 10160                           ;incstack = 0
 10161                           ; Regs used in _LCD8_clear: [wreg+status,2+status,0+pclath+cstack]
 10162  1A5A  3000               	movlw	0
 10163  1A5B  160A  158A  2283  160A  158A  	fcall	_LCD8_cmd
 10164                           
 10165                           ;./LCD8bit.h: 34:     LCD8_cmd(1);
 10166  1A60  3001               	movlw	1
 10167  1A61  160A  158A  2283   	fcall	_LCD8_cmd
 10168  1A64  0008               	return
 10169  1A65                     __end_of_LCD8_clear:	
 10170                           
 10171                           	psect	text41
 10172  1A83                     __ptext41:	
 10173 ;; *************** function _LCD8_cmd *****************
 10174 ;; Defined at:
 10175 ;;		line 12 in file "./LCD8bit.h"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  data            1    wreg     unsigned char 
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;  data            1    2[COMMON] unsigned char 
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		wreg
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10189 ;;      Params:         0       0       0       0       0
 10190 ;;      Locals:         1       0       0       0       0
 10191 ;;      Temps:          2       0       0       0       0
 10192 ;;      Totals:         3       0       0       0       0
 10193 ;;Total ram usage:        3 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; This function calls:
 10196 ;;		Nothing
 10197 ;; This function is called by:
 10198 ;;		_LCD8_set_cursor
 10199 ;;		_LCD8_clear
 10200 ;;		_LCD8_begin
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           
 10205                           ;psect for function _LCD8_cmd
 10206  1A83                     _LCD8_cmd:	
 10207                           
 10208                           ;incstack = 0
 10209                           ; Regs used in _LCD8_cmd: [wreg]
 10210                           ;LCD8_cmd@data stored from wreg
 10211  1A83  00F2               	movwf	LCD8_cmd@data
 10212                           
 10213                           ;./LCD8bit.h: 13:     RA1 = 0;
 10214  1A84  1283               	bcf	3,5	;RP0=0, select bank0
 10215  1A85  1303               	bcf	3,6	;RP1=0, select bank0
 10216  1A86  1085               	bcf	5,1	;volatile
 10217                           
 10218                           ;./LCD8bit.h: 14:     PORTB = data;
 10219  1A87  0872               	movf	LCD8_cmd@data,w
 10220  1A88  0086               	movwf	6	;volatile
 10221                           
 10222                           ;./LCD8bit.h: 16:     RA0 = 1;
 10223  1A89  1405               	bsf	5,0	;volatile
 10224                           
 10225                           ;./LCD8bit.h: 17:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10226  1A8A  300B               	movlw	11
 10227  1A8B  00F1               	movwf	??_LCD8_cmd+1
 10228  1A8C  3062               	movlw	98
 10229  1A8D  00F0               	movwf	??_LCD8_cmd
 10230  1A8E                     u6067:	
 10231  1A8E  0BF0               	decfsz	??_LCD8_cmd,f
 10232  1A8F  2A8E               	goto	u6067
 10233  1A90  0BF1               	decfsz	??_LCD8_cmd+1,f
 10234  1A91  2A8E               	goto	u6067
 10235  1A92  0000               	nop
 10236                           
 10237                           ;./LCD8bit.h: 18:     RA0 = 0;
 10238  1A93  1283               	bcf	3,5	;RP0=0, select bank0
 10239  1A94  1303               	bcf	3,6	;RP1=0, select bank0
 10240  1A95  1005               	bcf	5,0	;volatile
 10241  1A96  0008               	return
 10242  1A97                     __end_of_LCD8_cmd:	
 10243  007E                     btemp	set	126	;btemp
 10244  007E                     wtemp0	set	126


Data Sizes:
    Strings     30
    Constant    144
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     38      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_3(CODE[7]), STR_2(CODE[3]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> sensor(BANK1[10]), counter(BANK1[4]), voltage(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    LCD8_strWrite@data	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[15]), sensor(BANK1[10]), counter(BANK1[4]), voltage(BANK1[5]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _mpu_begin->_I2C_Master_Write
    _LCD8_begin->_LCD8_cmd
    _I2C_Master_Init->___lldiv
    _read_data->_I2C_Master_Read
    _mpu_data_read->_I2C_Master_Read
    _mpu_start->_I2C_Master_Write
    ___fldiv->___xxtofl
    _LCD8_strWrite->_LCD8_write
    _LCD8_set_cursor->_LCD8_cmd
    _LCD8_clear->_LCD8_cmd

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   45552
                                             35 BANK1      3     3      0
                         _LCD8_clear
                    _LCD8_set_cursor
                      _LCD8_strWrite
                            ___fldiv
                            ___flmul
                           ___xxtofl
                          _read_data
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31930
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2454
                    _I2C_Master_Init
                         _LCD8_begin
                          _mpu_begin
                    _oscilator_begin
 ---------------------------------------------------------------------------------
 (2) _oscilator_begin                                      2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _mpu_begin                                            3     3      0    1542
                                              2 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _LCD8_begin                                           2     2      0      22
                                              3 COMMON     2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     868
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _read_data                                            4     3      1    3924
                                              6 COMMON     4     3      1
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                      _mpu_data_read
 ---------------------------------------------------------------------------------
 (2) _mpu_data_read                                        0     0      0    1913
                    _I2C_Master_Read
                    _I2C_Master_Stop
                          _mpu_start
 ---------------------------------------------------------------------------------
 (3) _mpu_start                                            3     3      0    1564
                                              2 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    1542
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     349
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD8_strWrite                                        4     2      2     416
                                              2 COMMON     4     2      2
                         _LCD8_write
 ---------------------------------------------------------------------------------
 (2) _LCD8_write                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD8_set_cursor                                      4     3      1     438
                                              3 COMMON     4     3      1
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD8_clear                                           0     0      0      22
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (3) _LCD8_cmd                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD8_clear
     _LCD8_cmd
   _LCD8_set_cursor
     _LCD8_cmd
   _LCD8_strWrite
     _LCD8_write
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _read_data
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _mpu_data_read
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _mpu_start
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _LCD8_begin
       _LCD8_cmd
     _mpu_begin
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _oscilator_begin
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     26      4B       7       93.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A7      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Feb 18 10:42:04 2019

       LCD8_set_cursor@row 0076               ___fldiv@aexp 0039               ___fldiv@bexp 0038  
                        pc 0002               ___fldiv@sign 0031                __CFG_CP$OFF 0000  
    LCD8_set_cursor@column 0073                         l54 1A51                         l72 1B48  
                       l73 1B4B                         l86 10CC               ___awdiv@sign 0021  
    LCD8_set_cursor@cursor 0075                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l301 04B8                        l143 086C  
                      l332 1AA1                        l513 1215                        l274 014C  
                      l523 1EE4                        l701 17F5                        l518 1C9A  
                      l526 1F4A                        l542 1EAC                        l519 1CB4  
                      l560 116B                        l715 127B                        l821 1AEC  
                      l806 1FD0                        l663 16BC                        l807 1FDA  
                      l680 1775                        l737 13BA                        l665 169A  
                      l739 13C8                        l659 1623                        l693 17DD  
                      l767 0CAA                        l793 1F7A                        l799 1FBA  
                      _GIE 005F                        _RA0 0028                        _RA1 0029  
             __CFG_CPD$OFF 0000                        _MPU 00CA                        _mpu 00D0  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0036               ___flmul@bexp 0037                _sprintf$908 00AA  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             __CFG_LVP$OFF 0000               ___fltol@exp1 005B                       l3103 10EB  
                     l3201 1224                       l3121 1124                       l3107 10F4  
                     l3301 1D6A                       l3141 1167                       l3045 158F  
                     l3061 0DA9                       l3303 1D7A                       l3311 1DA5  
                     l3207 1A99                       l3039 14E2                       l2511 1CD2  
                     l3071 0E5F                       l2441 0819                       l3241 1F24  
                     l3129 1144                       l2451 0851                       l2443 0829  
                     l3227 1CC6                       l2603 15EE                       l3307 1D98  
                     l3155 118E                       l3139 1157                       l2523 1CDF  
                     l2515 1CD9                       l3067 0E34                       l3411 00FB  
                     l3237 1EFE                       l2701 16EB                       l3261 1E68  
                     l3333 1F89                       l3181 11ED                       l3173 11C5  
                     l3149 117A                       l2525 1CED                       l2533 1D06  
                     l3085 0FD5                       l2455 085E                       l2703 16ED  
                     l2711 16FD                       l2631 161B                       l2607 15F1  
                     l3327 1F72                       l3191 1201                       l3159 1197  
                     l2551 1C4C                       l3079 0F4A                       l3431 014E  
                     l2721 1767                       l2609 15F9                       l3281 1E98  
                     l3265 1E71                       l3361 1FF7                       l3337 1F8D  
                     l3193 1211                       l2801 09C9                       l2553 1C5A  
                     l3097 000F                       l2473 1E19                       l2537 1D0E  
                     l2529 1CFB                       l3601 0758                       l3513 0465  
                     l3425 010E                       l3371 10D5                       l2627 1618  
                     l3291 1EBB                       l3283 1EA8                       l3347 1FCE  
                     l3339 1F9F                       l2563 1C7B                       l2491 1E45  
                     l2483 1E21                       l2467 1E0E                       l3507 03E1  
                     l3443 0182                       l3435 0153                       l3427 0148  
                     l3381 1AFE                       l2637 162D                       l3349 1FBF  
                     l2901 0C64                       l2581 1BFE                       l2485 1E2F  
                     l3621 078E                       l3525 04A3                       l3453 01C8  
                     l3437 0172                       l2751 17A8                       l2743 179D  
                     l2399 1AE4                       l2911 0C93                       l2815 09E4  
                     l2559 1C70                       l2575 1BE2                       l2495 1E50  
                     l3543 054D                       l3519 0467                       l3623 00DB  
                     l2737 1796                       l2729 1787                       l2745 179F  
                     l2905 0C7A                       l2817 09E6                       l2577 1BF0  
                     l2585 1C09                       l3609 0777                       l3537 053A  
                     l3481 02CC                       l3625 07F0                       l3715 1314  
                     l2755 17AA                       l2675 16A5                       l2667 1669  
                     l2827 09FC                       l2819 09EE                       l2499 1E58  
                     l3571 06E2                       l3741 1353                       l3733 131F  
                     l3709 12F5                       l3717 12D1                       l3653 124D  
                     l2773 17ED                       l2693 16CA                       l2677 16A7  
                     l2685 16B6                       l3557 0586                       l3549 0569  
                     l3493 0378                       l3485 0320                       l3477 02AB  
                     l3469 0222                       l3735 133C                       l3719 1319  
                     l3655 1255                       l3745 1355                       l3673 1273  
                     l3649 124A                       l2777 17F1                       l2881 0C19  
                     l3577 06F3                       l3497 0393                       l3771 13C4  
                     l3755 1387                       l3683 129A                       l2891 0C32  
                     l3595 071C                       l3579 06F8                       l3843 0167  
                     l3669 1270                       l2797 09BF                       l3589 071A  
                     l3759 13A0                       l2887 0C30                       l2879 0BFC  
                     l2799 09C1                       l3689 12A6                       STR_1 10B6  
                     STR_2 10BB                       STR_3 10AF                       STR_4 10A0  
                     u3105 0840                       u3115 0852                       u3035 1AED  
                     u3205 1E46                       u4105 0BA5                       u3075 081D  
                     u4035 0AAC                       u4125 0BCA                       u3405 1BE5  
                     u3165 1E24                       u3095 082B                       u5015 1E99  
                     u3335 1C4F                       u5105 1D88                       u4145 0BE8  
                     u4065 0B09                       u3425 1BF6                       u4305 13F4  
                     u3185 1E30                       u3265 1CE2                       u5115 1D99  
                     u4155 0C00                       u3355 1C5B                       u3435 1BFF  
                     u4315 144E                       u3195 1E3C                       u3700 173C  
                     u3701 173D                       u5045 1EB1                       u5205 1FC7  
                     u4245 0C4F                       u3365 1C67                       u4325 14A3  
                     u3285 1CF3                       u4405 0D1F                       u3702 1742  
                     u3550 1689                       u6007 0017                       u3703 1743  
                     u4255 0C6D                       u4175 0C0B                       u3375 1C71  
                     u3295 1CFC                       u4415 0D6A                       u3560 168A  
                     u6017 1DB5                       u3545 167D                       u4265 0C85  
                     u4345 1503                       u6027 1DC4                       u4355 1550  
                     u4515 0F62                       u4435 0DC1                       _PEIE 005E  
                     u4285 1C20                       u6037 1DD1                       u5085 1D6E  
                     u5245 1FE2                       u5165 1F96                       u4605 1145  
                     u4365 159A                       u4525 0F9E                       u4445 0DFD  
                     u5405 02D7                       u6047 1DDC                       u4535 0FD8  
                     u4455 0E37                       u5415 032B                       u6057 1A7C  
                     u3745 1789                       u5185 1FB2                       u5505 04C0  
                     u6067 1A8E                       u3691 1728                       u3683 170F  
                     u3675 16F1                       u3595 16AB                       u4715 11C7  
                     u4475 0E84                       u4395 0CE3                       u3692 1729  
                     _RCEN 048B                       u3845 17C7                       u3693 172E  
                     u4805 121A                       u4725 11DC                       u4645 1158  
                     u4485 0EC0                       u5525 0556                       u5445 0376  
                     u3694 172F                       u3695 1734                       u4735 11EF  
                     u4495 0F0B                       u5615 071F                       u5535 0563  
                     u3696 1735                       u4921 1F0F                       u4585 1126  
                     u5625 074E                       u5465 046A                       u4922 1F10  
                     u4923 1F15                       u4835 1AA2                       u4675 1170  
                     u4595 1137                       u5555 0606                       u5475 0499  
                     u4924 1F16                       u5805 12E3                       u4941 1F35  
                     u4925 1F1B                       u4845 1AA9                       u5645 075F  
                     u5565 068C                       u4942 1F36                       u4926 1F1C  
                     u4943 1F3B                       u4775 1202                       u5655 076C  
                     u4944 1F3C                       u5825 12EE                       u4945 1F41  
                     u4946 1F42                       u5835 1303                       u5675 07A8  
                     u4885 1CC2                       u5865 1323                       u4985 1E7A  
                     u5955 1372                       u5795 12DA                       u5965 1390  
                     u5885 132E                       u5975 13AB                       u5997 099A  
             __CFG_WRT$OFF 0000                       _main 0867                       _mpu1 00D4  
                     _mpu2 00D2                       btemp 007E                       start 0000  
            __CFG_IESO$OFF 0000            ___fldiv@new_exp 0032    __end_of_oscilator_begin 1A73  
         __end_of_LCD8_cmd 1A97        __size_of_LCD8_begin 0054        __size_of_LCD8_clear 000B  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070            _LCD8_set_cursor 10C3              ___fltol@sign1 005A  
          __end_of___fladd 1800                      ?_main 0070        __size_of_LCD8_write 0010  
          __end_of___fldiv 13D0            __end_of___awdiv 1E5D            __end_of___flneg 0809  
            __CFG_WDTE$OFF 0000            __end_of___awmod 1D13            __end_of___flmul 0CB7  
          __end_of___flsub 1ADA            __end_of___fltol 1ECA                      _ANSEL 0188  
          __end_of___lldiv 0867            ___awdiv@divisor 0077            __end_of___llmod 1DAE  
          __end_of___lwdiv 1C80            __end_of___lwmod 1C0E            ___awdiv@counter 0020  
                    _PORTA 0005                      _PORTB 0006                      _TRISA 0085  
                    _TRISB 0086                      _SSPIE 0463                      _SSPIF 0063  
           __CFG_FCMEN$OFF 0000            __end_of_dpowers 10A0                      _scale 0CB7  
          __end_of_isdigit 0011                      _setup 1B7E             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07F5             __CFG_MCLRE$OFF 0000            __initialization 07F5  
             __end_of_main 09A2                     ??_main 00C3       __size_of__tdiv_to_l_ 00A9  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___llmod@dividend 0024                     ?_scale 003E  
         ___awdiv@dividend 0079                     ?_setup 0070                     _ANSELH 0189  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 2000  
           __CFG_PWRTE$OFF 0000           __end_of__powers_ 1044    __end_of_LCD8_set_cursor 10DA  
                   ___flge 1ECA                     ___fleq 1C80           ?_oscilator_begin 0070  
                ??___fladd 005A                     ___wmul 1A97                  ??___fldiv 0028  
                ??___awdiv 007B                  ??___flneg 0074      __end_of_mpu_data_read 1BDC  
                ??___awmod 0074                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0028  
                ??___lwdiv 007A                  ??___lwmod 0074                     _fround 13D0  
         ___awdiv@quotient 0022            ___awmod@divisor 0070                     _sensor 00D8  
          ___awmod@counter 0075                  ??_isdigit 0070         __size_of__Umul8_16 0023  
             ??_LCD8_begin 0073                  ??_sprintf 00A5               ??_LCD8_clear 0073  
                ?_LCD8_cmd 0070                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ??_LCD8_write 0070               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070                 ___fltol@f1 0051  
   read_data@counter_slave 0079             __pcstackCOMMON 0070              __end_of_scale 1000  
            __end_of_setup 1BAB         __end_of_LCD8_begin 1E02         __end_of_LCD8_clear 1A65  
       __end_of_LCD8_write 1A83                 __div_to_l_ 1183            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0042            __div_to_l_@quot 0020  
                  ??_setup 007E                 ??_LCD8_cmd 0070                 __pbssBANK1 00C6  
    __end_of_LCD8_strWrite 1B25              __div_to_l_@f1 0070              __div_to_l_@f2 0074  
       __size_of_read_data 004D          __end_of__Umul8_16 1AFD                 __pmaintext 0867  
                  ?___flge 0070                    ?___fleq 0070           ?_LCD8_set_cursor 0073  
                  ?___wmul 0070                    ?_fround 003E         __size_of_mpu_begin 00C3  
       __size_of_mpu_start 002D                  ?___xxtofl 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 1000          __end_of__npowers_ 1078  
          __size_of___flge 0093            __size_of___fleq 0048                    ___fladd 15D1  
                  ___fldiv 122D                    ___awdiv 1E02                    ___flneg 0800  
                  ___awmod 1CC8                    ___flmul 09A2                    ___flsub 1AB8  
                  ___fltol 1E5D                    ___lldiv 0809            __size_of___wmul 0021  
                  ___llmod 1D60                    ___lwdiv 1C44                 _fround$905 004D  
               _fround$906 0049                    ___lwmod 1BDC            __size_of_fround 0201  
                  __ptext1 00D4                    __ptext2 0CB7                    __ptext3 1CC8  
                  __ptext4 1E02                    __ptext5 0003                    __ptext6 13D0  
                  __ptext7 1BDC                    __ptext8 1C44                    __ptext9 09A2  
              ?__div_to_l_ 0070                    _counter 00E7                    _dpowers 1078  
                  _isdigit 0003          LCD8_strWrite@data 0072                 ??___xxtofl 0074  
        __end_of_read_data 1D60           ___awmod@dividend 0072   __size_of_I2C_Master_Init 0036  
 __size_of_I2C_Master_Read 002C   __size_of_I2C_Master_Wait 0009   __size_of_I2C_Master_Stop 0007  
                  _sprintf 00D4                    clrloop0 1A4A                    _voltage 00E2  
     end_of_initialization 07FC          __end_of_mpu_begin 00D4          __end_of_mpu_start 1B7E  
__size_of_I2C_Master_Start 0007  __size_of_I2C_Master_Write 0008            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
              ___fladd@grs 0065              ___xxtofl@sign 0078                ___fldiv@grs 0034  
              ___fldiv@rem 002D                ___flmul@grs 0032          __size_of_LCD8_cmd 0014  
      __size_of__div_to_l_ 00AA             __end_of___flge 1F5D             __end_of___fleq 1CC8  
           __end_of___wmul 1AB8             __end_of_fround 15D1   __size_of_oscilator_begin 000E  
      start_initialization 07F5        __end_of__tdiv_to_l_ 1183     __size_of_mpu_data_read 0031  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
             _counter_read 00D6          ??_I2C_Master_Stop 0070            ___llmod@divisor 0020  
          ___llmod@counter 0029   __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 1ADA  
                 ??_fround 0042              sprintf@tmpval 00B7      mpu_start@mpu_register 0074  
                ___fladd@a 0056                  ___fladd@b 0052                 fround@prec 0051  
                ___fldiv@a 0020                  ___fldiv@b 0024                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 0066                  ___flsub@b 006A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00A3                  _adc_value 00C6                sprintf@flag 00AF  
              sprintf@eexp 00B5                sprintf@fval 00BE                sprintf@prec 00BC  
         _I2C_Master_Start 1A33           _I2C_Master_Write 1A41           ___lwdiv@dividend 0078  
                 ?___fladd 0052                   ?___fldiv 0020                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 0024  
                 ?___flsub 0066                   ?___fltol 0051                   ?___lldiv 0070  
                 ?___llmod 0020                  __npowers_ 1044                 ?__Umul8_16 0070  
                 ?___lwdiv 0076                   ?___lwmod 0070              _mpu_data_read 1BAB  
           LCD8_strWrite@i 0075                  __pstrings 1000                __tdiv_to_l_ 10DA  
   __size_of_LCD8_strWrite 0028               ??__div_to_l_ 0078   __size_of_LCD8_set_cursor 0017  
                 ?_isdigit 0070             LCD8_write@data 0071                  _scale$907 004C  
         ___lwdiv@quotient 007B                   ?_sprintf 00A0                  _read_data 1D13  
           __size_of_scale 0349          ??_oscilator_begin 0070             __size_of_setup 002D  
                 _LCD8_cmd 1A83             ___wmul@product 0074                  clear_ram0 1A49  
                _mpu_begin 0011         __end_of__div_to_l_ 122D                  _mpu_start 1B51  
           ?_mpu_data_read 0070                __stringbase 100F          ___wmul@multiplier 0070  
      I2C_Master_Read@temp 0074                 ?_read_data 0076              _LCD8_strWrite 1AFD  
      oscilator_begin@freq 0071                 ?_mpu_begin 0070                 ?_mpu_start 0070  
              ??__Umul8_16 0072           __size_of___fladd 022F           __size_of___fldiv 01A3  
         __size_of___awdiv 005B           __size_of___flneg 0009           __size_of___awmod 004B  
         __size_of___flmul 0315           __size_of___flsub 0022           __size_of___fltol 006D  
         __size_of___lldiv 005E           __size_of___llmod 004E           __size_of___lwdiv 003C  
         __size_of___lwmod 0032         __end_of__stringtab 1010                   _adc_read 00CE  
              _isdigit$692 0070                 sprintf@val 00B1            _I2C_Master_Init 1C0E  
          _I2C_Master_Read 1B25                   ___xxtofl 1F5D            _I2C_Master_Wait 1A51  
          _I2C_Master_Stop 1A3A           __size_of_isdigit 000E            ___lwdiv@divisor 0076  
          ___lwdiv@counter 007D                   __ptext10 1ADA                   __ptext11 10DA  
                 __ptext20 1ECA                   __ptext12 1183                   __ptext21 1C80  
                 __ptext13 1F5D                   __ptext30 1B51                   __ptext22 1B7E  
                 __ptext14 1A97                   __ptext31 1A41                   __ptext23 1A65  
                 __ptext15 1D60                   __ptext40 1A5A                   __ptext32 1A3A  
                 __ptext24 0011                   __ptext16 1E5D                   __ptext41 1A83  
                 __ptext33 1A33                   __ptext25 1DAE                   __ptext17 1AB8  
                 __ptext34 1B25                   __ptext26 1C0E                   __ptext18 15D1  
                 __ptext35 1A51                   __ptext27 0809                   __ptext19 0800  
                 __ptext36 122D                   __ptext28 1D13                   __ptext37 1AFD  
                 __ptext29 1BAB                   __ptext38 1A73                   __ptext39 10C3  
        __CFG_BOR4V$BOR40V 0000                   __powers_ 1010          ??_LCD8_set_cursor 0074  
               _LCD8_begin 1DAE                 _LCD8_clear 1A5A           __size_of_sprintf 0721  
           ?_LCD8_strWrite 0072                 _LCD8_write 1A73              __size_of_main 013B  
             LCD8_cmd@data 0072            ??_mpu_data_read 0076   __end_of_I2C_Master_Start 1A3A  
 __end_of_I2C_Master_Write 1A49         read_data@adc_slave 0076                   isdigit@c 0071  
                 scale@scl 0050                ??_read_data 0077                  sprintf@ap 00AE  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00BB  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
              ??_mpu_begin 0072                  stringcode 100A                 _OSCCONbits 008F  
              ??_mpu_start 0072    __end_of_I2C_Master_Init 1C44    __end_of_I2C_Master_Read 1B51  
  __end_of_I2C_Master_Wait 1A5A    __end_of_I2C_Master_Stop 1A41               ?__tdiv_to_l_ 0070  
          _oscilator_begin 1A65     __Umul8_16@multiplicand 0070                   sprintf@c 00C2  
                 sprintf@f 00A0           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 100A  
                 stringtab 1000                _SSPCON2bits 0091            ??_LCD8_strWrite 0074  
              ?_LCD8_begin 0070              ___fladd@signs 0062                ?_LCD8_clear 0070  
              ?_LCD8_write 0070               ___fladd@aexp 0063               ___fladd@bexp 0064  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
